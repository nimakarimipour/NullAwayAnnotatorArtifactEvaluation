{
    "PROJECTS": [
        {
            "name": "Zuul",
            "size": 13,
            "erorrs": [
                {
                    "url": "https://github.com/nimakarimipour/zuul/blob/docker/zuul-core/src/main/java/com/netflix/zuul/message/http/HttpRequestMessageImpl.java#L96",
                    "position": "private String pathAndQuery = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 0
                },
                {
                    "url": "https://github.com/nimakarimipour/zuul/blob/docker/zuul-core/src/main/java/com/netflix/zuul/netty/insights/PassportStateListener.java#L34",
                    "position": "this.failState = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 1
                },
                {
                    "url": "https://github.com/nimakarimipour/zuul/blob/docker/zuul-core/src/main/java/com/netflix/zuul/message/http/HttpRequestMessageImpl.java#L97",
                    "position": "private String infoForLogging = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 2
                },
                {
                    "url": "https://github.com/nimakarimipour/zuul/blob/docker/zuul-core/src/main/java/com/netflix/zuul/StaticFilterLoader.java#L154",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 3
                },
                {
                    "url": "https://github.com/nimakarimipour/zuul/blob/docker/zuul-core/src/main/java/com/netflix/zuul/netty/filter/BaseZuulFilterRunner.java#L231",
                    "position": "resumer = new FilterChainResumer(inMesg, filter, snapshot, startTime);",
                    "message": " (Covered) passing @Nullable parameter 'snapshot' where @NonNull is required",
                    "index": 4
                },
                {
                    "url": "https://github.com/nimakarimipour/zuul/blob/docker/zuul-core/src/main/java/com/netflix/zuul/netty/server/DirectMemoryMonitor.java#L46",
                    "position": "private static final Supplier<Long> reservedMemoryGetter;",
                    "message": " (Covered) @NonNull static field reservedMemoryGetter not initialized",
                    "index": 5
                },
                {
                    "url": "https://github.com/nimakarimipour/zuul/blob/gc_2/zuul-core/src/main/java/com/netflix/netty/common/channel/config/ChannelConfigKey.java#L38",
                    "position": "this.defaultValue = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 6
                },
                {
                    "url": "https://github.com/nimakarimipour/zuul/blob/gc_2/zuul-core/src/main/java/com/netflix/zuul/netty/server/SocketAddressProperty.java#L91",
                    "position": "addressSupplier = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 7
                },
                {
                    "url": "https://github.com/nimakarimipour/zuul/blob/gc_2/zuul-core/src/main/java/com/netflix/zuul/filters/FilterError.java#L31",
                    "position": "private Throwable exception = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 8
                },
                {
                    "url": "https://github.com/nimakarimipour/zuul/blob/gc_2/zuul-core/src/main/java/com/netflix/zuul/filters/common/SurgicalDebugFilter.java#L76",
                    "position": "DynamicStringProperty routeHost = new DynamicStringProperty(ZuulConstants.ZUUL_DEBUG_HOST, null);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 9
                },
                {
                    "url": "https://github.com/nimakarimipour/zuul/blob/gc_2/zuul-core/src/main/java/com/netflix/zuul/netty/server/ssl/SslHandshakeInfoHandler.java#L87",
                    "position": "SslHandshakeInfo info = new SslHandshakeInfo(isSSlFromIntermediary, session.getProtocol(), session.getCipherSuite(), clientAuth, serverCert, peerCert);",
                    "message": " (Covered) passing @Nullable parameter 'serverCert' where @NonNull is required",
                    "index": 10
                },
                {
                    "url": "https://github.com/nimakarimipour/zuul/blob/gc_2/zuul-core/src/main/java/com/netflix/netty/common/ssl/ServerSslConfig.java#L80",
                    "position": "this.ciphers = ciphers != null ? Arrays.asList(ciphers) : null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 11
                },
                {
                    "url": "https://github.com/nimakarimipour/zuul/blob/gc_2/zuul-core/src/main/java/com/netflix/zuul/message/Headers.java#L95",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 12
                }
            ]
        },
        {
            "name": "SpringBoot",
            "size": 47,
            "erorrs": [
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/docker/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java#L301",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 0
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/docker/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/error/DefaultErrorAttributes.java#L225",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 1
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/docker/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/log4j2/SpringBootConfigurationFactory.java#L58",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 2
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/docker/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/env/SystemEnvironmentPropertySourceEnvironmentPostProcessor.java#L92",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 3
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/docker/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/NoSuchMethodFailureAnalyzer.java#L56",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 4
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/docker/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/ImageBanner.java#L114",
                    "position": "Integer bitDepth = getProperty(environment, \"bitdepth\", Integer.class, null);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 5
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/docker/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/DurationStyle.java#L122",
                    "position": "return print(value, null);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 6
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/docker/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringBootVersion.java#L80",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 7
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/docker/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/Ssl.java#L39",
                    "position": "private String keyPassword;",
                    "message": " (Covered) @NonNull field keyPassword not initialized",
                    "index": 8
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/docker/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jta/atomikos/AtomikosProperties.java#L99",
                    "position": "private String logBaseDir;",
                    "message": " (Covered) @NonNull field logBaseDir not initialized",
                    "index": 9
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/docker/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/DeferredLog.java#L118",
                    "position": "log(LogLevel.DEBUG, message, null);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 10
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/docker/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/admin/SpringApplicationAdminMXBeanRegistrar.java#L68",
                    "position": "public SpringApplicationAdminMXBeanRegistrar(String name) throws MalformedObjectNameException {",
                    "message": " (Covered) initializer method does not guarantee @NonNull field applicationContext (line 58) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 11
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/docker/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/ValidationExceptionFailureAnalyzer.java#L41",
                    "position": "if (cause.getMessage().startsWith(JAVAX_MISSING_IMPLEMENTATION_MESSAGE)",
                    "message": " dereferenced expression cause.getMessage() is @Nullable",
                    "index": 12
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/docker/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/context/WebServerPortFileWriter.java#L130",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 13
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/docker/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/JavaBeanBinder.java#L328",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 14
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/docker/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/view/MustacheViewResolver.java#L52",
                    "position": "public MustacheViewResolver(Compiler compiler) {",
                    "message": " (Covered) initializer method does not guarantee @NonNull field charset (line 36) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 15
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/docker/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowServletWebServer.java#L96",
                    "position": "serverHeader, null, new DeploymentManagerHttpHandlerFactory(manager)), contextPath, autoStart);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 16
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/docker/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/metadata/DataSourcePoolMetadata.java#L61",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 17
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/docker/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowWebServerFactoryDelegate.java#L66",
                    "position": "private String accessLogSuffix;",
                    "message": " (Covered) @NonNull field accessLogSuffix not initialized",
                    "index": 18
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/docker/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/AbstractLoggingSystem.java#L112",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 19
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/docker/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/DataSourceUnwrapper.java#L72",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 20
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/docker/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/BeanCurrentlyInCreationFailureAnalyzer.java#L165",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 21
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/docker/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigDataActivationContext.java#L44",
                    "position": "this.profiles = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 22
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/docker/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/reactive/context/ReactiveWebServerApplicationContext.java#L48",
                    "position": "public ReactiveWebServerApplicationContext() {",
                    "message": " (Covered) initializer method does not guarantee @NonNull fields serverManager (line 41), serverNamespace (line 43) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 23
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/gc_2/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/logging/LoggingApplicationListener.java#L173",
                    "position": "private LoggingSystem loggingSystem;",
                    "message": " (Covered) @NonNull field loggingSystem not initialized",
                    "index": 24
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/gc_2/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/PeriodStyle.java#L158",
                    "position": "return print(value, null);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 25
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/gc_2/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBean.java#L196",
                    "position": "return create(beanName, bean, bean.getClass(), factoryMethod);",
                    "message": " (Covered) passing @Nullable parameter 'factoryMethod' where @NonNull is required",
                    "index": 26
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/gc_2/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource.java#L203",
                    "position": "Mappings(PropertyMapper[] mappers, boolean immutable, boolean trackDescendants) {",
                    "message": " (Covered) initializer method does not guarantee @NonNull fields mappings (line 191), reverseMappings (line 193), descendants (line 195) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 27
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/gc_2/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileApplicationListener.java#L345",
                    "position": "this.profiles.add(null);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 28
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/gc_2/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/task/TaskExecutorBuilder.java#L68",
                    "position": "this.queueCapacity = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 29
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/gc_2/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/ErrorPage.java#L50",
                    "position": "this.status = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 30
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/gc_2/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/BindResult.java#L42",
                    "position": "this.value = value;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 31
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/gc_2/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/DatabaseDriver.java#L104",
                    "position": "JTDS(null, \"net.sourceforge.jtds.jdbc.Driver\"),",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 32
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/gc_2/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBean.java#L256",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 33
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/gc_2/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/webservices/client/WebServiceTemplateBuilder.java#L88",
                    "position": "this.transformerFactoryClass = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 34
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/gc_2/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/DatabaseDriver.java#L87",
                    "position": "REDSHIFT(\"Amazon Redshift\", \"com.amazon.redshift.jdbc.Driver\", null, \"SELECT 1\"),",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 35
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/gc_2/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/system/SystemProperties.java#L41",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 36
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/gc_2/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowServletWebServer.java#L105",
                    "position": "this.manager = findManager(httpHandlerFactories);",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 37
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/gc_2/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java#L113",
                    "position": "return (this.url != null) ? String.format(this.url, databaseName) : null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 38
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/gc_2/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/StringToDurationConverter.java#L66",
                    "position": "return style.parse(source, unit);",
                    "message": " (Covered) passing @Nullable parameter 'unit' where @NonNull is required",
                    "index": 39
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/gc_2/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/origin/OriginTrackedValue.java#L88",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 40
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/gc_2/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java#L277",
                    "position": "int result = compare(e1, type1, e2, type2);",
                    "message": " (Covered) passing @Nullable parameter 'type1' where @NonNull is required",
                    "index": 41
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/gc_2/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigDataProperties.java#L63",
                    "position": "this.activate = activate;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 42
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/gc_2/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/WebFilterHandler.java#L57",
                    "position": "if (dispatcherTypes.length == 0) {",
                    "message": " dereferenced expression dispatcherTypes is @Nullable",
                    "index": 43
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/gc_2/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/LoggingSystem.java#L162",
                    "position": "return loggingSystem;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 44
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/gc_2/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/client/RestTemplateBuilder.java#L110",
                    "position": "this.requestFactory = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 45
                },
                {
                    "url": "https://github.com/nimakarimipour/spring-boot/blob/gc_2/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigDataEnvironmentContributor.java#L277",
                    "position": "return new ConfigDataEnvironmentContributor(Kind.UNBOUND_IMPORT, resource, propertySource, configurationPropertySource, null, ignoreImports, null);",
                    "message": " (Covered) passing @Nullable parameter 'configurationPropertySource' where @NonNull is required",
                    "index": 46
                }
            ]
        },
        {
            "name": "Conductor",
            "size": 12,
            "erorrs": [
                {
                    "url": "https://github.com/nimakarimipour/conductor/blob/74ab3f3c08dc64d2ae3b1a240a338a0065b18f1d/core/src/main/java/com/netflix/conductor/service/MetadataServiceImpl.java#L54",
                    "position": "taskDefinition.setUpdatedBy(null);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 0
                },
                {
                    "url": "https://github.com/nimakarimipour/conductor/blob/74ab3f3c08dc64d2ae3b1a240a338a0065b18f1d/core/src/main/java/com/netflix/conductor/core/orchestration/ExecutionDAOFacade.java#L422",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 1
                },
                {
                    "url": "https://github.com/nimakarimipour/conductor/blob/74ab3f3c08dc64d2ae3b1a240a338a0065b18f1d/core/src/main/java/com/netflix/conductor/core/execution/tasks/SubWorkflow.java#L87",
                    "position": "null,",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 2
                },
                {
                    "url": "https://github.com/nimakarimipour/conductor/blob/74ab3f3c08dc64d2ae3b1a240a338a0065b18f1d/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java#L813",
                    "position": "deciderService.updateWorkflowOutput(workflow, null);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 3
                },
                {
                    "url": "https://github.com/nimakarimipour/conductor/blob/74ab3f3c08dc64d2ae3b1a240a338a0065b18f1d/core/src/main/java/com/netflix/conductor/service/TaskServiceImpl.java#L158",
                    "position": "}, null, null, 3, ackTaskDesc, ackTaskOperation);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 4
                },
                {
                    "url": "https://github.com/nimakarimipour/conductor/blob/gc_2/core/src/main/java/com/netflix/conductor/service/TaskServiceImpl.java#L67",
                    "position": "public Task poll(String taskType, String workerId, String domain) {",
                    "message": " (Covered) method returns @Nullable, but superclass method com.netflix.conductor.service.TaskService.poll(@javax.validation.constraints.NotEmpty(message=\"TaskType cannot be null or empty.\") java.lang.String,java.lang.String,java.lang.String) returns @NonNull",
                    "index": 5
                },
                {
                    "url": "https://github.com/nimakarimipour/conductor/blob/gc_2/core/src/main/java/com/netflix/conductor/core/utils/ExternalPayloadStorageUtils.java#L155",
                    "position": "((Workflow) entity).setInput(null);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 6
                },
                {
                    "url": "https://github.com/nimakarimipour/conductor/blob/gc_2/core/src/main/java/com/netflix/conductor/core/events/DefaultEventProcessor.java#L205",
                    "position": "Map<String, Object> output = new RetryUtil<Map<String, Object>>().retryOnException(() -> actionProcessor.execute(action, payload, eventExecution.getEvent(), eventExecution.getMessageId()), this::isTransientException, null, RETRY_COUNT, description, methodName);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 7
                },
                {
                    "url": "https://github.com/nimakarimipour/conductor/blob/gc_2/core/src/main/java/com/netflix/conductor/core/execution/tasks/ExclusiveJoin.java#L108",
                    "position": "task.setOutputData(exclusiveTask.getOutputData());",
                    "message": " dereferenced expression exclusiveTask is @Nullable",
                    "index": 8
                },
                {
                    "url": "https://github.com/nimakarimipour/conductor/blob/gc_2/core/src/main/java/com/netflix/conductor/service/AdminServiceImpl.java#L45",
                    "position": "this.workflowRepairService = workflowRepairService.orElse(null);",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 9
                },
                {
                    "url": "https://github.com/nimakarimipour/conductor/blob/gc_2/core/src/main/java/com/netflix/conductor/core/utils/ExternalPayloadStorageUtils.java#L190",
                    "position": "task.setInputData(null);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 10
                },
                {
                    "url": "https://github.com/nimakarimipour/conductor/blob/gc_2/core/src/main/java/com/netflix/conductor/core/utils/ExternalPayloadStorageUtils.java#L162",
                    "position": "((Workflow) entity).setOutput(null);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 11
                }
            ]
        },
        {
            "name": "NullAway",
            "size": 10,
            "erorrs": [
                {
                    "url": "https://github.com/nimakarimipour/NullAway/blob/docker/nullaway/src/main/java/com/uber/nullaway/AbstractConfig.java#L63",
                    "position": "protected Pattern fieldAnnotPattern;",
                    "message": " (Covered) @NonNull field fieldAnnotPattern not initialized",
                    "index": 0
                },
                {
                    "url": "https://github.com/nimakarimipour/NullAway/blob/docker/nullaway/src/main/java/com/uber/nullaway/handlers/contract/ContractHandler.java#L110",
                    "position": "clause, node.getTree(), analysis, state, callee, node.getArguments().size());",
                    "message": " (Covered) passing @Nullable parameter 'analysis' where @NonNull is required",
                    "index": 1
                },
                {
                    "url": "https://github.com/nimakarimipour/NullAway/blob/docker/nullaway/src/main/java/com/uber/nullaway/dataflow/DataFlow.java#L288",
                    "position": "private ProcessingEnvironment environment;",
                    "message": " (Covered) @NonNull field DataFlow$CfgParams.environment not initialized",
                    "index": 2
                },
                {
                    "url": "https://github.com/nimakarimipour/NullAway/blob/docker/nullaway/src/main/java/com/uber/nullaway/AbstractConfig.java#L99",
                    "position": "protected String autofixSuppressionComment;",
                    "message": " (Covered) @NonNull field autofixSuppressionComment not initialized",
                    "index": 3
                },
                {
                    "url": "https://github.com/nimakarimipour/NullAway/blob/docker/nullaway/src/main/java/com/uber/nullaway/dataflow/DataFlow.java#L269",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 4
                },
                {
                    "url": "https://github.com/nimakarimipour/NullAway/blob/gc_2Fixer/Projects/NullAway/nullaway/src/main/java/com/uber/nullaway/handlers/contract/ContractHandler.java#L199",
                    "position": "} else if (consequent.equals(\"fail\") && argAntecedentNullness.equals(Nullness.NULLABLE)) {",
                    "message": " dereferenced expression argAntecedentNullness is @Nullable",
                    "index": 5
                },
                {
                    "url": "https://github.com/nimakarimipour/NullAway/blob/gc_2Fixer/Projects/NullAway/nullaway/src/main/java/com/uber/nullaway/dataflow/DataFlow.java#L259",
                    "position": "CfgParams cp = new AutoValue_DataFlow_CfgParams(codePath);",
                    "message": " (Covered) passing @Nullable parameter 'codePath' where @NonNull is required",
                    "index": 6
                },
                {
                    "url": "https://github.com/nimakarimipour/NullAway/blob/gc_2Fixer/Projects/NullAway/nullaway/src/main/java/com/uber/nullaway/AbstractConfig.java#L141",
                    "position": "return annotatedPackages.matcher(className).matches() && !unannotatedSubPackages.matcher(className).matches() && (!treatGeneratedAsUnannotated || !ASTHelpers.hasDirectAnnotationWithSimpleName(symbol, \"Generated\"));",
                    "message": " dereferenced expression unannotatedSubPackages is @Nullable",
                    "index": 7
                },
                {
                    "url": "https://github.com/nimakarimipour/NullAway/blob/gc_2Fixer/Projects/NullAway/nullaway/src/main/java/com/uber/nullaway/handlers/OptionalEmptinessHandler.java#L211",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 8
                },
                {
                    "url": "https://github.com/nimakarimipour/NullAway/blob/gc_2Fixer/Projects/NullAway/nullaway/src/main/java/com/uber/nullaway/handlers/contract/ContractHandler.java#L111",
                    "position": "String consequent = getConsequent(clause, node.getTree(), analysis, state, callee);",
                    "message": " (Covered) passing @Nullable parameter 'analysis' where @NonNull is required",
                    "index": 9
                }
            ]
        },
        {
            "name": "LibGdx",
            "size": 93,
            "erorrs": [
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/maps/objects/TextureMapObject.java#L32",
                    "position": "private TextureRegion textureRegion = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 0
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/BaseShader.java#L148",
                    "position": "return register(uniform, null);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 1
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java#L222",
                    "position": "return regions;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 2
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/utils/Array.java#L678",
                    "position": "public ArrayIterable (Array<T> array, boolean allowRemove) {",
                    "message": " (Covered) initializer method does not guarantee @NonNull fields iterator1 (line 670), iterator2 (line 670) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 3
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/utils/SortedIntList.java#L168",
                    "position": "protected Node<E> n;",
                    "message": " (Covered) @NonNull field SortedIntList$Node.n not initialized",
                    "index": 4
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/utils/ObjectSet.java#L80",
                    "position": "public ObjectSet (int initialCapacity, float loadFactor) {",
                    "message": " (Covered) initializer method does not guarantee @NonNull fields iterator1 (line 64), iterator2 (line 64) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 5
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/utils/Json.java#L276",
                    "position": "this.writer = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 6
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/DynamicsModifier.java#L299",
                    "position": "public CentripetalAcceleration (CentripetalAcceleration rotation) {",
                    "message": " (Covered) initializer method does not guarantee @NonNull fields accelerationChannel (line 293), positionChannel (line 294) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 7
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/utils/I18NBundle.java#L83",
                    "position": "private ObjectMap<String, String> properties;",
                    "message": " (Covered) @NonNull field properties not initialized",
                    "index": 8
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/utils/SharedLibraryLoader.java#L274",
                    "position": "StreamUtils.closeQuietly(output);",
                    "message": " (Covered) passing @Nullable parameter 'output' where @NonNull is required",
                    "index": 9
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/utils/PooledLinkedList.java#L70",
                    "position": "item.prev = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 10
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/utils/reflect/Annotation.java#L18",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 11
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/utils/Queue.java#L507",
                    "position": "public QueueIterable (Queue<T> queue, boolean allowRemove) {",
                    "message": " (Covered) initializer method does not guarantee @NonNull fields iterator1 (line 499), iterator2 (line 499) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 12
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/math/Bezier.java#L125",
                    "position": "public Bezier (final T... points) {",
                    "message": " (Covered) initializer method does not guarantee @NonNull fields tmp (line 118), tmp2 (line 119), tmp3 (line 120) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 13
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/utils/compression/lz/InWindow.java#L56",
                    "position": "_bufferBase = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 14
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java#L96",
                    "position": "public int[] splits;",
                    "message": " (Covered) @NonNull field TextureAtlas$TextureAtlasData$Region.splits not initialized",
                    "index": 15
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/graphics/g3d/model/MeshPart.java#L71",
                    "position": "public MeshPart () {",
                    "message": " (Covered) initializer method does not guarantee @NonNull fields id (line 46), mesh (line 57) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 16
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/utils/ObjectLongMap.java#L83",
                    "position": "public ObjectLongMap (int initialCapacity, float loadFactor) {",
                    "message": " (Covered) initializer method does not guarantee @NonNull fields entries1 (line 65), entries2 (line 65), values1 (line 66), values2 (line 66), keys1 (line 67), keys2 (line 67) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 17
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java#L304",
                    "position": "jsonNode.rotation = rotation == null ? null : new Quaternion(rotation.getFloat(0), rotation.getFloat(1),",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 18
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelNodeAnimation.java#L25",
                    "position": "public String nodeId;",
                    "message": " (Covered) @NonNull field nodeId not initialized",
                    "index": 19
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelMaterial.java#L31",
                    "position": "public Color ambient;",
                    "message": " (Covered) @NonNull field ambient not initialized",
                    "index": 20
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/utils/ComparableTimSort.java#L70",
                    "position": "ComparableTimSort () {",
                    "message": " (Covered) initializer method does not guarantee @NonNull field a (line 37) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 21
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/graphics/Texture.java#L323",
                    "position": "return managedTextures.get(Gdx.app).size;",
                    "message": " dereferenced expression managedTextures.get(Gdx.app) is @Nullable",
                    "index": 22
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/utils/Timer.java#L121",
                    "position": "task.timer = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 23
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/graphics/g2d/PixmapPacker.java#L811",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 24
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/graphics/g3d/particles/batches/BufferedParticleBatch.java#L32",
                    "position": "protected BufferedParticleBatch (Class<T> type) {",
                    "message": " (Covered) initializer method does not guarantee @NonNull field camera (line 30) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 25
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ParticleShader.java#L56",
                    "position": "public String fragmentShader = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 26
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/maps/tiled/BaseTmxMapLoader.java#L361",
                    "position": "if ((gid = element.getAttribute(\"gid\", null)) != null) {",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 27
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/utils/XmlWriter.java#L109",
                    "position": "currentElement = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 28
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/TemporalAction.java#L31",
                    "position": "public TemporalAction () {",
                    "message": " (Covered) initializer method does not guarantee @NonNull field interpolation (line 28) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 29
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/utils/SerializationException.java#L36",
                    "position": "public SerializationException (Throwable cause) {",
                    "message": " (Covered) initializer method does not guarantee @NonNull field trace (line 22) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 30
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/Actions.java#L272",
                    "position": "return alpha(1, duration, null);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 31
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/scenes/scene2d/Action.java#L29",
                    "position": "protected Actor actor;",
                    "message": " (Covered) @NonNull field actor not initialized",
                    "index": 32
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java#L700",
                    "position": "triangle(vertTmp1.set(p1, null, c1, null), vertTmp2.set(p2, null, c2, null), vertTmp3.set(p3, null, c3, null));",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 33
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java#L311",
                    "position": "String meshId = json.getString(\"mesh\", null);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 34
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/assets/loaders/ModelLoader.java#L69",
                    "position": "return loadModel(fileHandle, new TextureProvider.FileTextureProvider(), null);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 35
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java#L540",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 36
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/utils/LongMap.java#L203",
                    "position": "zeroValue = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 37
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/graphics/g3d/utils/shapebuilders/SphereShapeBuilder.java#L67",
                    "position": "VertexInfo curr1 = vertTmp3.set(null, null, null, null);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 38
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java#L631",
                    "position": "public String name;",
                    "message": " (Covered) @NonNull field Skin$TintedDrawable.name not initialized",
                    "index": 39
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/graphics/g3d/utils/DefaultShaderProvider.java#L41",
                    "position": "this(null);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 40
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/graphics/Mesh.java#L927",
                    "position": "return calculateRadius(center.x, center.y, center.z, offset, count, null);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 41
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/graphics/TextureArray.java#L82",
                    "position": "Gdx.gl30.glTexImage3D(GL30.GL_TEXTURE_2D_ARRAY, 0, data.getInternalFormat(), data.getWidth(), data.getHeight(), data.getDepth(), 0, data.getInternalFormat(), data.getGLType(), null);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 42
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java#L486",
                    "position": "return addText(str, x, y, start, end, targetWidth, halign, wrap, null);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 43
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/assets/loaders/BitmapFontLoader.java#L120",
                    "position": "public BitmapFontData bitmapFontData = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 44
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java#L350",
                    "position": "public WindowStyle (BitmapFont titleFont, Color titleFontColor, @Null Drawable background) {",
                    "message": " (Covered) initializer method does not guarantee @NonNull field stageBackground (line 345) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 45
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java#L669",
                    "position": "line(vertTmp1.set(null, null, null, null).setPos(x1, y1, z1), vertTmp2.set(null, null, null, null).setPos(x2, y2, z2));",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 46
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/utils/SnapshotArray.java#L71",
                    "position": "public SnapshotArray (int capacity) {",
                    "message": " (Covered) initializer method does not guarantee @NonNull fields snapshot (line 44), recycled (line 44) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 47
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/graphics/g3d/loader/ObjLoader.java#L185",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 48
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/docker/gdx/src/com/badlogic/gdx/utils/JsonValue.java#L137",
                    "position": "if (child == null) return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 49
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java#L1162",
                    "position": "spaceRight = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 50
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java#L394",
                    "position": "cell.actor = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 51
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSpriteBatch.java#L1221",
                    "position": "invTexWidth = 1.0f / texture.getWidth();",
                    "message": " dereferenced expression texture is @Nullable",
                    "index": 52
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/graphics/g3d/environment/DirectionalShadowLight.java#L122",
                    "position": "fbo = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 53
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java#L272",
                    "position": "this.actor = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 54
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/net/NetJavaSocketImpl.java#L119",
                    "position": "socket = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 55
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/assets/AssetDescriptor.java#L56",
                    "position": "this.params = params;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 56
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/maps/tiled/BaseTmxMapLoader.java#L286",
                    "position": "TiledMapImageLayer layer = new TiledMapImageLayer(texture, x, y);",
                    "message": " (Covered) passing @Nullable parameter 'texture' where @NonNull is required",
                    "index": 57
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/graphics/g3d/particles/values/MeshSpawnShapeValue.java#L96",
                    "position": "this.setMesh(mesh, null);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 58
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ActorGestureListener.java#L56",
                    "position": "public ActorGestureListener(float halfTapSquareSize, float tapCountInterval, float longPressDuration, float maxFlingDelay) {",
                    "message": " (Covered) initializer method does not guarantee @NonNull fields event (line 42), actor (line 44), touchDownTarget (line 44) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 59
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java#L1154",
                    "position": "minHeight = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 60
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/DynamicsModifier.java#L299",
                    "position": "public CentripetalAcceleration(CentripetalAcceleration rotation) {",
                    "message": " (Covered) initializer method does not guarantee @NonNull fields accelerationChannel (line 292), positionChannel (line 294) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 61
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/ParticleControllerInfluencer.java#L179",
                    "position": "public ParticleControllerInfluencer(ParticleController... templates) {",
                    "message": " (Covered) initializer method does not guarantee @NonNull field particleControllerChannel (line 173) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 62
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/graphics/g3d/Model.java#L203",
                    "position": "node.id = modelNode.id;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 63
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/utils/Json.java#L1116",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 64
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/graphics/g2d/PixmapPacker.java#L626",
                    "position": "rect.set(node.rect.x, node.rect.y, node.rect.width - padding, node.rect.height - padding);",
                    "message": " dereferenced expression node is @Nullable",
                    "index": 65
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/utils/PooledLinkedList.java#L177",
                    "position": "n.prev = null;",
                    "message": " dereferenced expression n is @Nullable",
                    "index": 66
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/graphics/g3d/particles/renderers/ModelInstanceControllerRenderData.java#L31",
                    "position": "public ObjectChannel<ModelInstance> modelInstanceChannel;",
                    "message": " (Covered) @NonNull field modelInstanceChannel not initialized",
                    "index": 67
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/graphics/g3d/particles/batches/PointSpriteParticleBatch.java#L90",
                    "position": "renderable.shader = new ParticleShader(renderable, shaderConfig);",
                    "message": " read of @NonNull field renderable before initialization",
                    "index": 68
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/graphics/VertexAttributes.java#L296",
                    "position": "public ReadonlyIterable(T[] array) {",
                    "message": " (Covered) initializer method does not guarantee @NonNull fields iterator1 (line 294), iterator2 (line 294) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 69
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileLayer.java#L93",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 70
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java#L1170",
                    "position": "expandX = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 71
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java#L101",
                    "position": "public ObjectIntMap(int initialCapacity, float loadFactor) {",
                    "message": " (Covered) initializer method does not guarantee @NonNull fields entries1 (line 75), entries2 (line 75), values1 (line 77), values2 (line 77), keys1 (line 79), keys2 (line 79) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 72
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/math/Matrix3.java#L367",
                    "position": "val[M00] = mat.val[Matrix4.M00];",
                    "message": " dereferenced expression mat is @Nullable",
                    "index": 73
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/graphics/g3d/model/Animation.java#L36",
                    "position": "public String id;",
                    "message": " (Covered) @NonNull field id not initialized",
                    "index": 74
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java#L1166",
                    "position": "padRight = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 75
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/graphics/glutils/GLFrameBuffer.java#L169",
                    "position": "int width = bufferBuilder.width;",
                    "message": " read of @NonNull field bufferBuilder before initialization",
                    "index": 76
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/utils/IntMap.java#L225",
                    "position": "return hasZeroValue ? zeroValue : null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 77
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/graphics/Mesh.java#L599",
                    "position": "unbind(shader, null);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 78
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/graphics/g3d/particles/renderers/ParticleControllerRenderData.java#L32",
                    "position": "public FloatChannel positionChannel;",
                    "message": " (Covered) @NonNull field positionChannel not initialized",
                    "index": 79
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/graphics/g3d/Model.java#L144",
                    "position": "animation.id = anim.id;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 80
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddAction.java#L54",
                    "position": "action = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 81
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/utils/ReflectionPool.java#L53",
                    "position": "return ClassReflection.getConstructor(type, (Class[]) null);",
                    "message": " (Covered) passing @Nullable parameter '(Class[]) null' where @NonNull is required",
                    "index": 82
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java#L1013",
                    "position": "listener = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 83
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java#L1182",
                    "position": "table = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 84
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ProgressBar.java#L485",
                    "position": "public ProgressBarStyle(@Null Drawable background, @Null Drawable knob) {",
                    "message": " (Covered) initializer method does not guarantee @NonNull fields disabledBackground (line 470), disabledKnob (line 473), knobBefore (line 476), disabledKnobBefore (line 476), knobAfter (line 479), disabledKnobAfter (line 479) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 85
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/utils/IntMap.java#L107",
                    "position": "public IntMap(int initialCapacity, float loadFactor) {",
                    "message": " (Covered) initializer method does not guarantee @NonNull fields entries1 (line 80), entries2 (line 80), values1 (line 82), values2 (line 82), keys1 (line 84), keys2 (line 84) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 86
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/Gdx.java#L40",
                    "position": "public static Input input;",
                    "message": " (Covered) @NonNull static field input not initialized",
                    "index": 87
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/graphics/g3d/loader/ObjLoader.java#L112",
                    "position": "public ModelData loadModelData(FileHandle file, ObjLoaderParameters parameters) {",
                    "message": " (Covered) method returns @Nullable, but superclass method com.badlogic.gdx.assets.loaders.ModelLoader.loadModelData(com.badlogic.gdx.files.FileHandle,P) returns @NonNull",
                    "index": 88
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java#L735",
                    "position": "this.shadowMap = lighting && renderable.environment.shadowMap != null;",
                    "message": " dereferenced expression renderable.environment is @Nullable",
                    "index": 89
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/utils/compression/lz/BinTree.java#L15",
                    "position": "int[] _son;",
                    "message": " (Covered) @NonNull field _son not initialized",
                    "index": 90
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSpriteBatch.java#L1106",
                    "position": "lastTexture.bind();",
                    "message": " dereferenced expression lastTexture is @Nullable",
                    "index": 91
                },
                {
                    "url": "https://github.com/nimakarimipour/libgdx/blob/gc_1/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/RegionInfluencer.java#L151",
                    "position": "AspectTextureRegion region = regions.get((int) (lifeChannel.data[l] * (regions.size - 1)));",
                    "message": " dereferenced expression lifeChannel is @Nullable",
                    "index": 92
                }
            ]
        },
        {
            "name": "Mockito",
            "size": 14,
            "erorrs": [
                {
                    "url": "https://github.com/nimakarimipour/mockito/blob/70633c4876572343a57b5f718fae8967dae27108/src/main/java/org/mockito/internal/progress/MockingProgressImpl.java#L91",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 0
                },
                {
                    "url": "https://github.com/nimakarimipour/mockito/blob/70633c4876572343a57b5f718fae8967dae27108/src/main/java/org/mockito/internal/creation/bytebuddy/SubclassBytecodeGenerator.java#L65",
                    "position": "this(loader, null, any());",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 1
                },
                {
                    "url": "https://github.com/nimakarimipour/mockito/blob/70633c4876572343a57b5f718fae8967dae27108/src/main/java/org/mockito/internal/util/JavaEightUtil.java#L21",
                    "position": "private static Object emptyOptionalInt;",
                    "message": " (Covered) @NonNull static field emptyOptionalInt not initialized",
                    "index": 2
                },
                {
                    "url": "https://github.com/nimakarimipour/mockito/blob/70633c4876572343a57b5f718fae8967dae27108/src/main/java/org/mockito/internal/framework/DefaultMockitoSession.java#L65",
                    "position": "finishMocking(null);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 3
                },
                {
                    "url": "https://github.com/nimakarimipour/mockito/blob/70633c4876572343a57b5f718fae8967dae27108/src/main/java/org/mockito/internal/exceptions/Reporter.java#L831",
                    "position": "return details.getMessage();",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 4
                },
                {
                    "url": "https://github.com/nimakarimipour/mockito/blob/70633c4876572343a57b5f718fae8967dae27108/src/main/java/org/mockito/internal/handler/MockHandlerImpl.java#L54",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 5
                },
                {
                    "url": "https://github.com/nimakarimipour/mockito/blob/70633c4876572343a57b5f718fae8967dae27108/src/main/java/org/mockito/internal/util/JavaEightUtil.java#L23",
                    "position": "private static Object emptyDuration;",
                    "message": " (Covered) @NonNull static field emptyDuration not initialized",
                    "index": 6
                },
                {
                    "url": "https://github.com/nimakarimipour/mockito/blob/gc_2/src/main/java/org/mockito/internal/stubbing/BaseStubbing.java#L69",
                    "position": "return stubbing;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 7
                },
                {
                    "url": "https://github.com/nimakarimipour/mockito/blob/gc_2/src/main/java/org/mockito/internal/stubbing/answers/DoesNothing.java#L29",
                    "position": "public Object answer(InvocationOnMock invocation) {",
                    "message": " (Covered) method returns @Nullable, but superclass method org.mockito.stubbing.Answer.answer(org.mockito.invocation.InvocationOnMock) returns @NonNull",
                    "index": 8
                },
                {
                    "url": "https://github.com/nimakarimipour/mockito/blob/gc_2/src/main/java/org/mockito/internal/stubbing/defaultanswers/ForwardsInvocations.java#L28",
                    "position": "private Object delegatedObject = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 9
                },
                {
                    "url": "https://github.com/nimakarimipour/mockito/blob/gc_2/src/main/java/org/mockito/internal/handler/NotifiedMethodInvocationReport.java#L33",
                    "position": "this.throwable = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 10
                },
                {
                    "url": "https://github.com/nimakarimipour/mockito/blob/gc_2/src/main/java/org/mockito/internal/runners/DefaultInternalRunner.java#L33",
                    "position": "public Object target;",
                    "message": " (Covered) @NonNull field DefaultInternalRunner$1.target not initialized",
                    "index": 11
                },
                {
                    "url": "https://github.com/nimakarimipour/mockito/blob/gc_2/src/main/java/org/mockito/internal/util/MockUtil.java#L63",
                    "position": "return mockMaker.getHandler(mock);",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 12
                },
                {
                    "url": "https://github.com/nimakarimipour/mockito/blob/gc_2/src/main/java/org/mockito/internal/util/Primitives.java#L61",
                    "position": "return (T) PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.get(primitiveOrWrapperType);",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 13
                }
            ]
        },
        {
            "name": "LottieAndroid",
            "size": 10,
            "erorrs": [
                {
                    "url": "https://github.com/nimakarimipour/lottie-android/blob/gc_2/lottie/src/main/java/com/airbnb/lottie/animation/content/PolystarContent.java#L83",
                    "position": "innerRoundednessAnimation.addUpdateListener(this);",
                    "message": " read of @NonNull field innerRoundednessAnimation before initialization",
                    "index": 0
                },
                {
                    "url": "https://github.com/nimakarimipour/lottie-android/blob/gc_2/lottie/src/main/java/com/airbnb/lottie/parser/PolystarShapeParser.java#L81",
                    "position": "name, type, points, position, rotation, innerRadius, outerRadius,",
                    "message": " (Covered) passing @Nullable parameter 'name' where @NonNull is required",
                    "index": 1
                },
                {
                    "url": "https://github.com/nimakarimipour/lottie-android/blob/gc_2/lottie/src/main/java/com/airbnb/lottie/value/Keyframe.java#L60",
                    "position": "composition = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 2
                },
                {
                    "url": "https://github.com/nimakarimipour/lottie-android/blob/gc_2/lottie/src/main/java/com/airbnb/lottie/parser/moshi/LinkedHashTreeMap.java#L320",
                    "position": "node.parent = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 3
                },
                {
                    "url": "https://github.com/nimakarimipour/lottie-android/blob/gc_2/lottie/src/main/java/com/airbnb/lottie/model/animatable/AnimatableTransform.java#L34",
                    "position": "this(null, null, null, null, null, null, null, null, null);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 4
                },
                {
                    "url": "https://github.com/nimakarimipour/lottie-android/blob/gc_2/lottie/src/main/java/com/airbnb/lottie/animation/keyframe/ValueCallbackKeyframeAnimation.java#L49",
                    "position": "return valueCallback.getValueInternal(0f, 0f, valueCallbackValue, valueCallbackValue, getProgress(), getProgress(), getProgress());",
                    "message": " dereferenced expression valueCallback is @Nullable",
                    "index": 5
                },
                {
                    "url": "https://github.com/nimakarimipour/lottie-android/blob/gc_2/lottie/src/main/java/com/airbnb/lottie/parser/ShapeStrokeParser.java#L127",
                    "position": "name, offset, lineDashPattern, color, opacity, width, capType, joinType, miterLimit, hidden);",
                    "message": " (Covered) passing @Nullable parameter 'name' where @NonNull is required",
                    "index": 6
                },
                {
                    "url": "https://github.com/nimakarimipour/lottie-android/blob/gc_2/lottie/src/main/java/com/airbnb/lottie/TextDelegate.java#L28",
                    "position": "drawable = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 7
                },
                {
                    "url": "https://github.com/nimakarimipour/lottie-android/blob/gc_2/lottie/src/main/java/com/airbnb/lottie/parser/GradientStrokeParser.java#L158",
                    "position": "name, gradientType, color, opacity, startPoint, endPoint, width, capType, joinType,",
                    "message": " (Covered) passing @Nullable parameter 'name' where @NonNull is required",
                    "index": 8
                },
                {
                    "url": "https://github.com/nimakarimipour/lottie-android/blob/gc_2/lottie/src/main/java/com/airbnb/lottie/parser/moshi/LinkedHashTreeMap.java#L259",
                    "position": "node.next = node.prev = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 9
                }
            ]
        },
        {
            "name": "PhotoView",
            "size": 6,
            "erorrs": [
                {
                    "url": "https://github.com/nimakarimipour/PhotoView/blob/d2a1173d74816e96560f4d60115d5fcc30f86b47/photoview/src/main/java/com/github/chrisbanes/photoview/PhotoView.java#L39",
                    "position": "this(context, null);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 0
                },
                {
                    "url": "https://github.com/nimakarimipour/PhotoView/blob/d2a1173d74816e96560f4d60115d5fcc30f86b47/photoview/src/main/java/com/github/chrisbanes/photoview/CustomGestureDetector.java#L154",
                    "position": "mVelocityTracker = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 1
                },
                {
                    "url": "https://github.com/nimakarimipour/PhotoView/blob/d2a1173d74816e96560f4d60115d5fcc30f86b47/photoview/src/main/java/com/github/chrisbanes/photoview/PhotoViewAttacher.java#L718",
                    "position": "mCurrentFlingRunnable = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 2
                },
                {
                    "url": "https://github.com/nimakarimipour/PhotoView/blob/d2a1173d74816e96560f4d60115d5fcc30f86b47/photoview/src/main/java/com/github/chrisbanes/photoview/CustomGestureDetector.java#L183",
                    "position": "mVelocityTracker = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 3
                },
                {
                    "url": "https://github.com/nimakarimipour/PhotoView/blob/d2a1173d74816e96560f4d60115d5fcc30f86b47/photoview/src/main/java/com/github/chrisbanes/photoview/PhotoViewAttacher.java#L588",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 4
                },
                {
                    "url": "https://github.com/nimakarimipour/PhotoView/blob/gc_2/photoview/src/main/java/com/github/chrisbanes/photoview/PhotoViewAttacher.java#L137",
                    "position": "if (mScaleDragDetector.isScaling()) {",
                    "message": " dereferenced expression mScaleDragDetector is @Nullable",
                    "index": 5
                }
            ]
        },
        {
            "name": "Jadx",
            "size": 31,
            "erorrs": [
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/docker/jadx-core/src/main/java/jadx/core/dex/nodes/parser/SignatureParser.java#L51",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 0
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/docker/jadx-core/src/main/java/jadx/core/utils/InsnUtils.java#L119",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 1
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/docker/jadx-core/src/main/java/jadx/api/JavaClass.java#L32",
                    "position": "this.parent = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 2
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/docker/jadx-core/src/main/java/jadx/core/dex/instructions/args/ArgType.java#L604",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 3
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/docker/jadx-core/src/main/java/jadx/core/dex/info/ClassInfo.java#L228",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 4
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/docker/jadx-core/src/main/java/jadx/api/ResourceFile.java#L47",
                    "position": "protected ResourceFile(JadxDecompiler decompiler, String name, ResourceType type) {",
                    "message": " (Covered) initializer method does not guarantee @NonNull fields zipRef (line 37), deobfName (line 38) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 5
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/docker/jadx-core/src/main/java/jadx/api/JadxDecompiler.java#L351",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 6
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/docker/jadx-core/src/main/java/jadx/core/dex/nodes/InsnNode.java#L136",
                    "position": "InsnRemover.unbindArgUsage(null, arg);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 7
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/docker/jadx-core/src/main/java/jadx/core/dex/visitors/SimplifyVisitor.java#L571",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 8
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/docker/jadx-core/src/main/java/jadx/core/dex/visitors/ReSugarCode.java#L277",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 9
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/docker/jadx-core/src/main/java/jadx/core/xmlgen/entry/ValuesParser.java#L21",
                    "position": "private static Map<Integer, String> androidResMap;",
                    "message": " (Covered) @NonNull static field androidResMap not initialized",
                    "index": 10
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/docker/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java#L768",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 11
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/docker/jadx-core/src/main/java/jadx/core/dex/visitors/regions/IfMakerHelper.java#L67",
                    "position": "IfInfo ifInfo = new IfInfo(info, null, null);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 12
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/docker/jadx-core/src/main/java/jadx/core/dex/visitors/MarkFinallyVisitor.java#L303",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 13
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/docker/jadx-core/src/main/java/jadx/core/utils/BlockUtils.java#L503",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 14
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/docker/jadx-core/src/main/java/jadx/core/utils/kotlin/KotlinMetadataUtils.java#L31",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 15
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/docker/jadx-core/src/main/java/jadx/core/dex/nodes/RootNode.java#L276",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 16
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/docker/jadx-core/src/main/java/jadx/api/JadxDecompiler.java#L90",
                    "position": "public JadxDecompiler(JadxArgs args) {",
                    "message": " (Covered) initializer method does not guarantee @NonNull fields root (line 76), classes (line 77), resources (line 78), xmlParser (line 80) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 17
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/docker/jadx-core/src/main/java/jadx/core/dex/instructions/ArithNode.java#L75",
                    "position": "ArithNode insn = new ArithNode(op, null, res, a);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 18
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/docker/jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java#L363",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 19
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/docker/jadx-core/src/main/java/jadx/core/dex/visitors/SimplifyVisitor.java#L411",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 20
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/gc_2/jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java#L356",
                    "position": "return enterBlock;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 21
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/gc_2/jadx-core/src/main/java/jadx/core/dex/instructions/args/RegisterArg.java#L99",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 22
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/gc_2/jadx-core/src/main/java/jadx/core/dex/instructions/FillArrayData.java#L34",
                    "position": "this(payload.getData(), payload.getSize(), payload.getElementSize());",
                    "message": " dereferenced expression payload is @Nullable",
                    "index": 23
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/gc_2/jadx-core/src/main/java/jadx/core/utils/InsnUtils.java#L161",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 24
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/gc_2/jadx-core/src/main/java/jadx/core/xmlgen/entry/EntryConfig.java#L138",
                    "position": "this.localeScript = localeScript;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 25
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/gc_2/jadx-core/src/main/java/jadx/core/dex/visitors/regions/IfMakerHelper.java#L41",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 26
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/gc_2/jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java#L115",
                    "position": "this.codeReader = codeReader.copy();",
                    "message": " dereferenced expression codeReader is @Nullable",
                    "index": 27
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/gc_2/jadx-core/src/main/java/jadx/core/dex/nodes/parser/SignatureParser.java#L164",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 28
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/gc_2/jadx-core/src/main/java/jadx/core/utils/InsnUtils.java#L176",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 29
                },
                {
                    "url": "https://github.com/nimakarimipour/jadx/blob/gc_2/jadx-core/src/main/java/jadx/api/JadxDecompiler.java#L340",
                    "position": "javaClass.getMethods().forEach(mth -> methodsMap.put(mth.getMethodNode(), mth));",
                    "message": " dereferenced expression javaClass is @Nullable",
                    "index": 30
                }
            ]
        },
        {
            "name": "Retrofit",
            "size": 10,
            "erorrs": [
                {
                    "url": "https://github.com/nimakarimipour/retrofit/blob/docker/retrofit/src/main/java/retrofit2/ParameterHandler.java#L234",
                    "position": "builder.addHeader(headerName, valueConverter.convert(headerValue));",
                    "message": " (Covered) passing @Nullable parameter 'valueConverter.convert(headerValue)' where @NonNull is required",
                    "index": 0
                },
                {
                    "url": "https://github.com/nimakarimipour/retrofit/blob/docker/retrofit/src/main/java/retrofit2/ParameterHandler.java#L154",
                    "position": "builder.addQueryParam(nameConverter.convert(value), null, encoded);",
                    "message": " (Covered) passing @Nullable parameter 'nameConverter.convert(value)' where @NonNull is required",
                    "index": 1
                },
                {
                    "url": "https://github.com/nimakarimipour/retrofit/blob/docker/retrofit/src/main/java/retrofit2/ParameterHandler.java#L116",
                    "position": "builder.addPathParam(name, valueConverter.convert(value), encoded);",
                    "message": " (Covered) passing @Nullable parameter 'valueConverter.convert(value)' where @NonNull is required",
                    "index": 2
                },
                {
                    "url": "https://github.com/nimakarimipour/retrofit/blob/docker/retrofit/src/main/java/retrofit2/RequestFactory.java#L85",
                    "position": "httpMethod = builder.httpMethod;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 3
                },
                {
                    "url": "https://github.com/nimakarimipour/retrofit/blob/docker/retrofit/src/main/java/retrofit2/ParameterHandler.java#L406",
                    "position": "builder.addPart(headers, valueConverter.convert(entryValue));",
                    "message": " (Covered) passing @Nullable parameter 'valueConverter.convert(entryValue)' where @NonNull is required",
                    "index": 4
                },
                {
                    "url": "https://github.com/nimakarimipour/retrofit/blob/gc_1/retrofit/src/main/java/retrofit2/RequestFactory.java#L791",
                    "position": "ParameterHandler<?> otherHandler = parameterHandlers[i];",
                    "message": " dereferenced expression parameterHandlers is @Nullable",
                    "index": 5
                },
                {
                    "url": "https://github.com/nimakarimipour/retrofit/blob/gc_1/retrofit/src/main/java/retrofit2/RequestBuilder.java#L221",
                    "position": "multipartBuilder.addPart(part);",
                    "message": " dereferenced expression multipartBuilder is @Nullable",
                    "index": 6
                },
                {
                    "url": "https://github.com/nimakarimipour/retrofit/blob/gc_1/retrofit/src/main/java/retrofit2/RequestBuilder.java#L216",
                    "position": "multipartBuilder.addPart(headers, body);",
                    "message": " dereferenced expression multipartBuilder is @Nullable",
                    "index": 7
                },
                {
                    "url": "https://github.com/nimakarimipour/retrofit/blob/gc_1/retrofit/src/main/java/retrofit2/OkHttpCall.java#L148",
                    "position": "call.enqueue(",
                    "message": " dereferenced expression call is @Nullable",
                    "index": 8
                },
                {
                    "url": "https://github.com/nimakarimipour/retrofit/blob/gc_1/retrofit/src/main/java/retrofit2/RequestBuilder.java#L198",
                    "position": "urlBuilder.addEncodedQueryParameter(name, value);",
                    "message": " dereferenced expression urlBuilder is @Nullable",
                    "index": 9
                }
            ]
        },
        {
            "name": "Gson",
            "size": 14,
            "erorrs": [
                {
                    "url": "https://github.com/nimakarimipour/gson/blob/docker/gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java#L186",
                    "position": "return key != null ? find((K) key, false) : null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 0
                },
                {
                    "url": "https://github.com/nimakarimipour/gson/blob/docker/gson/src/main/java/com/google/gson/internal/bind/CollectionTypeAdapterFactory.java#L49",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 1
                },
                {
                    "url": "https://github.com/nimakarimipour/gson/blob/docker/gson/src/main/java/com/google/gson/internal/Excluder.java#L119",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 2
                },
                {
                    "url": "https://github.com/nimakarimipour/gson/blob/docker/gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java#L672",
                    "position": "private Node<K, V> stack;",
                    "message": " (Covered) @NonNull field LinkedHashTreeMap$AvlBuilder.stack not initialized",
                    "index": 3
                },
                {
                    "url": "https://github.com/nimakarimipour/gson/blob/docker/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java#L453",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 4
                },
                {
                    "url": "https://github.com/nimakarimipour/gson/blob/gc_2/gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java#L782",
                    "position": "if (stackTop.parent != null) {",
                    "message": " dereferenced expression stackTop is @Nullable",
                    "index": 5
                },
                {
                    "url": "https://github.com/nimakarimipour/gson/blob/gc_2/gson/src/main/java/com/google/gson/stream/JsonReader.java#L855",
                    "position": "return result;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 6
                },
                {
                    "url": "https://github.com/nimakarimipour/gson/blob/gc_2/gson/src/main/java/com/google/gson/internal/bind/TypeAdapters.java#L470",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 7
                },
                {
                    "url": "https://github.com/nimakarimipour/gson/blob/gc_2/gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java#L129",
                    "position": "e.next = e.prev = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 8
                },
                {
                    "url": "https://github.com/nimakarimipour/gson/blob/gc_2/gson/src/main/java/com/google/gson/internal/Excluder.java#L131",
                    "position": "private TypeAdapter<T> delegate;",
                    "message": " (Covered) @NonNull field Excluder$1.delegate not initialized",
                    "index": 9
                },
                {
                    "url": "https://github.com/nimakarimipour/gson/blob/gc_2/gson/src/main/java/com/google/gson/internal/reflect/UnsafeReflectionAccessor.java#L60",
                    "position": "Method method = unsafeClass.getMethod(\"objectFieldOffset\", Field.class);",
                    "message": " dereferenced expression unsafeClass is @Nullable",
                    "index": 10
                },
                {
                    "url": "https://github.com/nimakarimipour/gson/blob/gc_2/gson/src/main/java/com/google/gson/Gson.java#L223",
                    "position": "this.datePattern = datePattern;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 11
                },
                {
                    "url": "https://github.com/nimakarimipour/gson/blob/gc_2/gson/src/main/java/com/google/gson/internal/LinkedTreeMap.java#L459",
                    "position": "key = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 12
                },
                {
                    "url": "https://github.com/nimakarimipour/gson/blob/gc_2/gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java#L650",
                    "position": "n.parent = stackTop;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 13
                }
            ]
        },
        {
            "name": "EventBus",
            "size": 10,
            "erorrs": [
                {
                    "url": "https://github.com/nimakarimipour/EventBus/blob/docker/src/org/greenrobot/eventbus/EventBus.java#L417",
                    "position": "postingState.event = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 0
                },
                {
                    "url": "https://github.com/nimakarimipour/EventBus/blob/docker/src/org/greenrobot/eventbus/util/ErrorDialogManager.java#L191",
                    "position": "attachTo(activity, false, null);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 1
                },
                {
                    "url": "https://github.com/nimakarimipour/EventBus/blob/docker/src/org/greenrobot/eventbus/EventBus.java#L418",
                    "position": "postingState.subscription = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 2
                },
                {
                    "url": "https://github.com/nimakarimipour/EventBus/blob/docker/src/org/greenrobot/eventbus/PendingPost.java#L49",
                    "position": "pendingPost.subscription = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 3
                },
                {
                    "url": "https://github.com/nimakarimipour/EventBus/blob/docker/src/org/greenrobot/eventbus/SubscriberMethodFinder.java#L226",
                    "position": "subscriberInfo = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 4
                },
                {
                    "url": "https://github.com/nimakarimipour/EventBus/blob/gc_2/EventBus/src/org/greenrobot/eventbus/util/ErrorDialogManager.java#L143",
                    "position": "eventBus.unregister(this);",
                    "message": " dereferenced expression eventBus is @Nullable",
                    "index": 5
                },
                {
                    "url": "https://github.com/nimakarimipour/EventBus/blob/gc_2/EventBus/src/org/greenrobot/eventbus/EventBus.java#L527",
                    "position": "if (subscription.active) {",
                    "message": " dereferenced expression subscription is @Nullable",
                    "index": 6
                },
                {
                    "url": "https://github.com/nimakarimipour/EventBus/blob/gc_2/EventBus/src/org/greenrobot/eventbus/SubscriberMethodFinder.java#L286",
                    "position": "clazz = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 7
                },
                {
                    "url": "https://github.com/nimakarimipour/EventBus/blob/gc_2/EventBus/src/org/greenrobot/eventbus/util/ErrorDialogManager.java#L183",
                    "position": "public static ErrorDialogFragmentFactory<?> factory;",
                    "message": " (Covered) @NonNull static field factory not initialized",
                    "index": 8
                },
                {
                    "url": "https://github.com/nimakarimipour/EventBus/blob/gc_2/EventBus/src/org/greenrobot/eventbus/EventBus.java#L141",
                    "position": "mainThreadPoster = mainThreadSupport != null ? mainThreadSupport.createPoster(this) : null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 9
                }
            ]
        },
        {
            "name": "LitiEngine",
            "size": 34,
            "erorrs": [
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/docker/src/de/gurkenlabs/litiengine/entities/Entity.java#L512",
                    "position": "this.environment = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 0
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/docker/src/de/gurkenlabs/litiengine/environment/tilemap/xml/ImageLayer.java#L16",
                    "position": "private MapImage image;",
                    "message": " (Covered) @NonNull field image not initialized",
                    "index": 1
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/docker/src/de/gurkenlabs/litiengine/environment/tilemap/MapUtilities.java#L193",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 2
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/docker/src/de/gurkenlabs/litiengine/environment/tilemap/xml/Text.java#L22",
                    "position": "private Integer pixelsize;",
                    "message": " (Covered) @NonNull field pixelsize not initialized",
                    "index": 3
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/docker/src/de/gurkenlabs/litiengine/entities/SoundSource.java#L43",
                    "position": "public SoundSource(Sound sound) {",
                    "message": " (Covered) initializer method does not guarantee @NonNull fields sound (line 27), playback (line 28) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 4
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/docker/src/de/gurkenlabs/litiengine/environment/tilemap/xml/CustomPropertyProvider.java#L55",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 5
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/docker/src/de/gurkenlabs/litiengine/environment/tilemap/xml/Text.java#L38",
                    "position": "private Integer underline;",
                    "message": " (Covered) @NonNull field underline not initialized",
                    "index": 6
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/docker/src/de/gurkenlabs/litiengine/environment/GameWorld.java#L62",
                    "position": "public GameWorld() {",
                    "message": " (Covered) initializer method does not guarantee @NonNull fields environment (line 51), camera (line 52) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 7
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/docker/src/de/gurkenlabs/litiengine/util/io/URLAdapter.java#L44",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 8
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/docker/src/de/gurkenlabs/litiengine/entities/Entity.java#L318",
                    "position": "this.boundingBox = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 9
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/docker/src/de/gurkenlabs/litiengine/environment/tilemap/xml/TileLayer.java#L38",
                    "position": "public TileLayer(TileData data) {",
                    "message": " (Covered) initializer method does not guarantee @NonNull fields tileList (line 21), tiles (line 23) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 10
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/docker/src/de/gurkenlabs/litiengine/resources/Sounds.java#L44",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 11
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/docker/src/de/gurkenlabs/litiengine/resources/SpritesheetResource.java#L35",
                    "position": "public SpritesheetResource() {",
                    "message": " (Covered) initializer method does not guarantee @NonNull fields imageformat (line 26), image (line 29), keyframes (line 32) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 12
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/docker/src/de/gurkenlabs/litiengine/resources/Resources.java#L321",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 13
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/docker/src/de/gurkenlabs/litiengine/gui/GuiProperties.java#L16",
                    "position": "private static Font defaultFont;",
                    "message": " (Covered) @NonNull static field defaultFont not initialized",
                    "index": 14
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/docker/src/de/gurkenlabs/litiengine/resources/Strings.java#L56",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 15
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/docker/src/de/gurkenlabs/litiengine/util/geom/GeometricUtilities.java#L251",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 16
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/gc_2/src/de/gurkenlabs/litiengine/gui/DropdownListField.java#L40",
                    "position": "public DropdownListField(final double x, final double y, final double width, final double height, final Object[] content, final int elementsShown) {",
                    "message": " (Covered) initializer method does not guarantee @NonNull fields contentList (line 23), dropDownButton (line 28) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 17
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/gc_2/src/de/gurkenlabs/litiengine/physics/StickyForce.java#L32",
                    "position": "this.forceEntiy = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 18
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/gc_2/src/de/gurkenlabs/litiengine/entities/EntityControllers.java#L52",
                    "position": "controller.detach();",
                    "message": " dereferenced expression controller is @Nullable",
                    "index": 19
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/gc_2/src/de/gurkenlabs/litiengine/environment/tilemap/xml/ImageLayer.java#L15",
                    "position": "private MapImage image;",
                    "message": " (Covered) @NonNull field image not initialized",
                    "index": 20
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/gc_2/src/de/gurkenlabs/litiengine/environment/tilemap/xml/MapObject.java#L222",
                    "position": "public IPolyShape getPolygon() {",
                    "message": " (Covered) method returns @Nullable, but superclass method de.gurkenlabs.litiengine.environment.tilemap.IMapObject.getPolygon() returns @NonNull",
                    "index": 21
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/gc_2/src/de/gurkenlabs/litiengine/environment/tilemap/MapObjectType.java#L33",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 22
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/gc_2/src/de/gurkenlabs/litiengine/environment/tilemap/xml/TileLayer.java#L88",
                    "position": "return this.tileList;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 23
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/gc_2/src/de/gurkenlabs/litiengine/resources/ResourcesContainer.java#L391",
                    "position": "String alias = this.getAlias(identifier, newResource);",
                    "message": " (Covered) passing @Nullable parameter 'newResource' where @NonNull is required",
                    "index": 24
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/gc_2/src/de/gurkenlabs/litiengine/entities/StaticShadow.java#L118",
                    "position": "this.origin = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 25
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/gc_2/src/de/gurkenlabs/litiengine/environment/tilemap/MapOrientations.java#L90",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 26
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/gc_2/src/de/gurkenlabs/litiengine/environment/Environment.java#L496",
                    "position": "this.miscEntities.get(renderType).clear();",
                    "message": " dereferenced expression this.miscEntities.get(renderType) is @Nullable",
                    "index": 27
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/gc_2/src/de/gurkenlabs/litiengine/resources/Spritesheets.java#L97",
                    "position": "return new Spritesheet(image, path, spriteWidth, spriteHeight);",
                    "message": " (Covered) passing @Nullable parameter 'image' where @NonNull is required",
                    "index": 28
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/gc_2/src/de/gurkenlabs/litiengine/input/Input.java#L57",
                    "position": "return gamePadManager;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 29
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/gc_2/src/de/gurkenlabs/litiengine/gui/ListField.java#L127",
                    "position": "public ListField(final double x, final double y, final double width, final double height, final Object[][] content, final int shownRows, final int shownColumns) {",
                    "message": " (Covered) initializer method does not guarantee @NonNull fields verticalSlider (line 57), horizontalSlider (line 59) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 30
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/gc_2/src/de/gurkenlabs/litiengine/environment/GameWorld.java#L290",
                    "position": "this.setCamera(null);",
                    "message": " (Covered) passing @Nullable parameter 'null' where @NonNull is required",
                    "index": 31
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/gc_2/src/de/gurkenlabs/litiengine/graphics/emitters/EntityEmitter.java#L72",
                    "position": "public Point2D getLocation() {",
                    "message": " (Covered) method returns @Nullable, but superclass method de.gurkenlabs.litiengine.entities.Entity.getLocation() returns @NonNull",
                    "index": 32
                },
                {
                    "url": "https://github.com/nimakarimipour/litiengine/blob/gc_2/src/de/gurkenlabs/litiengine/graphics/Camera.java#L227",
                    "position": "this.focus = new Point2D.Double(this.focus.getX() * diff + this.targetFocus.getX() * (1.0 - diff), this.focus.getY() * diff + this.targetFocus.getY() * (1.0 - diff));",
                    "message": " dereferenced expression this.targetFocus is @Nullable",
                    "index": 33
                }
            ]
        },
        {
            "name": "MPAndroid",
            "size": 10,
            "erorrs": [
                {
                    "url": "https://github.com/nimakarimipour/MPAndroidChart/blob/d76d1229c403e8c0f9aca47ae3a0464e232b0da5/MPChartLib/src/main/java/com/github/mikephil/charting/charts/BarLineChartBase.java#L1645",
                    "position": "return null;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 0
                },
                {
                    "url": "https://github.com/nimakarimipour/MPAndroidChart/blob/d76d1229c403e8c0f9aca47ae3a0464e232b0da5/MPChartLib/src/main/java/com/github/mikephil/charting/data/BaseDataSet.java#L29",
                    "position": "protected List<Integer> mColors = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 1
                },
                {
                    "url": "https://github.com/nimakarimipour/MPAndroidChart/blob/d76d1229c403e8c0f9aca47ae3a0464e232b0da5/MPChartLib/src/main/java/com/github/mikephil/charting/data/PieData.java#L76",
                    "position": "return ignorecase ? label.equalsIgnoreCase(mDataSets.get(0).getLabel()) ? mDataSets.get(0)",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 2
                },
                {
                    "url": "https://github.com/nimakarimipour/MPAndroidChart/blob/d76d1229c403e8c0f9aca47ae3a0464e232b0da5/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/LegendRenderer.java#L116",
                    "position": "label,",
                    "message": " (Covered) passing @Nullable parameter 'label' where @NonNull is required",
                    "index": 3
                },
                {
                    "url": "https://github.com/nimakarimipour/MPAndroidChart/blob/d76d1229c403e8c0f9aca47ae3a0464e232b0da5/MPChartLib/src/main/java/com/github/mikephil/charting/highlight/CombinedHighlighter.java#L24",
                    "position": "public CombinedHighlighter(CombinedDataProvider chart, BarDataProvider barChart) {",
                    "message": " (Covered) initializer method does not guarantee @NonNull field barHighlighter (line 22) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 4
                },
                {
                    "url": "https://github.com/nimakarimipour/MPAndroidChart/blob/gc_2/MPChartLib/src/main/java/com/github/mikephil/charting/charts/CombinedChart.java#L119",
                    "position": "public LineData getLineData() {",
                    "message": " (Covered) method returns @Nullable, but superclass method com.github.mikephil.charting.interfaces.dataprovider.LineDataProvider.getLineData() returns @NonNull",
                    "index": 5
                },
                {
                    "url": "https://github.com/nimakarimipour/MPAndroidChart/blob/gc_2/MPChartLib/src/main/java/com/github/mikephil/charting/renderer/AxisRenderer.java#L53",
                    "position": "this.mTrans = trans;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 6
                },
                {
                    "url": "https://github.com/nimakarimipour/MPAndroidChart/blob/gc_2/MPChartLib/src/main/java/com/github/mikephil/charting/charts/Chart.java#L193",
                    "position": "public Chart(Context context, AttributeSet attrs, int defStyle) {",
                    "message": " (Covered) initializer method does not guarantee @NonNull field mRenderer (line 155) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                    "index": 7
                },
                {
                    "url": "https://github.com/nimakarimipour/MPAndroidChart/blob/gc_2/MPChartLib/src/main/java/com/github/mikephil/charting/utils/Fill.java#L104",
                    "position": "return mGradientColors;",
                    "message": " (Covered) returning @Nullable expression from method with @NonNull return type",
                    "index": 8
                },
                {
                    "url": "https://github.com/nimakarimipour/MPAndroidChart/blob/gc_2/MPChartLib/src/main/java/com/github/mikephil/charting/data/BaseDataSet.java#L33",
                    "position": "protected List<Integer> mValueColors = null;",
                    "message": " (Covered) assigning @Nullable expression to @NonNull field",
                    "index": 9
                }
            ]
        }
    ]
}