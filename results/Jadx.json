{"reports":[{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"is","location":"CLASS_FIELD","class":"jadx.core.xmlgen.CommonBinaryParser","pkg":"jadx.core.xmlgen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/CommonBinaryParser.java","errors":["dereferenced expression is is @Nullable","dereferenced expression is is @Nullable","dereferenced expression is is @Nullable","dereferenced expression is is @Nullable","dereferenced expression is is @Nullable","dereferenced expression is is @Nullable","dereferenced expression is is @Nullable","dereferenced expression is is @Nullable","dereferenced expression is is @Nullable","dereferenced expression is is @Nullable","dereferenced expression is is @Nullable","dereferenced expression is is @Nullable","dereferenced expression is is @Nullable","dereferenced expression is is @Nullable","dereferenced expression is is @Nullable","dereferenced expression is is @Nullable","dereferenced expression is is @Nullable","dereferenced expression is is @Nullable","dereferenced expression is is @Nullable","dereferenced expression is is @Nullable","dereferenced expression is is @Nullable"],"jump":20},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"writer","location":"CLASS_FIELD","class":"jadx.core.xmlgen.BinaryXMLParser","pkg":"jadx.core.xmlgen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/BinaryXMLParser.java","errors":["(Covered) initializer method does not guarantee @NonNull fields nsMap (line 32), nsMapGenerated (line 33), strings (line 38), valuesParser (line 41), resourceIds (line 45), appPackageName (line 48) are initialized along all control-flow paths (remember to check for exceptions or early returns).","dereferenced expression writer is @Nullable","dereferenced expression writer is @Nullable","dereferenced expression writer is @Nullable","dereferenced expression writer is @Nullable","dereferenced expression writer is @Nullable","dereferenced expression writer is @Nullable","dereferenced expression writer is @Nullable","dereferenced expression writer is @Nullable","dereferenced expression writer is @Nullable","dereferenced expression writer is @Nullable","dereferenced expression writer is @Nullable","dereferenced expression writer is @Nullable","(Covered) passing @Nullable parameter 'writer' where @NonNull is required","dereferenced expression writer is @Nullable","dereferenced expression writer is @Nullable","dereferenced expression writer is @Nullable"],"jump":15},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getArrayElement()","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.instructions.args.ArgType","pkg":"jadx.core.dex.instructions.args","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/args/ArgType.java","errors":["(Covered) passing @Nullable parameter 'boundType.getArrayElement()' where @NonNull is required","(Covered) passing @Nullable parameter 'replaceType.getArrayElement()' where @NonNull is required","(Covered) passing @Nullable parameter 'first.getArrayElement()' where @NonNull is required","(Covered) passing @Nullable parameter 'argType.getArrayElement()' where @NonNull is required","(Covered) passing @Nullable parameter 'type.getArrayElement()' where @NonNull is required","(Covered) passing @Nullable parameter 'elemType' where @NonNull is required","(Covered) passing @Nullable parameter 'elType' where @NonNull is required","(Covered) passing @Nullable parameter 'type.getArrayElement()' where @NonNull is required","dereferenced expression elType is @Nullable","(Covered) passing @Nullable parameter 'type.getArrayElement()' where @NonNull is required","(Covered) passing @Nullable parameter 'arrType.getArrayElement()' where @NonNull is required","dereferenced expression insnElementType is @Nullable","(Covered) passing @Nullable parameter 'insnElementType' where @NonNull is required","dereferenced expression insnElementType is @Nullable"],"jump":13},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getGenericTypes()","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.instructions.args.ArgType","pkg":"jadx.core.dex.instructions.args","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/args/ArgType.java","errors":["(Covered) passing @Nullable parameter 'type.getGenericTypes()' where @NonNull is required","(Covered) passing @Nullable parameter 'actualTypes' where @NonNull is required","dereferenced expression actualTypes is @Nullable","(Covered) passing @Nullable parameter 'genericTypes' where @NonNull is required","(Covered) passing @Nullable parameter 'genericTypes' where @NonNull is required","(Covered) passing @Nullable parameter 'firstGenericTypes' where @NonNull is required","(Covered) passing @Nullable parameter 'secondGenericTypes' where @NonNull is required","dereferenced expression firstGenericTypes is @Nullable","dereferenced expression secondGenericTypes is @Nullable","(Covered) passing @Nullable parameter 'argType.getGenericTypes()' where @NonNull is required","(Covered) passing @Nullable parameter 'genericTypes' where @NonNull is required","enhanced-for expression genericTypes is @Nullable"],"jump":12},{"annotation":"org.jetbrains.annotations.Nullable","reason":"ASSIGN_FIELD_NULLABLE","method":"","param":"buf","location":"CLASS_FIELD","class":"jadx.core.codegen.CodeWriter","pkg":"jadx.core.codegen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/CodeWriter.java","errors":["dereferenced expression buf is @Nullable","dereferenced expression buf is @Nullable","dereferenced expression buf is @Nullable","dereferenced expression buf is @Nullable","dereferenced expression buf is @Nullable","dereferenced expression buf is @Nullable","dereferenced expression buf is @Nullable","dereferenced expression buf is @Nullable","dereferenced expression buf is @Nullable","dereferenced expression buf is @Nullable","dereferenced expression buf is @Nullable"],"jump":10},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getPrimitiveType()","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.instructions.args.ArgType","pkg":"jadx.core.dex.instructions.args","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/args/ArgType.java","errors":["dereferenced expression getPrimitiveType() is @Nullable","(Covered) passing @Nullable parameter 'candidateType.getPrimitiveType()' where @NonNull is required","(Covered) passing @Nullable parameter 'candidateType.getPrimitiveType()' where @NonNull is required","dereferenced expression firstPrimitiveType is @Nullable","dereferenced expression argType.getPrimitiveType() is @Nullable","dereferenced expression type.getPrimitiveType() is @Nullable","dereferenced expression stype is @Nullable","switch expression type.getPrimitiveType() is @Nullable","switch expression type.getPrimitiveType() is @Nullable","(Covered) passing @Nullable parameter 'insnElementType.getPrimitiveType()' where @NonNull is required"],"jump":9},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"nameMap","location":"CLASS_FIELD","class":"jadx.core.clsp.ClspGraph","pkg":"jadx.core.clsp","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/clsp/ClspGraph.java","errors":["dereferenced expression nameMap is @Nullable","dereferenced expression nameMap is @Nullable","dereferenced expression nameMap is @Nullable","dereferenced expression nameMap is @Nullable","dereferenced expression nameMap is @Nullable","dereferenced expression nameMap is @Nullable","dereferenced expression nameMap is @Nullable","dereferenced expression nameMap is @Nullable"],"jump":7},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"type","location":"CLASS_FIELD","class":"jadx.core.dex.instructions.args.Typed","pkg":"jadx.core.dex.instructions.args","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/args/Typed.java","errors":["(Covered) passing @Nullable parameter 'arg.type' where @NonNull is required","dereferenced expression type is @Nullable","dereferenced expression this.type is @Nullable","(Covered) passing @Nullable parameter 'type' where @NonNull is required","(Covered) passing @Nullable parameter 'type' where @NonNull is required","(Covered) passing @Nullable parameter 'type' where @NonNull is required"],"jump":7},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"condition","location":"CLASS_FIELD","class":"jadx.core.dex.instructions.mods.TernaryInsn","pkg":"jadx.core.dex.instructions.mods","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/mods/TernaryInsn.java","errors":["(Covered) passing @Nullable parameter 'condition' where @NonNull is required","(Covered) passing @Nullable parameter 'condition' where @NonNull is required","dereferenced expression condition is @Nullable","(Covered) passing @Nullable parameter 'that.condition' where @NonNull is required","dereferenced expression condition is @Nullable","dereferenced expression condition is @Nullable"],"jump":6},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"loops","location":"CLASS_FIELD","class":"jadx.core.dex.nodes.MethodNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields codeReader (line 50), thisArg (line 65), argsList (line 66), instructions (line 67), blocks (line 68), enterBlock (line 69), exitBlocks (line 70), sVars (line 71), exceptionHandlers (line 72), region (line 76) are initialized along all control-flow paths (remember to check for exceptions or early returns).","(Covered) passing @Nullable parameter 'loops' where @NonNull is required","dereferenced expression loops is @Nullable","dereferenced expression loops is @Nullable","dereferenced expression loops is @Nullable","dereferenced expression loops is @Nullable"],"jump":6},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"nsMap","location":"CLASS_FIELD","class":"jadx.core.xmlgen.BinaryXMLParser","pkg":"jadx.core.xmlgen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/BinaryXMLParser.java","errors":["(Covered) initializer method does not guarantee @NonNull fields nsMapGenerated (line 35), writer (line 38), strings (line 39), valuesParser (line 42), resourceIds (line 46), appPackageName (line 49) are initialized along all control-flow paths (remember to check for exceptions or early returns).","dereferenced expression nsMap is @Nullable","dereferenced expression nsMap is @Nullable","dereferenced expression nsMap is @Nullable","dereferenced expression nsMap is @Nullable","dereferenced expression nsMap is @Nullable","dereferenced expression nsMap is @Nullable"],"jump":5},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"exceptionHandlers","location":"CLASS_FIELD","class":"jadx.core.dex.nodes.MethodNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields codeReader (line 50), thisArg (line 65), argsList (line 66), instructions (line 67), blocks (line 68), enterBlock (line 69), exitBlocks (line 70), sVars (line 71), loops (line 75), region (line 76) are initialized along all control-flow paths (remember to check for exceptions or early returns).","dereferenced expression exceptionHandlers is @Nullable","dereferenced expression exceptionHandlers is @Nullable","dereferenced expression exceptionHandlers is @Nullable","dereferenced expression exceptionHandlers is @Nullable"],"jump":5},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"consumeType()","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.nodes.parser.SignatureParser","pkg":"jadx.core.dex.nodes.parser","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/parser/SignatureParser.java","errors":["(Covered) passing @Nullable parameter 'sp.consumeType()' where @NonNull is required","(Covered) passing @Nullable parameter 'parsedRetType' where @NonNull is required","(Covered) passing @Nullable parameter 'parsedRetType' where @NonNull is required","(Covered) passing @Nullable parameter 'consumeType()' where @NonNull is required","(Covered) passing @Nullable parameter 'consumeType()' where @NonNull is required","(Covered) passing @Nullable parameter 'consumeType()' where @NonNull is required","(Covered) passing @Nullable parameter 'gType' where @NonNull is required"],"jump":5},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"typeUpdate","location":"CLASS_FIELD","class":"jadx.core.dex.visitors.typeinference.TypeInferenceVisitor","pkg":"jadx.core.dex.visitors.typeinference","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeInferenceVisitor.java","errors":["dereferenced expression typeUpdate is @Nullable","dereferenced expression typeUpdate is @Nullable","dereferenced expression typeUpdate is @Nullable","dereferenced expression typeUpdate is @Nullable","dereferenced expression typeUpdate is @Nullable","dereferenced expression typeUpdate is @Nullable"],"jump":5},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"root","location":"CLASS_FIELD","class":"jadx.core.dex.visitors.MethodInvokeVisitor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/MethodInvokeVisitor.java","errors":["dereferenced expression root is @Nullable","dereferenced expression root is @Nullable","dereferenced expression root is @Nullable","dereferenced expression root is @Nullable","dereferenced expression root is @Nullable","dereferenced expression root is @Nullable"],"jump":5},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"classes","location":"CLASS_FIELD","class":"jadx.core.clsp.ClsSet","pkg":"jadx.core.clsp","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/clsp/ClsSet.java","errors":["dereferenced expression classes is @Nullable","dereferenced expression classes is @Nullable","dereferenced expression classes is @Nullable","dereferenced expression classes is @Nullable","dereferenced expression classes is @Nullable","enhanced-for expression classes is @Nullable"],"jump":5},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getAliasPkg()","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.info.ClassInfo","pkg":"jadx.core.dex.info","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/info/ClassInfo.java","errors":["(Covered) passing @Nullable parameter 'getAliasPkg()' where @NonNull is required","dereferenced expression getAliasPkg() is @Nullable","dereferenced expression extClsInfo.getAliasPkg() is @Nullable","(Covered) passing @Nullable parameter 'classInfo.getAliasPkg()' where @NonNull is required","dereferenced expression aliasPkg is @Nullable"],"jump":4},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"readArgType(java.io.DataInputStream)","param":"","location":"METHOD_RETURN","class":"jadx.core.clsp.ClsSet","pkg":"jadx.core.clsp","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/clsp/ClsSet.java","errors":["(Covered) initializer method does not guarantee @NonNull field classes (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns).","(Covered) passing @Nullable parameter 'retType' where @NonNull is required","(Covered) passing @Nullable parameter 'genericRetType' where @NonNull is required","(Covered) passing @Nullable parameter 'objType' where @NonNull is required","(Covered) passing @Nullable parameter 'outerType' where @NonNull is required","(Covered) passing @Nullable parameter 'readArgType(in)' where @NonNull is required"],"jump":4},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"sVars","location":"CLASS_FIELD","class":"jadx.core.dex.nodes.MethodNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields codeReader (line 50), thisArg (line 65), argsList (line 66), instructions (line 67), blocks (line 68), enterBlock (line 69), exitBlocks (line 70), exceptionHandlers (line 74), loops (line 75), region (line 76) are initialized along all control-flow paths (remember to check for exceptions or early returns).","dereferenced expression sVars is @Nullable","enhanced-for expression sVars is @Nullable","dereferenced expression sVars is @Nullable"],"jump":4},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"condition","location":"CLASS_FIELD","class":"jadx.core.dex.regions.conditions.IfRegion","pkg":"jadx.core.dex.regions.conditions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/regions/conditions/IfRegion.java","errors":["(Covered) initializer method does not guarantee @NonNull fields conditionBlocks (line 20), thenRegion (line 24), elseRegion (line 25) are initialized along all control-flow paths (remember to check for exceptions or early returns).","(Covered) passing @Nullable parameter 'condition' where @NonNull is required","(Covered) passing @Nullable parameter 'condition' where @NonNull is required"],"jump":3},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"candidateTypes","location":"CLASS_FIELD","class":"jadx.core.dex.visitors.typeinference.TypeSearchVarInfo","pkg":"jadx.core.dex.visitors.typeinference","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeSearchVarInfo.java","errors":["(Covered) initializer method does not guarantee @NonNull fields currentType (line 14), constraints (line 19) are initialized along all control-flow paths (remember to check for exceptions or early returns).","dereferenced expression candidateTypes is @Nullable","dereferenced expression candidateTypes is @Nullable"],"jump":3},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getWildcardBound()","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.instructions.args.ArgType","pkg":"jadx.core.dex.instructions.args","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/args/ArgType.java","errors":["(Covered) passing @Nullable parameter 'type.getWildcardBound()' where @NonNull is required","(Covered) passing @Nullable parameter 'replaceType.getWildcardBound()' where @NonNull is required","dereferenced expression bound is @Nullable","dereferenced expression bound is @Nullable"],"jump":3},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"conditionBlocks","location":"CLASS_FIELD","class":"jadx.core.dex.regions.conditions.IfRegion","pkg":"jadx.core.dex.regions.conditions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/regions/conditions/IfRegion.java","errors":["(Covered) initializer method does not guarantee @NonNull fields condition (line 23), thenRegion (line 24), elseRegion (line 25) are initialized along all control-flow paths (remember to check for exceptions or early returns).","enhanced-for expression conditionBlocks is @Nullable","dereferenced expression conditionBlocks is @Nullable"],"jump":3},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"cleanSuccessors","location":"CLASS_FIELD","class":"jadx.core.dex.nodes.BlockNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/BlockNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields domFrontier (line 38), idom (line 40) are initialized along all control-flow paths (remember to check for exceptions or early returns).","(Covered) passing @Nullable parameter 'cleanSuccessors' where @NonNull is required"],"jump":2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"exitBlocks","location":"CLASS_FIELD","class":"jadx.core.dex.nodes.MethodNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields codeReader (line 50), thisArg (line 65), argsList (line 66), instructions (line 67), blocks (line 68), enterBlock (line 69), sVars (line 73), exceptionHandlers (line 74), loops (line 75), region (line 76) are initialized along all control-flow paths (remember to check for exceptions or early returns).","(Covered) passing @Nullable parameter 'exitBlocks' where @NonNull is required","dereferenced expression this.exitBlocks is @Nullable"],"jump":2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"MethodInlineAttr(jadx.core.dex.nodes.InsnNode,int[])","param":"insn","location":"METHOD_PARAM","class":"jadx.core.dex.attributes.nodes.MethodInlineAttr","pkg":"jadx.core.dex.attributes.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/attributes/nodes/MethodInlineAttr.java","errors":["(Covered) initializer method does not guarantee @NonNull field insn (line 44) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"androidResMap","location":"CLASS_FIELD","class":"jadx.core.xmlgen.entry.ValuesParser","pkg":"jadx.core.xmlgen.entry","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/entry/ValuesParser.java","errors":["dereferenced expression androidResMap is @Nullable","dereferenced expression androidResMap is @Nullable","dereferenced expression androidResMap is @Nullable"],"jump":2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"root","location":"CLASS_FIELD","class":"jadx.core.dex.visitors.typeinference.TypeInferenceVisitor","pkg":"jadx.core.dex.visitors.typeinference","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeInferenceVisitor.java","errors":["(Covered) passing @Nullable parameter 'root' where @NonNull is required","dereferenced expression root is @Nullable","dereferenced expression root is @Nullable"],"jump":2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"elseRegion","location":"CLASS_FIELD","class":"jadx.core.dex.regions.conditions.IfRegion","pkg":"jadx.core.dex.regions.conditions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/regions/conditions/IfRegion.java","errors":["(Covered) initializer method does not guarantee @NonNull fields conditionBlocks (line 20), condition (line 22), thenRegion (line 23) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"PackageChunk(int,java.lang.String,java.lang.String[],java.lang.String[])","param":"typeStrings","location":"METHOD_PARAM","class":"jadx.core.xmlgen.ResTableParser.PackageChunk","pkg":"jadx.core.xmlgen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/ResTableParser.java","errors":["(Covered) initializer method does not guarantee @NonNull field strings (line 66) is initialized along all control-flow paths (remember to check for exceptions or early returns).","(Covered) initializer method does not guarantee @NonNull field typeStrings (line 37) is initialized along all control-flow paths (remember to check for exceptions or early returns).","(Covered) passing @Nullable parameter 'keyStrings' where @NonNull is required"],"jump":2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"elseBlock","location":"CLASS_FIELD","class":"jadx.core.dex.instructions.IfNode","pkg":"jadx.core.dex.instructions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/IfNode.java","errors":["(Covered) initializer method does not guarantee @NonNull field thenBlock (line 22) is initialized along all control-flow paths (remember to check for exceptions or early returns).","(Covered) initializer method does not guarantee @NonNull field thenBlock (line 22) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"arrayData","location":"CLASS_FIELD","class":"jadx.core.dex.instructions.FillArrayInsn","pkg":"jadx.core.dex.instructions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/FillArrayInsn.java","errors":["dereferenced expression arrayData is @Nullable","dereferenced expression arrayData is @Nullable","dereferenced expression arrayData is @Nullable"],"jump":2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"root","location":"CLASS_FIELD","class":"jadx.core.dex.visitors.SignatureProcessor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/SignatureProcessor.java","errors":["dereferenced expression root is @Nullable","dereferenced expression root is @Nullable","dereferenced expression root is @Nullable"],"jump":2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"uses","location":"CLASS_FIELD","class":"jadx.core.dex.visitors.ssa.LiveVarAnalysis","pkg":"jadx.core.dex.visitors.ssa","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/ssa/LiveVarAnalysis.java","errors":["(Covered) initializer method does not guarantee @NonNull fields defs (line 25), liveIn (line 26), assignBlocks (line 27) are initialized along all control-flow paths (remember to check for exceptions or early returns).","dereferenced expression uses is @Nullable","dereferenced expression uses is @Nullable"],"jump":2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"defs","location":"CLASS_FIELD","class":"jadx.core.dex.visitors.ssa.LiveVarAnalysis","pkg":"jadx.core.dex.visitors.ssa","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/ssa/LiveVarAnalysis.java","errors":["(Covered) initializer method does not guarantee @NonNull fields uses (line 23), liveIn (line 27), assignBlocks (line 28) are initialized along all control-flow paths (remember to check for exceptions or early returns).","dereferenced expression defs is @Nullable","dereferenced expression defs is @Nullable"],"jump":2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getCodeStr()","param":"","location":"METHOD_RETURN","class":"jadx.core.codegen.CodeWriter","pkg":"jadx.core.codegen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/CodeWriter.java","errors":["(Covered) passing @Nullable parameter 'cw.getCodeStr()' where @NonNull is required","(Covered) passing @Nullable parameter 'cw.getCodeStr()' where @NonNull is required","(Covered) passing @Nullable parameter 'cw.getCodeStr()' where @NonNull is required"],"jump":2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"thenRegion","location":"CLASS_FIELD","class":"jadx.core.dex.regions.conditions.IfRegion","pkg":"jadx.core.dex.regions.conditions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/regions/conditions/IfRegion.java","errors":["(Covered) initializer method does not guarantee @NonNull fields conditionBlocks (line 20), condition (line 22), elseRegion (line 26) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"thenBlock","location":"CLASS_FIELD","class":"jadx.core.dex.instructions.IfNode","pkg":"jadx.core.dex.instructions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/IfNode.java","errors":["(Covered) initializer method does not guarantee @NonNull field elseBlock (line 24) is initialized along all control-flow paths (remember to check for exceptions or early returns).","(Covered) initializer method does not guarantee @NonNull field elseBlock (line 24) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"assignBlocks","location":"CLASS_FIELD","class":"jadx.core.dex.visitors.ssa.LiveVarAnalysis","pkg":"jadx.core.dex.visitors.ssa","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/ssa/LiveVarAnalysis.java","errors":["(Covered) initializer method does not guarantee @NonNull fields uses (line 23), defs (line 24), liveIn (line 25) are initialized along all control-flow paths (remember to check for exceptions or early returns).","dereferenced expression assignBlocks is @Nullable","dereferenced expression assignBlocks is @Nullable"],"jump":2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getName()","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.instructions.args.RegisterArg","pkg":"jadx.core.dex.instructions.args","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/args/RegisterArg.java","errors":["(Covered) initializer method does not guarantee @NonNull field sVar (line 20) is initialized along all control-flow paths (remember to check for exceptions or early returns).","(Covered) method returns @Nullable, but superclass method jadx.core.dex.instructions.args.Named.getName() returns @NonNull","(Covered) passing @Nullable parameter 'mthArg.getName()' where @NonNull is required","(Covered) passing @Nullable parameter 'oldArgReg.getName()' where @NonNull is required"],"jump":2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"arg","location":"CLASS_FIELD","class":"jadx.core.dex.trycatch.ExceptionHandler","pkg":"jadx.core.dex.trycatch","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/trycatch/ExceptionHandler.java","errors":["(Covered) initializer method does not guarantee @NonNull fields handlerBlock (line 27), handlerRegion (line 29), tryBlock (line 34) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"wrapBlocks(jadx.core.dex.nodes.IRegion,jadx.core.dex.trycatch.TryCatchBlock,jadx.core.dex.nodes.BlockNode)","param":"tb","location":"METHOD_PARAM","class":"jadx.core.dex.visitors.regions.ProcessTryCatchRegions","pkg":"jadx.core.dex.visitors.regions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/regions/ProcessTryCatchRegions.java","errors":["dereferenced expression tb is @Nullable"],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"tryCatchBlock","location":"CLASS_FIELD","class":"jadx.core.dex.regions.TryCatchRegion","pkg":"jadx.core.dex.regions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/regions/TryCatchRegion.java","errors":["(Covered) initializer method does not guarantee @NonNull field finallyRegion (line 22) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"resourceIds","location":"CLASS_FIELD","class":"jadx.core.xmlgen.BinaryXMLParser","pkg":"jadx.core.xmlgen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/BinaryXMLParser.java","errors":["(Covered) initializer method does not guarantee @NonNull fields nsMap (line 32), nsMapGenerated (line 33), writer (line 36), strings (line 37), valuesParser (line 40), appPackageName (line 49) are initialized along all control-flow paths (remember to check for exceptions or early returns).","dereferenced expression resourceIds is @Nullable"],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"simpleValue","location":"CLASS_FIELD","class":"jadx.core.xmlgen.entry.ResourceEntry","pkg":"jadx.core.xmlgen.entry","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/entry/ResourceEntry.java","errors":["(Covered) initializer method does not guarantee @NonNull field namedValues (line 19) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"addEdgeInsn(jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.InsnNode)","param":"start","location":"METHOD_PARAM","class":"jadx.core.dex.attributes.nodes.EdgeInsnAttr","pkg":"jadx.core.dex.attributes.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/attributes/nodes/EdgeInsnAttr.java","errors":["(Covered) passing @Nullable parameter 'start' where @NonNull is required","dereferenced expression start is @Nullable"],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"parse(char)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.instructions.args.ArgType","pkg":"jadx.core.dex.instructions.args","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/args/ArgType.java","errors":[],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"outBlock","location":"CLASS_FIELD","class":"jadx.core.dex.regions.conditions.IfInfo","pkg":"jadx.core.dex.regions.conditions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/regions/conditions/IfInfo.java","errors":["(Covered) initializer method does not guarantee @NonNull field ifBlock (line 23) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getName()","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.instructions.args.SSAVar","pkg":"jadx.core.dex.instructions.args","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/args/SSAVar.java","errors":["(Covered) passing @Nullable parameter 'getName()' where @NonNull is required"],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"curVariable","location":"CLASS_FIELD","class":"jadx.core.export.TemplateFile.ParserState","pkg":"jadx.core.export","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/export/TemplateFile.java","errors":["dereferenced expression parser.curVariable is @Nullable","dereferenced expression parser.curVariable is @Nullable"],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"root","location":"CLASS_FIELD","class":"jadx.api.JadxDecompiler","pkg":"jadx.api","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/api/JadxDecompiler.java","errors":["(Covered) initializer method does not guarantee @NonNull fields classes (line 53), resources (line 54), xmlParser (line 56) are initialized along all control-flow paths (remember to check for exceptions or early returns).","(Covered) passing @Nullable parameter 'root' where @NonNull is required"],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getTopParentClass()","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.info.ClassInfo","pkg":"jadx.core.dex.info","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/info/ClassInfo.java","errors":["(Covered) passing @Nullable parameter 'b' where @NonNull is required","(Covered) passing @Nullable parameter 'b' where @NonNull is required"],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"strings","location":"CLASS_FIELD","class":"jadx.core.xmlgen.BinaryXMLParser","pkg":"jadx.core.xmlgen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/BinaryXMLParser.java","errors":["(Covered) initializer method does not guarantee @NonNull fields nsMap (line 32), nsMapGenerated (line 33), writer (line 36), valuesParser (line 42), resourceIds (line 46), appPackageName (line 49) are initialized along all control-flow paths (remember to check for exceptions or early returns).","dereferenced expression strings is @Nullable"],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"handlerRegion","location":"CLASS_FIELD","class":"jadx.core.dex.trycatch.ExceptionHandler","pkg":"jadx.core.dex.trycatch","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/trycatch/ExceptionHandler.java","errors":["(Covered) initializer method does not guarantee @NonNull fields handlerBlock (line 27), arg (line 32), tryBlock (line 34) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"accessFlags","location":"CLASS_FIELD","class":"jadx.core.dex.nodes.ClassNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields superClass (line 57), smali (line 68), parentClass (line 70) are initialized along all control-flow paths (remember to check for exceptions or early returns).","(Covered) initializer method does not guarantee @NonNull fields superClass (line 57), smali (line 68), clsData (line 51) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"searchNestedIf(jadx.core.dex.regions.conditions.IfInfo)","param":"info","location":"METHOD_PARAM","class":"jadx.core.dex.visitors.regions.IfMakerHelper","pkg":"jadx.core.dex.visitors.regions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/regions/IfMakerHelper.java","errors":["(Covered) passing @Nullable parameter 'info' where @NonNull is required"],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"liveIn","location":"CLASS_FIELD","class":"jadx.core.dex.visitors.ssa.LiveVarAnalysis","pkg":"jadx.core.dex.visitors.ssa","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/ssa/LiveVarAnalysis.java","errors":["(Covered) initializer method does not guarantee @NonNull fields uses (line 23), defs (line 24), assignBlocks (line 28) are initialized along all control-flow paths (remember to check for exceptions or early returns).","dereferenced expression liveIn is @Nullable"],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"body","location":"CLASS_FIELD","class":"jadx.core.dex.regions.loops.LoopRegion","pkg":"jadx.core.dex.regions.loops","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/regions/loops/LoopRegion.java","errors":["(Covered) initializer method does not guarantee @NonNull fields conditionBlock (line 28), preCondition (line 30), type (line 36) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"ifBlock","location":"CLASS_FIELD","class":"jadx.core.dex.regions.conditions.IfInfo","pkg":"jadx.core.dex.regions.conditions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/regions/conditions/IfInfo.java","errors":["(Covered) initializer method does not guarantee @NonNull field outBlock (line 20) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"defTargetBlock","location":"CLASS_FIELD","class":"jadx.core.dex.instructions.SwitchInsn","pkg":"jadx.core.dex.instructions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/SwitchInsn.java","errors":["(Covered) initializer method does not guarantee @NonNull fields modifiedKeys (line 26), targetBlocks (line 27) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"finallyRegion","location":"CLASS_FIELD","class":"jadx.core.dex.regions.TryCatchRegion","pkg":"jadx.core.dex.regions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/regions/TryCatchRegion.java","errors":["(Covered) initializer method does not guarantee @NonNull field tryCatchBlock (line 25) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"outDir","location":"CLASS_FIELD","class":"jadx.api.JadxArgs","pkg":"jadx.api","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/api/JadxArgs.java","errors":["(Covered) initializer method does not guarantee @NonNull fields outDirSrc (line 27), outDirRes (line 28) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"appPackageName","location":"CLASS_FIELD","class":"jadx.core.xmlgen.BinaryXMLParser","pkg":"jadx.core.xmlgen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/BinaryXMLParser.java","errors":["(Covered) initializer method does not guarantee @NonNull fields nsMap (line 32), nsMapGenerated (line 33), writer (line 36), strings (line 37), valuesParser (line 40), resourceIds (line 44) are initialized along all control-flow paths (remember to check for exceptions or early returns).","(Covered) passing @Nullable parameter 'appPackageName' where @NonNull is required"],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"idom","location":"CLASS_FIELD","class":"jadx.core.dex.nodes.BlockNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/BlockNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields cleanSuccessors (line 31), domFrontier (line 36) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"decode(long,java.io.InputStream)","param":"","location":"METHOD_RETURN","class":"jadx.api.ResourcesLoader.ResourceDecoder","pkg":"jadx.api","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/api/ResourcesLoader.java","errors":[],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"zipRef","location":"CLASS_FIELD","class":"jadx.api.ResourceFile","pkg":"jadx.api","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/api/ResourceFile.java","errors":["(Covered) initializer method does not guarantee @NonNull field deobfName (line 42) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"IfInfo(jadx.core.dex.regions.conditions.IfInfo,jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.BlockNode)","param":"thenBlock","location":"METHOD_PARAM","class":"jadx.core.dex.regions.conditions.IfInfo","pkg":"jadx.core.dex.regions.conditions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/regions/conditions/IfInfo.java","errors":["(Covered) initializer method does not guarantee @NonNull fields outBlock (line 20), ifBlock (line 21) are initialized along all control-flow paths (remember to check for exceptions or early returns).","(Covered) passing @Nullable parameter 'thenBlock' where @NonNull is required"],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"TypeBoundConst(jadx.core.dex.visitors.typeinference.BoundEnum,jadx.core.dex.instructions.args.ArgType,jadx.core.dex.instructions.args.RegisterArg)","param":"arg","location":"METHOD_PARAM","class":"jadx.core.dex.visitors.typeinference.TypeBoundConst","pkg":"jadx.core.dex.visitors.typeinference","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeBoundConst.java","errors":["(Covered) initializer method does not guarantee @NonNull field arg (line 13) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"stringGetBytesMth","location":"CLASS_FIELD","class":"jadx.core.dex.visitors.SimplifyVisitor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/SimplifyVisitor.java","errors":["(Covered) passing @Nullable parameter 'stringGetBytesMth' where @NonNull is required","dereferenced expression stringGetBytesMth is @Nullable"],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"strings","location":"CLASS_FIELD","class":"jadx.core.xmlgen.ResTableParser","pkg":"jadx.core.xmlgen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/ResTableParser.java","errors":["(Covered) passing @Nullable parameter 'strings' where @NonNull is required"],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getCls(java.lang.String,java.util.Map<java.lang.String,jadx.core.clsp.ClspClass>)","param":"","location":"METHOD_RETURN","class":"jadx.core.clsp.ClsSet","pkg":"jadx.core.clsp","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/clsp/ClsSet.java","errors":["(Covered) initializer method does not guarantee @NonNull field classes (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"blocks","location":"CLASS_FIELD","class":"jadx.core.dex.nodes.MethodNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields codeReader (line 50), thisArg (line 65), argsList (line 66), instructions (line 67), enterBlock (line 71), exitBlocks (line 72), sVars (line 73), exceptionHandlers (line 74), loops (line 75), region (line 76) are initialized along all control-flow paths (remember to check for exceptions or early returns).","(Covered) passing @Nullable parameter 'blocks' where @NonNull is required"],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"deobfClassName(java.lang.String)","param":"className","location":"METHOD_PARAM","class":"jadx.core.xmlgen.BinaryXMLParser","pkg":"jadx.core.xmlgen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/BinaryXMLParser.java","errors":["(Covered) initializer method does not guarantee @NonNull fields nsMap (line 32), nsMapGenerated (line 33), writer (line 36), strings (line 37), valuesParser (line 40), resourceIds (line 44), appPackageName (line 47) are initialized along all control-flow paths (remember to check for exceptions or early returns).","(Covered) passing @Nullable parameter 'className' where @NonNull is required"],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"validateClsType(jadx.core.dex.nodes.ClassNode,jadx.core.dex.instructions.args.ArgType,jadx.core.dex.instructions.args.ArgType)","param":"currentType","location":"METHOD_PARAM","class":"jadx.core.dex.visitors.SignatureProcessor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/SignatureProcessor.java","errors":[],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"JadxError(java.lang.String,java.lang.Throwable)","param":"cause","location":"METHOD_PARAM","class":"jadx.core.dex.attributes.nodes.JadxError","pkg":"jadx.core.dex.attributes.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/attributes/nodes/JadxError.java","errors":["(Covered) initializer method does not guarantee @NonNull field cause (line 15) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"constraints","location":"CLASS_FIELD","class":"jadx.core.dex.visitors.typeinference.TypeSearchVarInfo","pkg":"jadx.core.dex.visitors.typeinference","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeSearchVarInfo.java","errors":["(Covered) initializer method does not guarantee @NonNull fields currentType (line 14), candidateTypes (line 15) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"outDirRes","location":"CLASS_FIELD","class":"jadx.api.JadxArgs","pkg":"jadx.api","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/api/JadxArgs.java","errors":["(Covered) initializer method does not guarantee @NonNull fields outDir (line 25), outDirSrc (line 26) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"namedValues","location":"CLASS_FIELD","class":"jadx.core.xmlgen.entry.ResourceEntry","pkg":"jadx.core.xmlgen.entry","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/entry/ResourceEntry.java","errors":["(Covered) initializer method does not guarantee @NonNull field simpleValue (line 16) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"currentType","location":"CLASS_FIELD","class":"jadx.core.dex.visitors.typeinference.TypeSearchVarInfo","pkg":"jadx.core.dex.visitors.typeinference","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeSearchVarInfo.java","errors":["(Covered) initializer method does not guarantee @NonNull fields candidateTypes (line 17), constraints (line 19) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"handlerBlock","location":"CLASS_FIELD","class":"jadx.core.dex.trycatch.ExceptionHandler","pkg":"jadx.core.dex.trycatch","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/trycatch/ExceptionHandler.java","errors":["(Covered) initializer method does not guarantee @NonNull fields handlerRegion (line 30), arg (line 31), tryBlock (line 33) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"type","location":"CLASS_FIELD","class":"jadx.core.dex.regions.loops.LoopRegion","pkg":"jadx.core.dex.regions.loops","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/regions/loops/LoopRegion.java","errors":["(Covered) initializer method does not guarantee @NonNull fields conditionBlock (line 28), preCondition (line 30), body (line 31) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"outDirSrc","location":"CLASS_FIELD","class":"jadx.api.JadxArgs","pkg":"jadx.api","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/api/JadxArgs.java","errors":["(Covered) initializer method does not guarantee @NonNull fields outDir (line 25), outDirRes (line 29) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"makeFullClsName(java.lang.String,java.lang.String,jadx.core.dex.info.ClassInfo,boolean,boolean)","param":"pkg","location":"METHOD_PARAM","class":"jadx.core.dex.info.ClassInfo","pkg":"jadx.core.dex.info","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/info/ClassInfo.java","errors":["dereferenced expression pkg is @Nullable"],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"packageAlias","location":"CLASS_FIELD","class":"jadx.core.deobf.PackageNode","pkg":"jadx.core.deobf","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/deobf/PackageNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields cachedPackageFullName (line 23), cachedPackageFullAlias (line 24) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"VarUsage(jadx.core.dex.instructions.args.SSAVar)","param":"var","location":"METHOD_PARAM","class":"jadx.core.dex.visitors.regions.variables.VarUsage","pkg":"jadx.core.dex.visitors.regions.variables","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/regions/variables/VarUsage.java","errors":["(Covered) initializer method does not guarantee @NonNull field var (line 11) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"domFrontier","location":"CLASS_FIELD","class":"jadx.core.dex.nodes.BlockNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/BlockNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields cleanSuccessors (line 31), idom (line 39) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"tryBlock","location":"CLASS_FIELD","class":"jadx.core.dex.trycatch.ExceptionHandler","pkg":"jadx.core.dex.trycatch","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/trycatch/ExceptionHandler.java","errors":["(Covered) initializer method does not guarantee @NonNull fields handlerBlock (line 27), handlerRegion (line 29), arg (line 30) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"name","location":"CLASS_FIELD","class":"jadx.core.dex.instructions.args.VarName","pkg":"jadx.core.dex.instructions.args","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/args/VarName.java","errors":[],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"targetBlocks","location":"CLASS_FIELD","class":"jadx.core.dex.instructions.SwitchInsn","pkg":"jadx.core.dex.instructions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/SwitchInsn.java","errors":["(Covered) initializer method does not guarantee @NonNull fields modifiedKeys (line 26), defTargetBlock (line 30) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"nsMapGenerated","location":"CLASS_FIELD","class":"jadx.core.xmlgen.BinaryXMLParser","pkg":"jadx.core.xmlgen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/BinaryXMLParser.java","errors":["(Covered) initializer method does not guarantee @NonNull fields nsMap (line 32), writer (line 38), strings (line 39), valuesParser (line 42), resourceIds (line 46), appPackageName (line 49) are initialized along all control-flow paths (remember to check for exceptions or early returns).","dereferenced expression nsMapGenerated is @Nullable"],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"valuesParser","location":"CLASS_FIELD","class":"jadx.core.xmlgen.BinaryXMLParser","pkg":"jadx.core.xmlgen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/BinaryXMLParser.java","errors":["(Covered) initializer method does not guarantee @NonNull fields nsMap (line 32), nsMapGenerated (line 33), writer (line 36), strings (line 37), resourceIds (line 46), appPackageName (line 49) are initialized along all control-flow paths (remember to check for exceptions or early returns).","dereferenced expression valuesParser is @Nullable"],"jump":1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"offset","location":"CLASS_FIELD","class":"jadx.core.codegen.json.cls.JsonCodeLine","pkg":"jadx.core.codegen.json.cls","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/cls/JsonCodeLine.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getAnnotation(java.lang.String)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.attributes.EmptyAttrStorage","pkg":"jadx.core.dex.attributes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/attributes/EmptyAttrStorage.java","errors":["(Covered) method returns @Nullable, but superclass method jadx.core.dex.attributes.AttributeStorage.getAnnotation(java.lang.String) returns @NonNull"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"valueOfMths","location":"CLASS_FIELD","class":"jadx.core.dex.visitors.DeboxingVisitor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/DeboxingVisitor.java","errors":["dereferenced expression valueOfMths is @Nullable"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"signature","location":"CLASS_FIELD","class":"jadx.core.codegen.json.cls.JsonMethod","pkg":"jadx.core.codegen.json.cls","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/cls/JsonMethod.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"innerClasses","location":"CLASS_FIELD","class":"jadx.core.codegen.json.cls.JsonClass","pkg":"jadx.core.codegen.json.cls","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/cls/JsonClass.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"instance","location":"CLASS_FIELD","class":"jadx.core.xmlgen.ManifestAttributes","pkg":"jadx.core.xmlgen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/ManifestAttributes.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"lines","location":"CLASS_FIELD","class":"jadx.core.codegen.json.cls.JsonMethod","pkg":"jadx.core.codegen.json.cls","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/cls/JsonMethod.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"signature","location":"CLASS_FIELD","class":"jadx.core.codegen.json.mapping.JsonMthMapping","pkg":"jadx.core.codegen.json.mapping","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/mapping/JsonMthMapping.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"fixInfoMap","location":"CLASS_FIELD","class":"jadx.core.dex.visitors.ShadowFieldVisitor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/ShadowFieldVisitor.java","errors":["(Covered) passing @Nullable parameter 'fixInfoMap' where @NonNull is required"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"resolvers","location":"CLASS_FIELD","class":"jadx.core.dex.visitors.typeinference.TypeInferenceVisitor","pkg":"jadx.core.dex.visitors.typeinference","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeInferenceVisitor.java","errors":["enhanced-for expression resolvers is @Nullable"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"addFieldInitAttr(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.FieldNode,jadx.core.dex.nodes.InsnNode)","param":"field","location":"METHOD_PARAM","class":"jadx.core.dex.visitors.ExtractFieldInit","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/ExtractFieldInit.java","errors":["dereferenced expression field is @Nullable"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"returnType","location":"CLASS_FIELD","class":"jadx.core.codegen.json.cls.JsonMethod","pkg":"jadx.core.codegen.json.cls","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/cls/JsonMethod.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"restructureIf(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,jadx.core.dex.regions.conditions.IfInfo)","param":"info","location":"METHOD_PARAM","class":"jadx.core.dex.visitors.regions.IfMakerHelper","pkg":"jadx.core.dex.visitors.regions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/regions/IfMakerHelper.java","errors":["dereferenced expression info is @Nullable"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"cls","location":"CLASS_FIELD","class":"jadx.core.dex.attributes.nodes.EnumClassAttr.EnumField","pkg":"jadx.core.dex.attributes.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/attributes/nodes/EnumClassAttr.java","errors":["(Covered) initializer method does not guarantee @NonNull field staticMethod (line 51) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getTopParentClass()","param":"","location":"METHOD_RETURN","class":"jadx.api.JavaPackage","pkg":"jadx.api","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/api/JavaPackage.java","errors":["(Covered) method returns @Nullable, but superclass method jadx.api.JavaNode.getTopParentClass() returns @NonNull"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"fields","location":"CLASS_FIELD","class":"jadx.core.codegen.json.cls.JsonClass","pkg":"jadx.core.codegen.json.cls","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/cls/JsonClass.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getAttributeNS(int)","param":"","location":"METHOD_RETURN","class":"jadx.core.xmlgen.BinaryXMLParser","pkg":"jadx.core.xmlgen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/BinaryXMLParser.java","errors":["(Covered) initializer method does not guarantee @NonNull fields nsMap (line 32), nsMapGenerated (line 33), writer (line 36), strings (line 37), valuesParser (line 40), resourceIds (line 44), appPackageName (line 47) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"name","location":"CLASS_FIELD","class":"jadx.core.codegen.json.mapping.JsonClsMapping","pkg":"jadx.core.codegen.json.mapping","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/mapping/JsonClsMapping.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getNextBlock(jadx.core.dex.nodes.BlockNode)","param":"","location":"METHOD_RETURN","class":"jadx.core.utils.BlockUtils","pkg":"jadx.core.utils","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/BlockUtils.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"name","location":"CLASS_FIELD","class":"jadx.core.codegen.json.cls.JsonNode","pkg":"jadx.core.codegen.json.cls","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/cls/JsonNode.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"code","location":"CLASS_FIELD","class":"jadx.core.codegen.json.cls.JsonCodeLine","pkg":"jadx.core.codegen.json.cls","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/cls/JsonCodeLine.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getIfInsn()","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.regions.loops.LoopRegion","pkg":"jadx.core.dex.regions.loops","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/regions/loops/LoopRegion.java","errors":["dereferenced expression ifInsn is @Nullable"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"setDoms(java.util.BitSet)","param":"doms","location":"METHOD_PARAM","class":"jadx.core.dex.nodes.BlockNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/BlockNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields cleanSuccessors (line 31), domFrontier (line 36), idom (line 38) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"ClassGen(jadx.core.dex.nodes.ClassNode,jadx.core.codegen.ClassGen,boolean,boolean,boolean)","param":"parentClsGen","location":"METHOD_PARAM","class":"jadx.core.codegen.ClassGen","pkg":"jadx.core.codegen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java","errors":["(Covered) initializer method does not guarantee @NonNull field parentGen (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"alias","location":"CLASS_FIELD","class":"jadx.core.codegen.json.mapping.JsonClsMapping","pkg":"jadx.core.codegen.json.mapping","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/mapping/JsonClsMapping.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"cachedPackageFullAlias","location":"CLASS_FIELD","class":"jadx.core.deobf.PackageNode","pkg":"jadx.core.deobf","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/deobf/PackageNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields packageAlias (line 19), cachedPackageFullName (line 21) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"inlinedInsn","location":"CLASS_FIELD","class":"jadx.core.dex.visitors.shrink.ArgsInfo","pkg":"jadx.core.dex.visitors.shrink","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/shrink/ArgsInfo.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"copyBlocksBitSet(jadx.core.dex.nodes.MethodNode,java.util.BitSet)","param":"bitSet","location":"METHOD_PARAM","class":"jadx.core.utils.BlockUtils","pkg":"jadx.core.utils","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/BlockUtils.java","errors":["dereferenced expression bitSet is @Nullable"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"clsp","location":"CLASS_FIELD","class":"jadx.core.dex.nodes.RootNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/RootNode.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"region","location":"CLASS_FIELD","class":"jadx.core.dex.visitors.regions.RegionStack.State","pkg":"jadx.core.dex.visitors.regions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionStack.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"get(java.lang.Object)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.attributes.nodes.EnumMapAttr.KeyValueMap","pkg":"jadx.core.dex.attributes.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/attributes/nodes/EnumMapAttr.java","errors":["(Covered) passing @Nullable parameter 'valueMap.get(insn.getKey(i))' where @NonNull is required"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"methods","location":"CLASS_FIELD","class":"jadx.core.codegen.json.mapping.JsonClsMapping","pkg":"jadx.core.codegen.json.mapping","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/mapping/JsonClsMapping.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"imports","location":"CLASS_FIELD","class":"jadx.core.codegen.json.cls.JsonClass","pkg":"jadx.core.codegen.json.cls","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/cls/JsonClass.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"json","location":"CLASS_FIELD","class":"jadx.core.codegen.json.mapping.JsonClsMapping","pkg":"jadx.core.codegen.json.mapping","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/mapping/JsonClsMapping.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getDeclaringClass()","param":"","location":"METHOD_RETURN","class":"jadx.api.JavaPackage","pkg":"jadx.api","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/api/JavaPackage.java","errors":["(Covered) method returns @Nullable, but superclass method jadx.api.JavaNode.getDeclaringClass() returns @NonNull"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"useClassInternal(jadx.core.dex.info.ClassInfo,jadx.core.dex.info.ClassInfo)","param":"extClsInfo","location":"METHOD_PARAM","class":"jadx.core.codegen.ClassGen","pkg":"jadx.core.codegen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java","errors":["dereferenced expression extClsInfo is @Nullable"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getWildcardType()","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.instructions.args.ArgType","pkg":"jadx.core.dex.instructions.args","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/args/ArgType.java","errors":["(Covered) passing @Nullable parameter 'first.getWildcardType()' where @NonNull is required"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"methodUtils","location":"CLASS_FIELD","class":"jadx.core.dex.visitors.AttachMethodDetails","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/AttachMethodDetails.java","errors":["dereferenced expression methodUtils is @Nullable"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"setDomFrontier(java.util.BitSet)","param":"domFrontier","location":"METHOD_PARAM","class":"jadx.core.dex.nodes.BlockNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/BlockNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields cleanSuccessors (line 31), domFrontier (line 36), idom (line 38) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"type","location":"CLASS_FIELD","class":"jadx.core.dex.instructions.args.CodeVar","pkg":"jadx.core.dex.instructions.args","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/args/CodeVar.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"getType(jadx.core.dex.instructions.args.InsnArg)","param":"arg","location":"METHOD_PARAM","class":"jadx.core.dex.visitors.typeinference.TypeUpdateInfo","pkg":"jadx.core.dex.visitors.typeinference","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeUpdateInfo.java","errors":["dereferenced expression arg is @Nullable"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"alias","location":"CLASS_FIELD","class":"jadx.core.codegen.json.mapping.JsonMthMapping","pkg":"jadx.core.codegen.json.mapping","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/mapping/JsonMthMapping.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"sVar","location":"CLASS_FIELD","class":"jadx.core.dex.instructions.args.RegisterArg","pkg":"jadx.core.dex.instructions.args","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/args/RegisterArg.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"decodeAttribute(int,int,int,java.lang.String,java.lang.String)","param":"shortNsName","location":"METHOD_PARAM","class":"jadx.core.xmlgen.BinaryXMLParser","pkg":"jadx.core.xmlgen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/BinaryXMLParser.java","errors":["(Covered) initializer method does not guarantee @NonNull fields nsMap (line 32), nsMapGenerated (line 33), writer (line 36), strings (line 37), valuesParser (line 40), resourceIds (line 44), appPackageName (line 47) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"<T>get(jadx.core.dex.attributes.AType<T>)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.attributes.EmptyAttrStorage","pkg":"jadx.core.dex.attributes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/attributes/EmptyAttrStorage.java","errors":["(Covered) method returns @Nullable, but superclass method jadx.core.dex.attributes.AttributeStorage.<T>get(jadx.core.dex.attributes.AType<T>) returns @NonNull"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"addSimpleValue(jadx.core.codegen.CodeWriter,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)","param":"attrName","location":"METHOD_PARAM","class":"jadx.core.xmlgen.ResXmlGen","pkg":"jadx.core.xmlgen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/ResXmlGen.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"fieldFixMap","location":"CLASS_FIELD","class":"jadx.core.dex.visitors.ShadowFieldVisitor.FieldFixInfo","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/ShadowFieldVisitor.java","errors":["dereferenced expression fieldFixInfo.fieldFixMap is @Nullable"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getInnerPackageByName(java.lang.String)","param":"","location":"METHOD_RETURN","class":"jadx.core.deobf.PackageNode","pkg":"jadx.core.deobf","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/deobf/PackageNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields packageAlias (line 19), cachedPackageFullName (line 21), cachedPackageFullAlias (line 22) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"ResourceFile(jadx.api.JadxDecompiler,java.lang.String,jadx.api.ResourceType)","param":"decompiler","location":"METHOD_PARAM","class":"jadx.api.ResourceFile","pkg":"jadx.api","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/api/ResourceFile.java","errors":["(Covered) initializer method does not guarantee @NonNull fields decompiler (line 36), zipRef (line 39), deobfName (line 40) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"type","location":"CLASS_FIELD","class":"jadx.core.codegen.json.cls.JsonClass","pkg":"jadx.core.codegen.json.cls","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/cls/JsonClass.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"memorizePackageName(java.lang.String,java.lang.String)","param":"attrValue","location":"METHOD_PARAM","class":"jadx.core.xmlgen.BinaryXMLParser","pkg":"jadx.core.xmlgen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/BinaryXMLParser.java","errors":["(Covered) initializer method does not guarantee @NonNull fields nsMap (line 32), nsMapGenerated (line 33), writer (line 36), strings (line 37), valuesParser (line 40), resourceIds (line 44), appPackageName (line 47) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"interfaces","location":"CLASS_FIELD","class":"jadx.core.codegen.json.cls.JsonClass","pkg":"jadx.core.codegen.json.cls","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/cls/JsonClass.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getInnerType()","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.instructions.args.ArgType","pkg":"jadx.core.dex.instructions.args","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/args/ArgType.java","errors":["(Covered) passing @Nullable parameter 'argType.getInnerType()' where @NonNull is required"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"makeNameFromInvoke(jadx.core.dex.info.MethodInfo)","param":"","location":"METHOD_RETURN","class":"jadx.core.codegen.NameGen","pkg":"jadx.core.codegen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/NameGen.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"fromName(java.lang.String)","param":"","location":"METHOD_RETURN","class":"jadx.core.codegen.NameGen","pkg":"jadx.core.codegen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/NameGen.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"processHandlersOutBlocks(jadx.core.dex.nodes.MethodNode,java.util.Set<jadx.core.dex.trycatch.TryCatchBlock>)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.regions.RegionMaker","pkg":"jadx.core.dex.visitors.regions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMaker.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"classes","location":"CLASS_FIELD","class":"jadx.core.codegen.json.mapping.JsonMapping","pkg":"jadx.core.codegen.json.mapping","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/mapping/JsonMapping.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"region","location":"CLASS_FIELD","class":"jadx.core.dex.nodes.MethodNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields codeReader (line 50), thisArg (line 65), argsList (line 66), instructions (line 67), blocks (line 68), enterBlock (line 69), exitBlocks (line 70), sVars (line 71), exceptionHandlers (line 72), loops (line 73) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"dex","location":"CLASS_FIELD","class":"jadx.core.codegen.json.cls.JsonClass","pkg":"jadx.core.codegen.json.cls","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/cls/JsonClass.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getCallClassFromInvoke(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.BaseInvokeNode,jadx.core.dex.info.MethodInfo)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.MethodInvokeVisitor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/MethodInvokeVisitor.java","errors":["(Covered) passing @Nullable parameter 'callCls' where @NonNull is required"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"arguments","location":"CLASS_FIELD","class":"jadx.core.codegen.json.cls.JsonMethod","pkg":"jadx.core.codegen.json.cls","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/cls/JsonMethod.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"methods","location":"CLASS_FIELD","class":"jadx.core.codegen.json.cls.JsonClass","pkg":"jadx.core.codegen.json.cls","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/cls/JsonClass.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"add(java.lang.String)","param":"str","location":"METHOD_PARAM","class":"jadx.core.codegen.CodeWriter","pkg":"jadx.core.codegen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/CodeWriter.java","errors":["dereferenced expression str is @Nullable"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"loadJavaClass(jadx.api.JavaClass)","param":"javaClass","location":"METHOD_PARAM","class":"jadx.api.JadxDecompiler","pkg":"jadx.api","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/api/JadxDecompiler.java","errors":["(Covered) initializer method does not guarantee @NonNull fields root (line 51), classes (line 52), resources (line 53), xmlParser (line 55) are initialized along all control-flow paths (remember to check for exceptions or early returns).","dereferenced expression javaClass is @Nullable"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"convertInvoke(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.InvokeNode)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.SimplifyVisitor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/SimplifyVisitor.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"appPackage","location":"CLASS_FIELD","class":"jadx.core.xmlgen.ResourceStorage","pkg":"jadx.core.xmlgen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/ResourceStorage.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"name","location":"CLASS_FIELD","class":"jadx.core.codegen.json.mapping.JsonFieldMapping","pkg":"jadx.core.codegen.json.mapping","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/mapping/JsonFieldMapping.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"<T>decodeStream(jadx.api.ResourceFile,jadx.api.ResourcesLoader.ResourceDecoder<T>)","param":"","location":"METHOD_RETURN","class":"jadx.api.ResourcesLoader","pkg":"jadx.api","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/api/ResourcesLoader.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"setParents(jadx.core.dex.instructions.args.ArgType[])","param":"parents","location":"METHOD_PARAM","class":"jadx.core.clsp.ClspClass","pkg":"jadx.core.clsp","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/clsp/ClspClass.java","errors":["(Covered) initializer method does not guarantee @NonNull field parents (line 18) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"name","location":"CLASS_FIELD","class":"jadx.core.dex.instructions.args.CodeVar","pkg":"jadx.core.dex.instructions.args","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/args/CodeVar.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"offset","location":"CLASS_FIELD","class":"jadx.core.codegen.json.cls.JsonMethod","pkg":"jadx.core.codegen.json.cls","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/cls/JsonMethod.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"enumValueOfMth","location":"CLASS_FIELD","class":"jadx.core.dex.visitors.EnumVisitor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/EnumVisitor.java","errors":["(Covered) passing @Nullable parameter 'enumValueOfMth' where @NonNull is required"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"SwitchData(jadx.api.plugins.input.insns.custom.ISwitchPayload)","param":"payload","location":"METHOD_PARAM","class":"jadx.core.dex.instructions.SwitchData","pkg":"jadx.core.dex.instructions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/SwitchData.java","errors":["dereferenced expression payload is @Nullable"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"offset","location":"CLASS_FIELD","class":"jadx.core.codegen.json.mapping.JsonMthMapping","pkg":"jadx.core.codegen.json.mapping","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/mapping/JsonMthMapping.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"<T>get(jadx.core.dex.attributes.AType<T>)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.attributes.AttributeStorage","pkg":"jadx.core.dex.attributes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/attributes/AttributeStorage.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"modifiedKeys","location":"CLASS_FIELD","class":"jadx.core.dex.instructions.SwitchInsn","pkg":"jadx.core.dex.instructions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/SwitchInsn.java","errors":["(Covered) initializer method does not guarantee @NonNull fields targetBlocks (line 28), defTargetBlock (line 29) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"EntryConfig(short,short,char[],char[],byte,byte,int,byte,byte,byte,short,short,short,byte,byte,short,short,short,char[],char[],byte,byte,boolean,int)","param":"localeScript","location":"METHOD_PARAM","class":"jadx.core.xmlgen.entry.EntryConfig","pkg":"jadx.core.xmlgen.entry","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/entry/EntryConfig.java","errors":["(Covered) passing @Nullable parameter 'localeVariant' where @NonNull is required","(Covered) initializer method does not guarantee @NonNull fields localeScript (line 52), localeVariant (line 53) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"getTypeAlias(jadx.core.dex.instructions.args.ArgType)","param":"clsType","location":"METHOD_PARAM","class":"jadx.core.codegen.json.JsonCodeGen","pkg":"jadx.core.codegen.json","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/JsonCodeGen.java","errors":["dereferenced expression clsType is @Nullable"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"topClass","location":"CLASS_FIELD","class":"jadx.core.codegen.json.mapping.JsonClsMapping","pkg":"jadx.core.codegen.json.mapping","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/mapping/JsonClsMapping.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"fields","location":"CLASS_FIELD","class":"jadx.core.codegen.json.mapping.JsonClsMapping","pkg":"jadx.core.codegen.json.mapping","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/mapping/JsonClsMapping.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"preCondition","location":"CLASS_FIELD","class":"jadx.core.dex.regions.loops.LoopRegion","pkg":"jadx.core.dex.regions.loops","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/regions/loops/LoopRegion.java","errors":["(Covered) initializer method does not guarantee @NonNull fields conditionBlock (line 28), body (line 32), type (line 35) are initialized along all control-flow paths (remember to check for exceptions or early returns).","dereferenced expression preCondition is @Nullable"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"pkg","location":"CLASS_FIELD","class":"jadx.core.codegen.json.cls.JsonClass","pkg":"jadx.core.codegen.json.cls","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/cls/JsonClass.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"cachedPackageFullName","location":"CLASS_FIELD","class":"jadx.core.deobf.PackageNode","pkg":"jadx.core.deobf","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/deobf/PackageNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields packageAlias (line 19), cachedPackageFullAlias (line 23) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"foundWrappedInsn(jadx.core.dex.nodes.InsnNode,jadx.core.dex.nodes.InsnNode)","param":"","location":"METHOD_RETURN","class":"jadx.core.utils.BlockUtils","pkg":"jadx.core.utils","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/BlockUtils.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"parentClass","location":"CLASS_FIELD","class":"jadx.core.dex.nodes.ClassNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields accessFlags (line 54), superClass (line 55), smali (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).","(Covered) initializer method does not guarantee @NonNull fields superClass (line 55), smali (line 66), clsData (line 51) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"FillArrayData(jadx.api.plugins.input.insns.custom.IArrayPayload)","param":"payload","location":"METHOD_PARAM","class":"jadx.core.dex.instructions.FillArrayData","pkg":"jadx.core.dex.instructions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/FillArrayData.java","errors":["dereferenced expression payload is @Nullable"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"alias","location":"CLASS_FIELD","class":"jadx.core.codegen.json.cls.JsonNode","pkg":"jadx.core.codegen.json.cls","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/cls/JsonNode.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"clsUse(jadx.core.dex.nodes.ClassNode,jadx.core.dex.instructions.args.ArgType)","param":"useType","location":"METHOD_PARAM","class":"jadx.core.dex.visitors.usage.UsageInfo","pkg":"jadx.core.dex.visitors.usage","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/usage/UsageInfo.java","errors":["(Covered) passing @Nullable parameter 'useType' where @NonNull is required"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"parentLoop","location":"CLASS_FIELD","class":"jadx.core.dex.attributes.nodes.LoopInfo","pkg":"jadx.core.dex.attributes.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/attributes/nodes/LoopInfo.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"Region(jadx.core.dex.nodes.IRegion)","param":"parent","location":"METHOD_PARAM","class":"jadx.core.dex.regions.Region","pkg":"jadx.core.dex.regions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/regions/Region.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"deobfName","location":"CLASS_FIELD","class":"jadx.api.ResourceFile","pkg":"jadx.api","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/api/ResourceFile.java","errors":["(Covered) initializer method does not guarantee @NonNull field zipRef (line 39) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"selectFirst()","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.instructions.args.ArgType.KnownType","pkg":"jadx.core.dex.instructions.args","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/args/ArgType.java","errors":["(Covered) method returns @Nullable, but superclass method jadx.core.dex.instructions.args.ArgType.selectFirst() returns @NonNull"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"parents","location":"CLASS_FIELD","class":"jadx.core.clsp.ClspClass","pkg":"jadx.core.clsp","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/clsp/ClspClass.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"instructions","location":"CLASS_FIELD","class":"jadx.core.dex.nodes.MethodNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields codeReader (line 50), thisArg (line 65), argsList (line 66), blocks (line 70), enterBlock (line 71), exitBlocks (line 72), sVars (line 73), exceptionHandlers (line 74), loops (line 75), region (line 76) are initialized along all control-flow paths (remember to check for exceptions or early returns).","enhanced-for expression instructions is @Nullable"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"searchCommonParent(java.util.Set<java.lang.String>,jadx.core.clsp.ClspClass)","param":"","location":"METHOD_RETURN","class":"jadx.core.clsp.ClspGraph","pkg":"jadx.core.clsp","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/clsp/ClspGraph.java","errors":["(Covered) initializer method does not guarantee @NonNull field nameMap (line 32) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"declaration","location":"CLASS_FIELD","class":"jadx.core.codegen.json.cls.JsonNode","pkg":"jadx.core.codegen.json.cls","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/cls/JsonNode.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"ASSIGN_FIELD_NULLABLE","method":"","param":"classFilter","location":"CLASS_FIELD","class":"jadx.api.JadxArgs","pkg":"jadx.api","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/api/JadxArgs.java","errors":["(Covered) initializer method does not guarantee @NonNull fields outDir (line 25), outDirSrc (line 26), outDirRes (line 27) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"makeEndlessLoop(jadx.core.dex.nodes.IRegion,jadx.core.dex.visitors.regions.RegionStack,jadx.core.dex.attributes.nodes.LoopInfo,jadx.core.dex.nodes.BlockNode)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.regions.RegionMaker","pkg":"jadx.core.dex.visitors.regions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMaker.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"foundWrappedInsnInCondition(jadx.core.dex.regions.conditions.IfCondition,jadx.core.dex.nodes.InsnNode)","param":"","location":"METHOD_RETURN","class":"jadx.core.utils.BlockUtils","pkg":"jadx.core.utils","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/BlockUtils.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"JadxOverflowException(java.lang.String)","param":"message","location":"METHOD_PARAM","class":"jadx.core.utils.exceptions.JadxOverflowException","pkg":"jadx.core.utils.exceptions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/exceptions/JadxOverflowException.java","errors":["(Covered) passing @Nullable parameter 'message' where @NonNull is required"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getAnnotation(java.lang.String)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.attributes.AttributeStorage","pkg":"jadx.core.dex.attributes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/attributes/AttributeStorage.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"name","location":"CLASS_FIELD","class":"jadx.core.codegen.json.mapping.JsonMthMapping","pkg":"jadx.core.codegen.json.mapping","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/mapping/JsonMthMapping.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"superClass","location":"CLASS_FIELD","class":"jadx.core.codegen.json.cls.JsonClass","pkg":"jadx.core.codegen.json.cls","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/cls/JsonClass.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"isClassInnerFor(jadx.core.dex.info.ClassInfo,jadx.core.dex.info.ClassInfo)","param":"inner","location":"METHOD_PARAM","class":"jadx.core.codegen.ClassGen","pkg":"jadx.core.codegen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java","errors":["dereferenced expression inner is @Nullable"],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"setIDom(jadx.core.dex.nodes.BlockNode)","param":"idom","location":"METHOD_PARAM","class":"jadx.core.dex.nodes.BlockNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/BlockNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields cleanSuccessors (line 31), domFrontier (line 36), idom (line 38) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"staticMethod","location":"CLASS_FIELD","class":"jadx.core.dex.attributes.nodes.EnumClassAttr","pkg":"jadx.core.dex.attributes.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/attributes/nodes/EnumClassAttr.java","errors":["(Covered) initializer method does not guarantee @NonNull field cls (line 19) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"alias","location":"CLASS_FIELD","class":"jadx.core.codegen.json.mapping.JsonFieldMapping","pkg":"jadx.core.codegen.json.mapping","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/mapping/JsonFieldMapping.java","errors":[],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"enterBlock","location":"CLASS_FIELD","class":"jadx.core.dex.nodes.MethodNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields codeReader (line 50), thisArg (line 65), argsList (line 66), instructions (line 67), blocks (line 68), exitBlocks (line 72), sVars (line 73), exceptionHandlers (line 74), loops (line 75), region (line 76) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":0},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getAliasForObject(java.lang.String)","param":"","location":"METHOD_RETURN","class":"jadx.core.codegen.NameGen","pkg":"jadx.core.codegen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/NameGen.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getMthOverride(java.util.List<jadx.core.dex.nodes.MethodNode>,java.lang.String)","param":"","location":"METHOD_RETURN","class":"jadx.core.deobf.Deobfuscator","pkg":"jadx.core.deobf","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/deobf/Deobfuscator.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"processSwitch(jadx.core.dex.nodes.IRegion,jadx.core.dex.nodes.BlockNode,jadx.core.dex.instructions.SwitchInsn,jadx.core.dex.visitors.regions.RegionStack)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.regions.RegionMaker","pkg":"jadx.core.dex.visitors.regions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMaker.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"WRONG_OVERRIDE_PARAM","method":"setParentInsn(jadx.core.dex.nodes.InsnNode)","param":"parentInsn","location":"METHOD_PARAM","class":"jadx.core.dex.instructions.args.InsnWrapArg","pkg":"jadx.core.dex.instructions.args","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/args/InsnWrapArg.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"sourceLine","location":"CLASS_FIELD","class":"jadx.core.codegen.json.cls.JsonCodeLine","pkg":"jadx.core.codegen.json.cls","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/cls/JsonCodeLine.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getOuterType()","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.instructions.args.ArgType","pkg":"jadx.core.dex.instructions.args","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/args/ArgType.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"attachClassNode(jadx.core.codegen.CodeWriter,java.lang.String,java.lang.String)","param":"clsName","location":"METHOD_PARAM","class":"jadx.core.xmlgen.BinaryXMLParser","pkg":"jadx.core.xmlgen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/BinaryXMLParser.java","errors":["(Covered) initializer method does not guarantee @NonNull fields nsMap (line 32), nsMapGenerated (line 33), writer (line 36), strings (line 37), valuesParser (line 40), resourceIds (line 44), appPackageName (line 47) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"searchEntryWithSameName(jadx.core.xmlgen.entry.ResourceEntry)","param":"","location":"METHOD_RETURN","class":"jadx.core.xmlgen.ResourceStorage","pkg":"jadx.core.xmlgen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/ResourceStorage.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"makeNameFromInsn(jadx.core.dex.nodes.InsnNode)","param":"","location":"METHOD_RETURN","class":"jadx.core.codegen.NameGen","pkg":"jadx.core.codegen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/NameGen.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getMoveExceptionRegister(jadx.core.dex.nodes.BlockNode)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.blocksmaker.BlockProcessor","pkg":"jadx.core.dex.visitors.blocksmaker","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/blocksmaker/BlockProcessor.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getCondition()","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.regions.loops.LoopRegion","pkg":"jadx.core.dex.regions.loops","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/regions/loops/LoopRegion.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"removeExit(jadx.core.dex.nodes.BlockNode)","param":"exit","location":"METHOD_PARAM","class":"jadx.core.dex.visitors.regions.RegionStack","pkg":"jadx.core.dex.visitors.regions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionStack.java","errors":["(Covered) initializer method does not guarantee @NonNull field region (line 33) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getBlockByWrappedInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode)","param":"","location":"METHOD_RETURN","class":"jadx.core.utils.BlockUtils","pkg":"jadx.core.utils","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/BlockUtils.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"isDeobfCandidateAttr(java.lang.String,java.lang.String)","param":"shortNsName","location":"METHOD_PARAM","class":"jadx.core.xmlgen.BinaryXMLParser","pkg":"jadx.core.xmlgen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/BinaryXMLParser.java","errors":["(Covered) initializer method does not guarantee @NonNull fields nsMap (line 32), nsMapGenerated (line 33), writer (line 36), strings (line 37), valuesParser (line 40), resourceIds (line 44), appPackageName (line 47) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getTypeAsString(int)","param":"","location":"METHOD_RETURN","class":"jadx.core.xmlgen.ResXmlGen","pkg":"jadx.core.xmlgen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/ResXmlGen.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"searchBlockWithPhi(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.PhiInsn)","param":"","location":"METHOD_RETURN","class":"jadx.core.utils.BlockUtils","pkg":"jadx.core.utils","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/BlockUtils.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getForCls(jadx.core.dex.info.ClassInfo)","param":"","location":"METHOD_RETURN","class":"jadx.core.deobf.DeobfPresets","pkg":"jadx.core.deobf","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/deobf/DeobfPresets.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getClsDetails(jadx.core.dex.instructions.args.ArgType)","param":"","location":"METHOD_RETURN","class":"jadx.core.clsp.ClspGraph","pkg":"jadx.core.clsp","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/clsp/ClspGraph.java","errors":["(Covered) initializer method does not guarantee @NonNull field nameMap (line 32) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"getIndex(java.util.List<jadx.core.dex.nodes.InsnNode>,jadx.core.dex.nodes.InsnNode)","param":"insn","location":"METHOD_PARAM","class":"jadx.core.utils.InsnList","pkg":"jadx.core.utils","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/InsnList.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"get(K)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.usage.UseSet","pkg":"jadx.core.dex.visitors.usage","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/usage/UseSet.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getCommonAncestor(java.lang.String,java.lang.String)","param":"","location":"METHOD_RETURN","class":"jadx.core.clsp.ClspGraph","pkg":"jadx.core.clsp","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/clsp/ClspGraph.java","errors":["(Covered) initializer method does not guarantee @NonNull field nameMap (line 32) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getValuesInitInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.FieldNode)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.EnumVisitor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/EnumVisitor.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"addBreakLabel(jadx.core.dex.nodes.Edge,jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.InsnNode)","param":"exit","location":"METHOD_PARAM","class":"jadx.core.dex.visitors.regions.RegionMaker","pkg":"jadx.core.dex.visitors.regions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMaker.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getNextIf(jadx.core.dex.regions.conditions.IfInfo,jadx.core.dex.nodes.BlockNode)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.regions.IfMakerHelper","pkg":"jadx.core.dex.visitors.regions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/regions/IfMakerHelper.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"get(java.lang.String)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.attributes.annotations.AnnotationsList","pkg":"jadx.core.dex.attributes.annotations","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/attributes/annotations/AnnotationsList.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"traverse(jadx.core.dex.nodes.IRegion,jadx.core.dex.nodes.BlockNode,jadx.core.dex.visitors.regions.RegionStack)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.regions.RegionMaker","pkg":"jadx.core.dex.visitors.regions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMaker.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"setOutBlock(jadx.core.dex.nodes.BlockNode)","param":"outBlock","location":"METHOD_PARAM","class":"jadx.core.dex.regions.conditions.IfInfo","pkg":"jadx.core.dex.regions.conditions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/regions/conditions/IfInfo.java","errors":["(Covered) initializer method does not guarantee @NonNull fields outBlock (line 20), ifBlock (line 21) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"get(java.lang.Object)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.info.ConstStorage.ValueStorage","pkg":"jadx.core.dex.info","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/info/ConstStorage.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"createResourceFile(jadx.api.JadxDecompiler,java.lang.String,jadx.api.ResourceType)","param":"","location":"METHOD_RETURN","class":"jadx.api.ResourceFile","pkg":"jadx.api","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/api/ResourceFile.java","errors":["(Covered) initializer method does not guarantee @NonNull fields zipRef (line 39), deobfName (line 40) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"recursiveInsnCheck(jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.InsnType,java.util.function.Predicate<jadx.core.dex.nodes.InsnNode>)","param":"","location":"METHOD_RETURN","class":"jadx.core.utils.InsnUtils","pkg":"jadx.core.utils","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/InsnUtils.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"addBound(jadx.core.dex.visitors.typeinference.TypeInfo,jadx.core.dex.visitors.typeinference.ITypeBound)","param":"bound","location":"METHOD_PARAM","class":"jadx.core.dex.visitors.typeinference.TypeInferenceVisitor","pkg":"jadx.core.dex.visitors.typeinference","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeInferenceVisitor.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"extractEnumFieldsFromFilledArray(jadx.core.dex.nodes.ClassNode,jadx.core.dex.nodes.InsnNode,jadx.core.dex.nodes.BlockNode,java.util.List<jadx.core.dex.nodes.InsnNode>)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.EnumVisitor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/EnumVisitor.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"argsList","location":"CLASS_FIELD","class":"jadx.core.dex.nodes.MethodNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields codeReader (line 50), thisArg (line 65), instructions (line 69), blocks (line 70), enterBlock (line 71), exitBlocks (line 72), sVars (line 73), exceptionHandlers (line 74), loops (line 75), region (line 76) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"fromIfBlock(jadx.core.dex.nodes.BlockNode)","param":"header","location":"METHOD_PARAM","class":"jadx.core.dex.regions.conditions.IfCondition","pkg":"jadx.core.dex.regions.conditions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/regions/conditions/IfCondition.java","errors":["(Covered) initializer method does not guarantee @NonNull field compare (line 39) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getInsnsFromEnd(jadx.core.dex.nodes.BlockNode,int)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.blocksmaker.BlockProcessor","pkg":"jadx.core.dex.visitors.blocksmaker","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/blocksmaker/BlockProcessor.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"fromIfBlock(jadx.core.dex.nodes.BlockNode)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.regions.conditions.IfCondition","pkg":"jadx.core.dex.regions.conditions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/regions/conditions/IfCondition.java","errors":["(Covered) initializer method does not guarantee @NonNull field compare (line 39) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getConstField(java.lang.Object)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.nodes.ClassNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields accessFlags (line 54), superClass (line 55), smali (line 66), parentClass (line 68) are initialized along all control-flow paths (remember to check for exceptions or early returns).","(Covered) initializer method does not guarantee @NonNull fields superClass (line 55), smali (line 66), clsData (line 51) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"replaceArg(jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.InsnArg)","param":"from","location":"METHOD_PARAM","class":"jadx.core.dex.instructions.PhiInsn","pkg":"jadx.core.dex.instructions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/PhiInsn.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"classes","location":"CLASS_FIELD","class":"jadx.api.JadxDecompiler","pkg":"jadx.api","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/api/JadxDecompiler.java","errors":["(Covered) initializer method does not guarantee @NonNull fields root (line 51), resources (line 55), xmlParser (line 57) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"processMethodArgsOverloaded(jadx.core.dex.instructions.args.ArgType,jadx.core.dex.info.MethodInfo,@org.jetbrains.annotations.Nullable java.util.List<jadx.core.dex.nodes.IMethodDetails>)","param":"startCls","location":"METHOD_PARAM","class":"jadx.core.dex.nodes.utils.MethodUtils","pkg":"jadx.core.dex.nodes.utils","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/utils/MethodUtils.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"type","location":"CLASS_FIELD","class":"jadx.core.codegen.json.cls.JsonField","pkg":"jadx.core.codegen.json.cls","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/json/cls/JsonField.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"IfInfo(jadx.core.dex.regions.conditions.IfInfo,jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.BlockNode)","param":"elseBlock","location":"METHOD_PARAM","class":"jadx.core.dex.regions.conditions.IfInfo","pkg":"jadx.core.dex.regions.conditions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/regions/conditions/IfInfo.java","errors":["(Covered) initializer method does not guarantee @NonNull fields outBlock (line 20), ifBlock (line 21) are initialized along all control-flow paths (remember to check for exceptions or early returns).","(Covered) passing @Nullable parameter 'elseBlock' where @NonNull is required"],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"bytesToHex(byte[])","param":"","location":"METHOD_RETURN","class":"jadx.core.utils.files.FileUtils","pkg":"jadx.core.utils.files","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/files/FileUtils.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"castConstructorInsn(jadx.core.dex.nodes.InsnNode)","param":"coCandidate","location":"METHOD_PARAM","class":"jadx.core.dex.visitors.EnumVisitor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/EnumVisitor.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getSourceLine(int)","param":"","location":"METHOD_RETURN","class":"jadx.api.JavaClass","pkg":"jadx.api","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/api/JavaClass.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"result","location":"CLASS_FIELD","class":"jadx.core.dex.nodes.InsnNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/InsnNode.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"simplifyArith(jadx.core.dex.instructions.ArithNode)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.SimplifyVisitor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/SimplifyVisitor.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"needLabel(jadx.core.dex.nodes.InsnNode,jadx.core.dex.nodes.InsnNode)","param":"prevInsn","location":"METHOD_PARAM","class":"jadx.core.codegen.MethodGen","pkg":"jadx.core.codegen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/MethodGen.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"setElseRegion(jadx.core.dex.nodes.IContainer)","param":"elseRegion","location":"METHOD_PARAM","class":"jadx.core.dex.regions.conditions.IfRegion","pkg":"jadx.core.dex.regions.conditions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/regions/conditions/IfRegion.java","errors":["(Covered) initializer method does not guarantee @NonNull fields conditionBlocks (line 20), condition (line 22), thenRegion (line 23), elseRegion (line 24) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"equals(java.lang.Object)","param":"obj","location":"METHOD_PARAM","class":"jadx.core.dex.instructions.args.RegisterArg","pkg":"jadx.core.dex.instructions.args","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/args/RegisterArg.java","errors":["(Covered) initializer method does not guarantee @NonNull field sVar (line 20) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"InsnRemover(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode)","param":"block","location":"METHOD_PARAM","class":"jadx.core.utils.InsnRemover","pkg":"jadx.core.utils","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/InsnRemover.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"traverseMonitorExitsCross(jadx.core.dex.nodes.BlockNode,java.util.Set<jadx.core.dex.nodes.BlockNode>,java.util.Set<jadx.core.dex.nodes.BlockNode>)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.regions.RegionMaker","pkg":"jadx.core.dex.visitors.regions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMaker.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"addSimpleValue(jadx.core.codegen.CodeWriter,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)","param":"attrValue","location":"METHOD_PARAM","class":"jadx.core.xmlgen.ResXmlGen","pkg":"jadx.core.xmlgen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/ResXmlGen.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"makeInsn(jadx.core.dex.nodes.InsnNode,jadx.core.codegen.CodeWriter,jadx.core.codegen.InsnGen.Flags)","param":"flag","location":"METHOD_PARAM","class":"jadx.core.codegen.InsnGen","pkg":"jadx.core.codegen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/InsnGen.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"restructureIf(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,jadx.core.dex.regions.conditions.IfInfo)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.regions.IfMakerHelper","pkg":"jadx.core.dex.visitors.regions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/regions/IfMakerHelper.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"TernaryInsn(jadx.core.dex.regions.conditions.IfCondition,jadx.core.dex.instructions.args.RegisterArg,jadx.core.dex.instructions.args.InsnArg,jadx.core.dex.instructions.args.InsnArg)","param":"result","location":"METHOD_PARAM","class":"jadx.core.dex.instructions.mods.TernaryInsn","pkg":"jadx.core.dex.instructions.mods","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/mods/TernaryInsn.java","errors":["(Covered) initializer method does not guarantee @NonNull field condition (line 16) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getArgFromAppend(jadx.core.dex.nodes.InsnNode)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.SimplifyVisitor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/SimplifyVisitor.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getCls(jadx.core.dex.instructions.args.ArgType)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.info.InfoStorage","pkg":"jadx.core.dex.info","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/info/InfoStorage.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"smali","location":"CLASS_FIELD","class":"jadx.core.dex.nodes.ClassNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields accessFlags (line 54), superClass (line 55), parentClass (line 69) are initialized along all control-flow paths (remember to check for exceptions or early returns).","(Covered) initializer method does not guarantee @NonNull fields superClass (line 55), clsData (line 51) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"checkPutInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode,jadx.core.dex.instructions.args.RegisterArg,int)","param":"insn","location":"METHOD_PARAM","class":"jadx.core.dex.visitors.ReSugarCode","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/ReSugarCode.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getOverrideMethodsNode(java.util.Set<jadx.core.dex.info.MethodInfo>)","param":"","location":"METHOD_RETURN","class":"jadx.core.deobf.Deobfuscator","pkg":"jadx.core.deobf","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/deobf/Deobfuscator.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"JadxException(jadx.core.dex.nodes.ClassNode,java.lang.String,java.lang.Throwable)","param":"th","location":"METHOD_PARAM","class":"jadx.core.utils.exceptions.JadxException","pkg":"jadx.core.utils.exceptions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/exceptions/JadxException.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"makeLoopRegion(jadx.core.dex.nodes.IRegion,jadx.core.dex.attributes.nodes.LoopInfo,java.util.List<jadx.core.dex.nodes.BlockNode>)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.regions.RegionMaker","pkg":"jadx.core.dex.visitors.regions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMaker.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getMethodFromClass(jadx.core.clsp.ClspClass,jadx.core.dex.info.MethodInfo)","param":"","location":"METHOD_RETURN","class":"jadx.core.clsp.ClspGraph","pkg":"jadx.core.clsp","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/clsp/ClspGraph.java","errors":["(Covered) initializer method does not guarantee @NonNull field nameMap (line 32) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"traverseWhileDominates(jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.BlockNode)","param":"","location":"METHOD_RETURN","class":"jadx.core.utils.BlockUtils","pkg":"jadx.core.utils","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/BlockUtils.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getNextBlockToPath(jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.BlockNode)","param":"","location":"METHOD_RETURN","class":"jadx.core.utils.BlockUtils","pkg":"jadx.core.utils","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/BlockUtils.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"searchMethod(jadx.core.dex.info.MethodInfo)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.nodes.ClassNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields accessFlags (line 54), superClass (line 55), smali (line 66), parentClass (line 68) are initialized along all control-flow paths (remember to check for exceptions or early returns).","(Covered) initializer method does not guarantee @NonNull fields superClass (line 55), smali (line 66), clsData (line 51) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getForMth(jadx.core.dex.info.MethodInfo)","param":"","location":"METHOD_RETURN","class":"jadx.core.deobf.DeobfPresets","pkg":"jadx.core.deobf","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/deobf/DeobfPresets.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"consumeObjectType(boolean)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.nodes.parser.SignatureParser","pkg":"jadx.core.dex.nodes.parser","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/parser/SignatureParser.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"searchCollision(jadx.core.dex.nodes.RootNode,jadx.core.dex.info.ClassInfo,jadx.core.dex.info.ClassInfo)","param":"useCls","location":"METHOD_PARAM","class":"jadx.core.codegen.ClassGen","pkg":"jadx.core.codegen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/ClassGen.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"equals(java.lang.Object)","param":"obj","location":"METHOD_PARAM","class":"jadx.core.dex.nodes.BlockNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/BlockNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields cleanSuccessors (line 31), domFrontier (line 36), idom (line 38) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"superClass","location":"CLASS_FIELD","class":"jadx.core.dex.nodes.ClassNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields accessFlags (line 54), smali (line 68), parentClass (line 70) are initialized along all control-flow paths (remember to check for exceptions or early returns).","(Covered) initializer method does not guarantee @NonNull fields smali (line 68), clsData (line 51) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"<R>visitTypes(java.util.function.Function<jadx.core.dex.instructions.args.ArgType,R>)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.instructions.args.ArgType","pkg":"jadx.core.dex.instructions.args","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/args/ArgType.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"getSingleArg(jadx.core.dex.nodes.InsnNode)","param":"insn","location":"METHOD_PARAM","class":"jadx.core.utils.InsnUtils","pkg":"jadx.core.utils","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/InsnUtils.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"searchMethodByShortId(java.lang.String)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.nodes.ClassNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields accessFlags (line 54), superClass (line 55), smali (line 66), parentClass (line 68) are initialized along all control-flow paths (remember to check for exceptions or early returns).","(Covered) initializer method does not guarantee @NonNull fields superClass (line 55), smali (line 66), clsData (line 51) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"resources","location":"CLASS_FIELD","class":"jadx.api.JadxDecompiler","pkg":"jadx.api","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/api/JadxDecompiler.java","errors":["(Covered) initializer method does not guarantee @NonNull fields root (line 51), classes (line 52), xmlParser (line 57) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"addInlineAttr(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.MarkMethodsForInline","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/MarkMethodsForInline.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"checkInline(int,jadx.core.dex.instructions.args.RegisterArg)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.shrink.ArgsInfo","pkg":"jadx.core.dex.visitors.shrink","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/shrink/ArgsInfo.java","errors":["(Covered) initializer method does not guarantee @NonNull field inlinedInsn (line 24) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"searchFieldByName(java.lang.String)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.nodes.ClassNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields accessFlags (line 54), superClass (line 55), smali (line 66), parentClass (line 68) are initialized along all control-flow paths (remember to check for exceptions or early returns).","(Covered) initializer method does not guarantee @NonNull fields superClass (line 55), smali (line 66), clsData (line 51) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"searchField(jadx.core.dex.info.FieldInfo)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.nodes.ClassNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields accessFlags (line 54), superClass (line 55), smali (line 66), parentClass (line 68) are initialized along all control-flow paths (remember to check for exceptions or early returns).","(Covered) initializer method does not guarantee @NonNull fields superClass (line 55), smali (line 66), clsData (line 51) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"makeFullClsName(java.lang.String,java.lang.String,jadx.core.dex.info.ClassInfo,boolean,boolean)","param":"parentClass","location":"METHOD_PARAM","class":"jadx.core.dex.info.ClassInfo","pkg":"jadx.core.dex.info","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/info/ClassInfo.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getTopBlock(java.util.Collection<jadx.core.dex.nodes.BlockNode>)","param":"","location":"METHOD_RETURN","class":"jadx.core.utils.BlockUtils","pkg":"jadx.core.utils","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/BlockUtils.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getConstString(jadx.core.dex.nodes.RootNode,jadx.core.dex.instructions.args.InsnArg)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.EnumVisitor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/EnumVisitor.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getByUniqId(int)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.info.InfoStorage","pkg":"jadx.core.dex.info","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/info/InfoStorage.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"ASSIGN_FIELD_NULLABLE","method":"","param":"secureDbf","location":"CLASS_FIELD","class":"jadx.core.xmlgen.XmlSecurity","pkg":"jadx.core.xmlgen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/XmlSecurity.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"processLoop(jadx.core.dex.nodes.IRegion,jadx.core.dex.attributes.nodes.LoopInfo,jadx.core.dex.visitors.regions.RegionStack)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.regions.RegionMaker","pkg":"jadx.core.dex.visitors.regions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMaker.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getForFld(jadx.core.dex.info.FieldInfo)","param":"","location":"METHOD_RETURN","class":"jadx.core.deobf.DeobfPresets","pkg":"jadx.core.deobf","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/deobf/DeobfPresets.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"escapeXmlChar(char)","param":"","location":"METHOD_RETURN","class":"jadx.core.utils.StringUtils","pkg":"jadx.core.utils","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/StringUtils.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"markThisArgs(jadx.core.dex.instructions.args.RegisterArg)","param":"thisArg","location":"METHOD_PARAM","class":"jadx.core.dex.visitors.ssa.SSATransform","pkg":"jadx.core.dex.visitors.ssa","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/ssa/SSATransform.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"escapeWhiteSpaceChar(char)","param":"","location":"METHOD_RETURN","class":"jadx.core.utils.StringUtils","pkg":"jadx.core.utils","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/StringUtils.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getRename(int)","param":"","location":"METHOD_RETURN","class":"jadx.core.xmlgen.ResourceStorage","pkg":"jadx.core.xmlgen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/ResourceStorage.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"toFile(java.lang.String)","param":"","location":"METHOD_RETURN","class":"jadx.core.utils.files.FileUtils","pkg":"jadx.core.utils.files","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/files/FileUtils.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getTernaryInsnBlock(jadx.core.dex.nodes.IContainer)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.regions.TernaryMod","pkg":"jadx.core.dex.visitors.regions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/regions/TernaryMod.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getNewClassName(jadx.core.dex.nodes.RootNode,java.lang.String)","param":"","location":"METHOD_RETURN","class":"jadx.core.xmlgen.XmlDeobf","pkg":"jadx.core.xmlgen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/XmlDeobf.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"processCast(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.IndexInsnNode)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.SimplifyVisitor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/SimplifyVisitor.java","errors":[],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"xmlParser","location":"CLASS_FIELD","class":"jadx.api.JadxDecompiler","pkg":"jadx.api","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/api/JadxDecompiler.java","errors":["(Covered) initializer method does not guarantee @NonNull fields root (line 51), classes (line 52), resources (line 53) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"searchFieldByNameAndType(jadx.core.dex.info.FieldInfo)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.nodes.ClassNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/ClassNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields accessFlags (line 54), superClass (line 55), smali (line 66), parentClass (line 68) are initialized along all control-flow paths (remember to check for exceptions or early returns).","(Covered) initializer method does not guarantee @NonNull fields superClass (line 55), smali (line 66), clsData (line 51) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-1},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"selectOtherSafe(jadx.core.dex.nodes.BlockNode,java.util.List<jadx.core.dex.nodes.BlockNode>)","param":"","location":"METHOD_RETURN","class":"jadx.core.utils.BlockUtils","pkg":"jadx.core.utils","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/BlockUtils.java","errors":[],"jump":-2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getBlockContainer(jadx.core.dex.nodes.IContainer,jadx.core.dex.nodes.BlockNode)","param":"","location":"METHOD_RETURN","class":"jadx.core.utils.RegionUtils","pkg":"jadx.core.utils","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/RegionUtils.java","errors":[],"jump":-2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"checkInvoke(jadx.core.dex.nodes.InsnNode,java.lang.String,java.lang.String)","param":"insn","location":"METHOD_PARAM","class":"jadx.core.dex.visitors.regions.LoopRegionVisitor","pkg":"jadx.core.dex.visitors.regions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/regions/LoopRegionVisitor.java","errors":[],"jump":-2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getParamAsList(jadx.api.plugins.input.data.annotations.IAnnotation,java.lang.String)","param":"","location":"METHOD_RETURN","class":"jadx.core.utils.kotlin.KotlinMetadataUtils","pkg":"jadx.core.utils.kotlin","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/kotlin/KotlinMetadataUtils.java","errors":[],"jump":-2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getParentInsnSkipMove(jadx.core.dex.instructions.args.RegisterArg)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.ModVisitor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/ModVisitor.java","errors":[],"jump":-2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"checkForReplace(jadx.core.dex.instructions.InvokeNode)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.DeboxingVisitor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/DeboxingVisitor.java","errors":[],"jump":-2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getAnnotationDefaultValue(java.lang.String)","param":"","location":"METHOD_RETURN","class":"jadx.core.codegen.AnnotationGen","pkg":"jadx.core.codegen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/codegen/AnnotationGen.java","errors":[],"jump":-2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"simplifyStringConstructor(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.mods.ConstructorInsn)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.SimplifyVisitor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/SimplifyVisitor.java","errors":[],"jump":-2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"removeAssignChain(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode,jadx.core.utils.InsnRemover,jadx.core.dex.instructions.InsnType)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.ConstructorVisitor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/ConstructorVisitor.java","errors":[],"jump":-2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"addSimpleValue(jadx.core.codegen.CodeWriter,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)","param":"valueStr","location":"METHOD_PARAM","class":"jadx.core.xmlgen.ResXmlGen","pkg":"jadx.core.xmlgen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/ResXmlGen.java","errors":[],"jump":-2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"FIELD_NO_INIT","method":"","param":"thisArg","location":"CLASS_FIELD","class":"jadx.core.dex.nodes.MethodNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/MethodNode.java","errors":["(Covered) initializer method does not guarantee @NonNull fields codeReader (line 50), argsList (line 67), instructions (line 68), blocks (line 69), enterBlock (line 70), exitBlocks (line 71), sVars (line 72), exceptionHandlers (line 73), loops (line 74), region (line 75) are initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"blockContains(jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.InsnNode)","param":"insn","location":"METHOD_PARAM","class":"jadx.core.utils.BlockUtils","pkg":"jadx.core.utils","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/BlockUtils.java","errors":[],"jump":-2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"removeAssignChain(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode,jadx.core.utils.InsnRemover,jadx.core.dex.instructions.InsnType)","param":"insn","location":"METHOD_PARAM","class":"jadx.core.dex.visitors.ConstructorVisitor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/ConstructorVisitor.java","errors":[],"jump":-2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"checkForTernaryInCondition(jadx.core.dex.regions.conditions.IfInfo)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.regions.IfMakerHelper","pkg":"jadx.core.dex.visitors.regions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/regions/IfMakerHelper.java","errors":[],"jump":-2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"addConstraint(jadx.core.dex.visitors.typeinference.TypeSearchVarInfo,jadx.core.dex.visitors.typeinference.ITypeConstraint)","param":"constraint","location":"METHOD_PARAM","class":"jadx.core.dex.visitors.typeinference.TypeSearch","pkg":"jadx.core.dex.visitors.typeinference","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeSearch.java","errors":[],"jump":-2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"JadxException(jadx.core.dex.nodes.MethodNode,java.lang.String,java.lang.Throwable)","param":"th","location":"METHOD_PARAM","class":"jadx.core.utils.exceptions.JadxException","pkg":"jadx.core.utils.exceptions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/exceptions/JadxException.java","errors":[],"jump":-2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"resolveClass(jadx.core.dex.info.ClassInfo)","param":"clsInfo","location":"METHOD_PARAM","class":"jadx.core.dex.nodes.RootNode","pkg":"jadx.core.dex.nodes","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/nodes/RootNode.java","errors":["(Covered) initializer method does not guarantee @NonNull field clsp (line 67) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"searchInsnParent(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode)","param":"","location":"METHOD_RETURN","class":"jadx.core.utils.BlockUtils","pkg":"jadx.core.utils","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/BlockUtils.java","errors":[],"jump":-2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"processMonitorEnter(jadx.core.dex.nodes.IRegion,jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.InsnNode,jadx.core.dex.visitors.regions.RegionStack)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.regions.RegionMaker","pkg":"jadx.core.dex.visitors.regions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMaker.java","errors":[],"jump":-2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"simplifyInsn(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.SimplifyVisitor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/SimplifyVisitor.java","errors":[],"jump":-2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"searchWrappedInsnParent(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode)","param":"","location":"METHOD_RETURN","class":"jadx.core.utils.BlockUtils","pkg":"jadx.core.utils","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/BlockUtils.java","errors":[],"jump":-2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"formatMsg(jadx.core.dex.nodes.IDexNode,java.lang.String)","param":"msg","location":"METHOD_PARAM","class":"jadx.core.utils.ErrorsCounter","pkg":"jadx.core.utils","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/ErrorsCounter.java","errors":[],"jump":-2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getLastBlock(jadx.core.dex.nodes.IContainer)","param":"","location":"METHOD_RETURN","class":"jadx.core.utils.RegionUtils","pkg":"jadx.core.utils","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/RegionUtils.java","errors":[],"jump":-2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getPathCross(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.BlockNode)","param":"","location":"METHOD_RETURN","class":"jadx.core.utils.BlockUtils","pkg":"jadx.core.utils","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/BlockUtils.java","errors":["(Covered) passing @Nullable parameter 'BlockUtils.getPathCross(mth, thenBlock, elseBlock)' where @NonNull is required"],"jump":-2},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"updateArgType(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.IMethodDetails,java.util.List<jadx.core.dex.instructions.args.ArgType>,int)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.OverrideMethodVisitor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/OverrideMethodVisitor.java","errors":[],"jump":-3},{"annotation":"org.jetbrains.annotations.Nullable","reason":"ASSIGN_FIELD_NULLABLE","method":"","param":"usedInPhi","location":"CLASS_FIELD","class":"jadx.core.dex.instructions.args.SSAVar","pkg":"jadx.core.dex.instructions.args","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/args/SSAVar.java","errors":[],"jump":-3},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"decode(java.lang.String,long)","param":"","location":"METHOD_RETURN","class":"jadx.core.xmlgen.ManifestAttributes","pkg":"jadx.core.xmlgen","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/xmlgen/ManifestAttributes.java","errors":[],"jump":-3},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"checkArgTypes(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.parser.SignatureParser,java.util.List<jadx.core.dex.instructions.args.ArgType>)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.SignatureProcessor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/SignatureProcessor.java","errors":[],"jump":-3},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"searchFromFirstBlock(jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.BlockNode,jadx.core.dex.visitors.blocksmaker.helpers.FinallyExtractInfo)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.MarkFinallyVisitor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/MarkFinallyVisitor.java","errors":[],"jump":-3},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getLastInsn(jadx.core.dex.nodes.IContainer)","param":"","location":"METHOD_RETURN","class":"jadx.core.utils.RegionUtils","pkg":"jadx.core.utils","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/RegionUtils.java","errors":[],"jump":-3},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"makeInvokeUseBound(jadx.core.dex.instructions.args.RegisterArg,jadx.core.dex.instructions.BaseInvokeNode)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.typeinference.TypeInferenceVisitor","pkg":"jadx.core.dex.visitors.typeinference","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeInferenceVisitor.java","errors":[],"jump":-3},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"processIf(jadx.core.dex.nodes.IRegion,jadx.core.dex.nodes.BlockNode,jadx.core.dex.instructions.IfNode,jadx.core.dex.visitors.regions.RegionStack)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.regions.RegionMaker","pkg":"jadx.core.dex.visitors.regions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionMaker.java","errors":[],"jump":-3},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"getWrappedInsn(jadx.core.dex.instructions.args.InsnArg)","param":"arg","location":"METHOD_PARAM","class":"jadx.core.utils.InsnUtils","pkg":"jadx.core.utils","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/InsnUtils.java","errors":[],"jump":-3},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"isStartBlock(jadx.core.dex.nodes.BlockNode,jadx.core.dex.nodes.BlockNode,jadx.core.dex.visitors.blocksmaker.helpers.FinallyExtractInfo)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.MarkFinallyVisitor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/MarkFinallyVisitor.java","errors":[],"jump":-3},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"extractEnumFieldsFromInvoke(jadx.core.dex.nodes.ClassNode,jadx.core.dex.nodes.BlockNode,jadx.core.dex.instructions.InvokeNode,java.util.List<jadx.core.dex.nodes.InsnNode>)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.EnumVisitor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/EnumVisitor.java","errors":[],"jump":-3},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"createEnumFieldByConstructor(jadx.core.dex.nodes.ClassNode,jadx.core.dex.nodes.FieldNode,jadx.core.dex.instructions.mods.ConstructorInsn)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.EnumVisitor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/EnumVisitor.java","errors":[],"jump":-4},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getConstValueByArg(jadx.core.dex.nodes.RootNode,jadx.core.dex.instructions.args.InsnArg)","param":"","location":"METHOD_RETURN","class":"jadx.core.utils.InsnUtils","pkg":"jadx.core.utils","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/utils/InsnUtils.java","errors":[],"jump":-4},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"addExit(jadx.core.dex.nodes.BlockNode)","param":"exit","location":"METHOD_PARAM","class":"jadx.core.dex.visitors.regions.RegionStack","pkg":"jadx.core.dex.visitors.regions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/regions/RegionStack.java","errors":["(Covered) initializer method does not guarantee @NonNull field region (line 33) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-4},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getConstructorInsn(jadx.core.dex.nodes.InsnNode)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.EnumVisitor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/EnumVisitor.java","errors":[],"jump":-4},{"annotation":"org.jetbrains.annotations.Nullable","reason":"PASS_NULLABLE","method":"insn(jadx.core.dex.instructions.InsnType,jadx.core.dex.instructions.args.RegisterArg,jadx.core.dex.instructions.args.InsnArg)","param":"res","location":"METHOD_PARAM","class":"jadx.core.dex.instructions.InsnDecoder","pkg":"jadx.core.dex.instructions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/instructions/InsnDecoder.java","errors":[],"jump":-4},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"convertStringBuilderChain(jadx.core.dex.nodes.MethodNode,jadx.core.dex.instructions.InvokeNode,java.util.List<jadx.core.dex.nodes.InsnNode>)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.SimplifyVisitor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/SimplifyVisitor.java","errors":[],"jump":-4},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"simplifyCmpOp(jadx.core.dex.regions.conditions.Compare)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.regions.conditions.IfCondition","pkg":"jadx.core.dex.regions.conditions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/regions/conditions/IfCondition.java","errors":["(Covered) initializer method does not guarantee @NonNull field compare (line 39) is initialized along all control-flow paths (remember to check for exceptions or early returns)."],"jump":-4},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"mergeNestedIfNodes(jadx.core.dex.regions.conditions.IfInfo)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.regions.IfMakerHelper","pkg":"jadx.core.dex.visitors.regions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/regions/IfMakerHelper.java","errors":[],"jump":-4},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"getNextIfNodeInfo(jadx.core.dex.regions.conditions.IfInfo,jadx.core.dex.nodes.BlockNode)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.regions.IfMakerHelper","pkg":"jadx.core.dex.visitors.regions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/regions/IfMakerHelper.java","errors":[],"jump":-5},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"convertFieldArith(jadx.core.dex.nodes.MethodNode,jadx.core.dex.nodes.InsnNode)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.SimplifyVisitor","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/SimplifyVisitor.java","errors":[],"jump":-5},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"checkEnumMapAccess(jadx.core.dex.nodes.RootNode,jadx.core.dex.nodes.InsnNode)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.ReSugarCode","pkg":"jadx.core.dex.visitors","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/ReSugarCode.java","errors":[],"jump":-6},{"annotation":"org.jetbrains.annotations.Nullable","reason":"RETURN_NULLABLE","method":"checkArrayForEach(jadx.core.dex.nodes.MethodNode,jadx.core.dex.regions.loops.LoopRegion,jadx.core.dex.nodes.InsnNode,jadx.core.dex.nodes.InsnNode,jadx.core.dex.regions.conditions.IfCondition)","param":"","location":"METHOD_RETURN","class":"jadx.core.dex.visitors.regions.LoopRegionVisitor","pkg":"jadx.core.dex.visitors.regions","inject":"true","uri":"//Users/nima/Developer/ArtifactEvaluation/NullAwayFixer/Projects/jadx/jadx-core/src/main/java/jadx/core/dex/visitors/regions/LoopRegionVisitor.java","errors":[],"jump":-14}]}