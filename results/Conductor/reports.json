{"reports": [{"location": "CLASS_FIELD", "errors": ["(Covered) initializer method does not guarantee @NonNull fields payload (line 20), receipt (line 25) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.netflix.conductor.core.events.queue.Message", "method": "", "param": "id", "jump": 2, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.events.queue", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/events/queue/Message.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) passing @Nullable parameter 'domain' where @NonNull is required", "(Covered) passing @Nullable parameter 'domain' where @NonNull is required", "(Covered) passing @Nullable parameter 'domain' where @NonNull is required", "(Covered) passing @Nullable parameter 'domain' where @NonNull is required"], "class": "com.netflix.conductor.service.ExecutionService", "method": "poll(java.lang.String,java.lang.String,java.lang.String,int,int)", "param": "domain", "jump": 2, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.service", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/service/ExecutionService.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) passing @Nullable parameter 'externalInputPayloadStoragePath' where @NonNull is required", "(Covered) passing @Nullable parameter 'externalInputPayloadStoragePath' where @NonNull is required"], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(com.netflix.conductor.common.metadata.workflow.WorkflowDef,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)", "param": "externalInputPayloadStoragePath", "jump": 2, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": ["dereferenced expression systemTask is @Nullable", "dereferenced expression systemTask is @Nullable", "dereferenced expression systemTask is @Nullable"], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "executeSystemTask(com.netflix.conductor.core.execution.tasks.WorkflowSystemTask,java.lang.String,long)", "param": "systemTask", "jump": 2, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) initializer method does not guarantee @NonNull fields payload (line 20), id (line 22), receipt (line 24) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field payload (line 20) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.netflix.conductor.core.events.queue.Message", "method": "Message(java.lang.String,java.lang.String,java.lang.String)", "param": "payload", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.events.queue", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/events/queue/Message.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) initializer method does not guarantee @NonNull fields payload (line 20), id (line 22), receipt (line 24) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'taskId' where @NonNull is required"], "class": "com.netflix.conductor.core.utils.ParametersUtils", "method": "getTaskInputV2(java.util.Map<java.lang.String,java.lang.Object>,com.netflix.conductor.common.run.Workflow,java.lang.String,com.netflix.conductor.common.metadata.tasks.TaskDef)", "param": "taskId", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.utils", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/ParametersUtils.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) initializer method does not guarantee @NonNull fields payload (line 20), id (line 22), receipt (line 24) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'taskId' where @NonNull is required", "(Covered) passing @Nullable parameter 'taskId' where @NonNull is required"], "class": "com.netflix.conductor.core.utils.ParametersUtils", "method": "replace(java.util.Map<java.lang.String,java.lang.Object>,com.jayway.jsonpath.DocumentContext,java.lang.String)", "param": "taskId", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.utils", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/ParametersUtils.java"}, {"location": "CLASS_FIELD", "errors": ["(Covered) initializer method does not guarantee @NonNull fields payload (line 20), id (line 22), receipt (line 24) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field taskDefs (line 53) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression workflowDefs is @Nullable"], "class": "com.netflix.conductor.metrics.WorkflowMonitor", "method": "", "param": "workflowDefs", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.metrics", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/metrics/WorkflowMonitor.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) passing @Nullable parameter 'externalInputPayloadStoragePath' where @NonNull is required"], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)", "param": "externalInputPayloadStoragePath", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) passing @Nullable parameter 'externalInputPayloadStoragePath' where @NonNull is required"], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(com.netflix.conductor.common.metadata.workflow.WorkflowDef,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)", "param": "externalInputPayloadStoragePath", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "CLASS_FIELD", "errors": ["(Covered) initializer method does not guarantee @NonNull fields payload (line 20), id (line 22), receipt (line 24) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field workflowDefs (line 56) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression taskDefs is @Nullable"], "class": "com.netflix.conductor.metrics.WorkflowMonitor", "method": "", "param": "taskDefs", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.metrics", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/metrics/WorkflowMonitor.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) passing @Nullable parameter 'reason' where @NonNull is required", "(Covered) passing @Nullable parameter 'failureWorkflow' where @NonNull is required"], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "terminateWorkflow(com.netflix.conductor.common.run.Workflow,java.lang.String,java.lang.String)", "param": "reason", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) passing @Nullable parameter 'parentWorkflowId' where @NonNull is required"], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)", "param": "parentWorkflowId", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_RETURN", "errors": ["(Covered) initializer method does not guarantee @NonNull fields payload (line 20), id (line 22), receipt (line 24) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields taskDefs (line 53), workflowDefs (line 55) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'payloadObject' where @NonNull is required", "(Covered) passing @Nullable parameter 'getPayloadObject(msg.getPayload())' where @NonNull is required"], "class": "com.netflix.conductor.core.events.DefaultEventProcessor", "method": "getPayloadObject(java.lang.String)", "param": "", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.events", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/events/DefaultEventProcessor.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) initializer method does not guarantee @NonNull fields payload (line 20), id (line 22), receipt (line 24) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field receipt (line 24) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.netflix.conductor.core.events.queue.Message", "method": "Message(java.lang.String,java.lang.String,java.lang.String)", "param": "receipt", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.events.queue", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/events/queue/Message.java"}, {"location": "CLASS_FIELD", "errors": ["(Covered) initializer method does not guarantee @NonNull fields payload (line 20), id (line 22) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.netflix.conductor.core.events.queue.Message", "method": "", "param": "receipt", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.events.queue", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/events/queue/Message.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) initializer method does not guarantee @NonNull fields payload (line 20), id (line 22), receipt (line 24) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.netflix.conductor.core.utils.ParametersUtils", "method": "getTaskInput(java.util.Map<java.lang.String,java.lang.Object>,com.netflix.conductor.common.run.Workflow,com.netflix.conductor.common.metadata.tasks.TaskDef,java.lang.String)", "param": "taskDefinition", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.utils", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/ParametersUtils.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) passing @Nullable parameter 'parentWorkflowId' where @NonNull is required"], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(com.netflix.conductor.common.metadata.workflow.WorkflowDef,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)", "param": "parentWorkflowId", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "CLASS_FIELD", "errors": ["(Covered) initializer method does not guarantee @NonNull fields id (line 23), receipt (line 25) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.netflix.conductor.core.events.queue.Message", "method": "", "param": "payload", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.events.queue", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/events/queue/Message.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) initializer method does not guarantee @NonNull fields payload (line 20), id (line 22), receipt (line 24) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'eventType' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull fields taskDefs (line 53), workflowDefs (line 55) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.netflix.conductor.core.events.EventQueues", "method": "getQueue(java.lang.String)", "param": "eventType", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.events", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/events/EventQueues.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.utils.QueueUtils", "method": "getQueueName(java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "param": "isolationGroup", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.utils", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/QueueUtils.java"}, {"location": "CLASS_FIELD", "errors": ["(Covered) initializer method does not guarantee @NonNull fields payload (line 20), id (line 22), receipt (line 24) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields taskDefs (line 53), workflowDefs (line 55) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.netflix.conductor.validations.ValidationContext", "method": "", "param": "metadataDAO", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.validations", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/validations/ValidationContext.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "rerunWF(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String)", "param": "workflowInput", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) passing @Nullable parameter 'externalInputPayloadStoragePath' where @NonNull is required"], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(java.lang.String,java.lang.Integer,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)", "param": "externalInputPayloadStoragePath", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_RETURN", "errors": [], "class": "com.netflix.conductor.service.ExecutionService", "method": "poll(java.lang.String,java.lang.String,java.lang.String)", "param": "", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.service", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/service/ExecutionService.java"}, {"location": "METHOD_RETURN", "errors": ["(Covered) initializer method does not guarantee @NonNull fields payload (line 20), id (line 22), receipt (line 24) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields taskDefs (line 53), workflowDefs (line 55) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) method returns @Nullable, but superclass method com.netflix.conductor.common.utils.ExternalPayloadStorage.download(java.lang.String) returns @NonNull"], "class": "com.netflix.conductor.core.storage.DummyPayloadStorage", "method": "download(java.lang.String)", "param": "", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.storage", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/storage/DummyPayloadStorage.java"}, {"location": "METHOD_RETURN", "errors": [], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "getPendingTaskByWorkflow(java.lang.String,java.lang.String)", "param": "", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) passing @Nullable parameter 'taskToDomain' where @NonNull is required"], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)", "param": "taskToDomain", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_RETURN", "errors": [], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "getTask(java.lang.String)", "param": "", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) initializer method does not guarantee @NonNull fields payload (line 20), id (line 22), receipt (line 24) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.netflix.conductor.service.MetadataService", "method": "getWorkflowDef(@javax.validation.constraints.NotEmpty(message=\"Workflow name cannot be null or empty\") java.lang.String,java.lang.Integer)", "param": "version", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.service", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/service/MetadataService.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.orchestration.ExecutionDAOFacade", "method": "exceedsRateLimitPerFrequency(com.netflix.conductor.common.metadata.tasks.Task,com.netflix.conductor.common.metadata.tasks.TaskDef)", "param": "taskDef", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.orchestration", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/orchestration/ExecutionDAOFacade.java"}, {"location": "METHOD_RETURN", "errors": ["(Covered) initializer method does not guarantee @NonNull fields payload (line 20), id (line 22), receipt (line 24) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields taskDefs (line 53), workflowDefs (line 55) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) method returns @Nullable, but superclass method com.netflix.conductor.common.utils.ExternalPayloadStorage.getLocation(com.netflix.conductor.common.utils.ExternalPayloadStorage.Operation,com.netflix.conductor.common.utils.ExternalPayloadStorage.PayloadType,java.lang.String) returns @NonNull"], "class": "com.netflix.conductor.core.storage.DummyPayloadStorage", "method": "getLocation(com.netflix.conductor.common.utils.ExternalPayloadStorage.Operation,com.netflix.conductor.common.utils.ExternalPayloadStorage.PayloadType,java.lang.String)", "param": "", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.storage", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/storage/DummyPayloadStorage.java"}, {"location": "METHOD_RETURN", "errors": [], "class": "com.netflix.conductor.service.ExecutionService", "method": "getLastPollTask(java.lang.String,java.lang.String,java.lang.String)", "param": "", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.service", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/service/ExecutionService.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) passing @Nullable parameter 'parentWorkflowId' where @NonNull is required"], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "param": "parentWorkflowId", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) initializer method does not guarantee @NonNull fields payload (line 20), id (line 22), receipt (line 24) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.netflix.conductor.core.exception.TerminateWorkflowException", "method": "TerminateWorkflowException(java.lang.String,com.netflix.conductor.common.run.Workflow.WorkflowStatus,com.netflix.conductor.common.metadata.tasks.Task)", "param": "task", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.exception", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/exception/TerminateWorkflowException.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) passing @Nullable parameter 'domain' where @NonNull is required"], "class": "com.netflix.conductor.service.ExecutionService", "method": "poll(java.lang.String,java.lang.String,java.lang.String)", "param": "domain", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.service", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/service/ExecutionService.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) initializer method does not guarantee @NonNull fields payload (line 20), id (line 22), receipt (line 24) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'reason' where @NonNull is required"], "class": "com.netflix.conductor.core.exception.TerminateWorkflowException", "method": "TerminateWorkflowException(java.lang.String)", "param": "reason", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.exception", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/exception/TerminateWorkflowException.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) initializer method does not guarantee @NonNull fields payload (line 20), id (line 22), receipt (line 24) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'taskId' where @NonNull is required"], "class": "com.netflix.conductor.core.utils.ParametersUtils", "method": "replaceVariables(java.lang.String,com.jayway.jsonpath.DocumentContext,java.lang.String)", "param": "taskId", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.utils", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/ParametersUtils.java"}, {"location": "METHOD_RETURN", "errors": ["(Covered) passing @Nullable parameter 'getActiveDomain(task.getTaskType(), domains)' where @NonNull is required", "(Covered) passing @Nullable parameter 'getActiveDomain(task.getTaskType(), taskDomainstr.split(\",\"))' where @NonNull is required"], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "getActiveDomain(java.lang.String,java.lang.String[])", "param": "", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.execution.DeciderService", "method": "retry(com.netflix.conductor.common.metadata.tasks.TaskDef,com.netflix.conductor.common.metadata.workflow.WorkflowTask,com.netflix.conductor.common.metadata.tasks.Task,com.netflix.conductor.common.run.Workflow)", "param": "taskDefinition", "jump": -1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/DeciderService.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(com.netflix.conductor.common.metadata.workflow.WorkflowDef,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)", "param": "event", "jump": -1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) passing @Nullable parameter 'externalInputPayloadStoragePath' where @NonNull is required"], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(java.lang.String,java.lang.Integer,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String)", "param": "externalInputPayloadStoragePath", "jump": -1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_RETURN", "errors": [], "class": "com.netflix.conductor.core.execution.DeciderService", "method": "getNextTasksToBeScheduled(com.netflix.conductor.common.run.Workflow,com.netflix.conductor.common.metadata.tasks.Task)", "param": "", "jump": -1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/DeciderService.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(java.lang.String,java.lang.Integer,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)", "param": "event", "jump": -1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) passing @Nullable parameter 'retriedTaskId' where @NonNull is required"], "class": "com.netflix.conductor.core.execution.DeciderService", "method": "getTasksToBeScheduled(com.netflix.conductor.common.run.Workflow,com.netflix.conductor.common.metadata.workflow.WorkflowTask,int,java.lang.String)", "param": "retriedTaskId", "jump": -1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/DeciderService.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.dao.IndexDAO", "method": "searchWorkflows(java.lang.String,java.lang.String,int,int,java.util.List<java.lang.String>)", "param": "sort", "jump": -1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.dao", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/dao/IndexDAO.java"}, {"location": "METHOD_RETURN", "errors": [], "class": "com.netflix.conductor.core.orchestration.ExecutionDAOFacade", "method": "getTaskPollDataByDomain(java.lang.String,java.lang.String)", "param": "", "jump": -1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.orchestration", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/orchestration/ExecutionDAOFacade.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(java.lang.String,java.lang.Integer,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String)", "param": "event", "jump": -1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_RETURN", "errors": ["(Covered) initializer method does not guarantee @NonNull fields payload (line 20), id (line 22), receipt (line 24) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields taskDefs (line 53), workflowDefs (line 55) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.netflix.conductor.core.events.queue.DefaultEventQueueProcessor", "method": "getValue(java.lang.String,com.fasterxml.jackson.databind.JsonNode)", "param": "", "jump": -1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.events.queue", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/events/queue/DefaultEventQueueProcessor.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.utils.QueueUtils", "method": "getQueueName(java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "param": "domain", "jump": -1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.utils", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/QueueUtils.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) initializer method does not guarantee @NonNull fields payload (line 20), id (line 22), receipt (line 24) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields taskDefs (line 53), workflowDefs (line 55) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.netflix.conductor.core.execution.tasks.Terminate", "method": "validateInputStatus(java.lang.String)", "param": "status", "jump": -1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution.tasks", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/tasks/Terminate.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(java.lang.String,java.lang.Integer,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String)", "param": "event", "jump": -1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.execution.DeciderService", "method": "updateWorkflowOutput(com.netflix.conductor.common.run.Workflow,com.netflix.conductor.common.metadata.tasks.Task)", "param": "task", "jump": -2, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/DeciderService.java"}, {"location": "METHOD_RETURN", "errors": ["(Covered) initializer method does not guarantee @NonNull fields payload (line 20), id (line 22), receipt (line 24) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields taskDefs (line 53), workflowDefs (line 55) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression getQueue(workflow, task) is @Nullable"], "class": "com.netflix.conductor.core.execution.tasks.Event", "method": "getQueue(com.netflix.conductor.common.run.Workflow,com.netflix.conductor.common.metadata.tasks.Task)", "param": "", "jump": -2, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution.tasks", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/tasks/Event.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "terminateWorkflow(com.netflix.conductor.common.run.Workflow,java.lang.String,java.lang.String)", "param": "failureWorkflow", "jump": -2, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) initializer method does not guarantee @NonNull fields payload (line 20), id (line 22), receipt (line 24) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.netflix.conductor.core.utils.BulkResponse", "method": "appendFailedResponse(java.lang.String,java.lang.String)", "param": "errorMessage", "jump": -5, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.utils", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/BulkResponse.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) initializer method does not guarantee @NonNull fields payload (line 20), id (line 22), receipt (line 24) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.netflix.conductor.core.utils.ParametersUtils", "method": "getTaskInputV2(java.util.Map<java.lang.String,java.lang.Object>,com.netflix.conductor.common.run.Workflow,java.lang.String,com.netflix.conductor.common.metadata.tasks.TaskDef)", "param": "taskDefinition", "jump": -5, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.utils", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/ParametersUtils.java"}, {"location": "METHOD_RETURN", "errors": ["dereferenced expression ValidationContext.getMetadataDAO() is @Nullable", "dereferenced expression ValidationContext.getMetadataDAO() is @Nullable", "dereferenced expression ValidationContext.getMetadataDAO() is @Nullable", "dereferenced expression ValidationContext.getMetadataDAO() is @Nullable"], "class": "com.netflix.conductor.validations.ValidationContext", "method": "getMetadataDAO()", "param": "", "jump": 3, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.validations", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/validations/ValidationContext.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(com.netflix.conductor.common.metadata.workflow.WorkflowDef,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)", "param": "externalInputPayloadStoragePath", "jump": 2, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) initializer method does not guarantee @NonNull field payload (line 20) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.netflix.conductor.core.events.queue.Message", "method": "Message(java.lang.String,java.lang.String,java.lang.String)", "param": "payload", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.events.queue", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/events/queue/Message.java"}, {"location": "CLASS_FIELD", "errors": ["(Covered) initializer method does not guarantee @NonNull field taskDefs (line 53) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression workflowDefs is @Nullable"], "class": "com.netflix.conductor.metrics.WorkflowMonitor", "method": "", "param": "workflowDefs", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.metrics", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/metrics/WorkflowMonitor.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.service.ExecutionService", "method": "poll(java.lang.String,java.lang.String,java.lang.String,int,int)", "param": "domain", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.service", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/service/ExecutionService.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) initializer method does not guarantee @NonNull field retryTaskId (line 174) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.netflix.conductor.core.execution.mapper.TaskMapperContext.Builder", "method": "withRetryTaskId(java.lang.String)", "param": "val", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution.mapper", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/mapper/TaskMapperContext.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) initializer method does not guarantee @NonNull field receipt (line 24) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.netflix.conductor.core.events.queue.Message", "method": "Message(java.lang.String,java.lang.String,java.lang.String)", "param": "receipt", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.events.queue", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/events/queue/Message.java"}, {"location": "METHOD_RETURN", "errors": ["dereferenced expression task is @Nullable"], "class": "com.netflix.conductor.service.ExecutionService", "method": "getTask(java.lang.String)", "param": "", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.service", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/service/ExecutionService.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(com.netflix.conductor.common.metadata.workflow.WorkflowDef,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)", "param": "externalInputPayloadStoragePath", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "CLASS_FIELD", "errors": ["(Covered) initializer method does not guarantee @NonNull field workflowDefs (line 56) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression taskDefs is @Nullable"], "class": "com.netflix.conductor.metrics.WorkflowMonitor", "method": "", "param": "taskDefs", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.metrics", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/metrics/WorkflowMonitor.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(com.netflix.conductor.common.metadata.workflow.WorkflowDef,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)", "param": "parentWorkflowId", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)", "param": "parentWorkflowId", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_RETURN", "errors": ["(Covered) passing @Nullable parameter 'payloadObject' where @NonNull is required", "(Covered) passing @Nullable parameter 'getPayloadObject(msg.getPayload())' where @NonNull is required"], "class": "com.netflix.conductor.core.events.DefaultEventProcessor", "method": "getPayloadObject(java.lang.String)", "param": "", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.events", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/events/DefaultEventProcessor.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) passing @Nullable parameter 'event' where @NonNull is required"], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "param": "parentWorkflowTaskId", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.utils.ParametersUtils", "method": "getTaskInputV2(java.util.Map<java.lang.String,java.lang.Object>,com.netflix.conductor.common.run.Workflow,java.lang.String,com.netflix.conductor.common.metadata.tasks.TaskDef)", "param": "taskId", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.utils", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/ParametersUtils.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.utils.ParametersUtils", "method": "replace(java.util.Map<java.lang.String,java.lang.Object>,com.jayway.jsonpath.DocumentContext,java.lang.String)", "param": "taskId", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.utils", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/ParametersUtils.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)", "param": "taskToDomain", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)", "param": "externalInputPayloadStoragePath", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.service.MetadataService", "method": "getWorkflowDef(@javax.validation.constraints.NotEmpty(message=\"Workflow name cannot be null or empty\") java.lang.String,java.lang.Integer)", "param": "version", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.service", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/service/MetadataService.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "terminateWorkflow(com.netflix.conductor.common.run.Workflow,java.lang.String,java.lang.String)", "param": "reason", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.utils.ParametersUtils", "method": "getTaskInput(java.util.Map<java.lang.String,java.lang.Object>,com.netflix.conductor.common.run.Workflow,com.netflix.conductor.common.metadata.tasks.TaskDef,java.lang.String)", "param": "taskDefinition", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.utils", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/ParametersUtils.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.exception.TerminateWorkflowException", "method": "TerminateWorkflowException(java.lang.String,com.netflix.conductor.common.run.Workflow.WorkflowStatus)", "param": "reason", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.exception", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/exception/TerminateWorkflowException.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) passing @Nullable parameter 'paramString' where @NonNull is required"], "class": "com.netflix.conductor.core.utils.ParametersUtils", "method": "replace(java.lang.String)", "param": "paramString", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.utils", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/ParametersUtils.java"}, {"location": "METHOD_RETURN", "errors": [], "class": "com.netflix.conductor.service.ExecutionService", "method": "getPendingTaskForWorkflow(java.lang.String,java.lang.String)", "param": "", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.service", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/service/ExecutionService.java"}, {"location": "METHOD_RETURN", "errors": ["(Covered) method returns @Nullable, but superclass method com.netflix.conductor.service.TaskService.poll(@javax.validation.constraints.NotEmpty(message=\"TaskType cannot be null or empty.\") java.lang.String,java.lang.String,java.lang.String) returns @NonNull"], "class": "com.netflix.conductor.service.TaskServiceImpl", "method": "poll(java.lang.String,java.lang.String,java.lang.String)", "param": "", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.service", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/service/TaskServiceImpl.java"}, {"location": "METHOD_RETURN", "errors": [], "class": "com.netflix.conductor.service.ExecutionService", "method": "poll(java.lang.String,java.lang.String)", "param": "", "jump": -1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.service", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/service/ExecutionService.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(java.lang.String,java.lang.Integer,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)", "param": "externalInputPayloadStoragePath", "jump": -1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "rerunWF(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String)", "param": "correlationId", "jump": -1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(java.lang.String,java.lang.Integer,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String)", "param": "externalInputPayloadStoragePath", "jump": -1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.utils.QueueUtils", "method": "getQueueName(java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "param": "executionNameSpace", "jump": -1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.utils", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/QueueUtils.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.dao.RateLimitingDAO", "method": "exceedsRateLimitPerFrequency(com.netflix.conductor.common.metadata.tasks.Task,com.netflix.conductor.common.metadata.tasks.TaskDef)", "param": "taskDef", "jump": -1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.dao", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/dao/RateLimitingDAO.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)", "param": "parentWorkflowId", "jump": -1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": ["dereferenced expression paramString is @Nullable"], "class": "com.netflix.conductor.core.utils.ParametersUtils", "method": "replaceVariables(java.lang.String,com.jayway.jsonpath.DocumentContext,java.lang.String)", "param": "paramString", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.utils", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/ParametersUtils.java"}, {"location": "METHOD_RETURN", "errors": ["(Covered) method returns @Nullable, but superclass method com.netflix.conductor.service.TaskService.getPendingTaskForWorkflow(@javax.validation.constraints.NotEmpty(message=\"WorkflowId cannot be null or empty.\") java.lang.String,@javax.validation.constraints.NotEmpty(message=\"TaskReferenceName cannot be null or empty.\") java.lang.String) returns @NonNull"], "class": "com.netflix.conductor.service.TaskServiceImpl", "method": "getPendingTaskForWorkflow(java.lang.String,java.lang.String)", "param": "", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.service", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/service/TaskServiceImpl.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(com.netflix.conductor.common.metadata.workflow.WorkflowDef,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)", "param": "taskToDomain", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) passing @Nullable parameter 'parentWorkflowId' where @NonNull is required"], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)", "param": "externalInputPayloadStoragePath", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_RETURN", "errors": [], "class": "com.netflix.conductor.service.TaskService", "method": "poll(@javax.validation.constraints.NotEmpty(message=\"TaskType cannot be null or empty.\") java.lang.String,java.lang.String,java.lang.String)", "param": "", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.service", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/service/TaskService.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.utils.ParametersUtils", "method": "replaceList(java.util.List<?>,java.lang.String,com.jayway.jsonpath.DocumentContext)", "param": "taskId", "jump": -1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.utils", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/ParametersUtils.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.exception.TerminateWorkflowException", "method": "TerminateWorkflowException(java.lang.String,com.netflix.conductor.common.run.Workflow.WorkflowStatus,com.netflix.conductor.common.metadata.tasks.Task)", "param": "reason", "jump": -1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.exception", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/exception/TerminateWorkflowException.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)", "param": "event", "jump": -1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)", "param": "event", "jump": -1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)", "param": "parentWorkflowTaskId", "jump": -1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.utils.ParametersUtils", "method": "getTaskInput(java.util.Map<java.lang.String,java.lang.Object>,com.netflix.conductor.common.run.Workflow,com.netflix.conductor.common.metadata.tasks.TaskDef,java.lang.String)", "param": "taskId", "jump": -4, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.utils", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/ParametersUtils.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(com.netflix.conductor.common.metadata.workflow.WorkflowDef,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)", "param": "externalInputPayloadStoragePath", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_RETURN", "errors": [], "class": "com.netflix.conductor.service.TaskService", "method": "getPendingTaskForWorkflow(@javax.validation.constraints.NotEmpty(message=\"WorkflowId cannot be null or empty.\") java.lang.String,@javax.validation.constraints.NotEmpty(message=\"TaskReferenceName cannot be null or empty.\") java.lang.String)", "param": "", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.service", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/service/TaskService.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) passing @Nullable parameter 'parentWorkflowTaskId' where @NonNull is required"], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)", "param": "parentWorkflowId", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) passing @Nullable parameter 'parentWorkflowId' where @NonNull is required"], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(com.netflix.conductor.common.metadata.workflow.WorkflowDef,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)", "param": "externalInputPayloadStoragePath", "jump": 2, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": ["(Covered) passing @Nullable parameter 'event' where @NonNull is required", "(Covered) passing @Nullable parameter 'event' where @NonNull is required", "(Covered) passing @Nullable parameter 'event' where @NonNull is required"], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)", "param": "parentWorkflowTaskId", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}, {"location": "METHOD_PARAM", "errors": [], "class": "com.netflix.conductor.core.execution.WorkflowExecutor", "method": "startWorkflow(java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)", "param": "event", "jump": -3, "inject": "true", "annotation": "javax.annotation.Nullable", "pkg": "com.netflix.conductor.core.execution", "uri": "//tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java"}]}