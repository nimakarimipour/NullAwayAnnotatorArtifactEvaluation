{
    "reports": [
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "poll(java.lang.String,java.lang.String,java.lang.String,int,int)",
            "param": "domain",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.service.ExecutionService",
            "pkg": "com.netflix.conductor.service",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/service/ExecutionService.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'domain' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'domain' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'domain' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'domain' where @NonNull is required"
            ],
            "jump": 2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "executeSystemTask(com.netflix.conductor.core.execution.tasks.WorkflowSystemTask,java.lang.String,long)",
            "param": "systemTask",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.execution.WorkflowExecutor",
            "pkg": "com.netflix.conductor.core.execution",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java",
            "errors": [
                "dereferenced expression systemTask is @Nullable",
                "dereferenced expression systemTask is @Nullable",
                "dereferenced expression systemTask is @Nullable"
            ],
            "jump": 2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "id",
            "location": "CLASS_FIELD",
            "class": "com.netflix.conductor.core.events.queue.Message",
            "pkg": "com.netflix.conductor.core.events.queue",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/events/queue/Message.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields payload (line 23), receipt (line 27) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "TerminateWorkflowException(java.lang.String,com.netflix.conductor.common.run.Workflow.WorkflowStatus,com.netflix.conductor.common.metadata.tasks.Task)",
            "param": "task",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.exception.TerminateWorkflowException",
            "pkg": "com.netflix.conductor.core.exception",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/exception/TerminateWorkflowException.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field task (line 23) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "getTaskInput(java.util.Map<java.lang.String,java.lang.Object>,com.netflix.conductor.common.run.Workflow,com.netflix.conductor.common.metadata.tasks.TaskDef,java.lang.String)",
            "param": "taskDefinition",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.utils.ParametersUtils",
            "pkg": "com.netflix.conductor.core.utils",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/ParametersUtils.java",
            "errors": [],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "receipt",
            "location": "CLASS_FIELD",
            "class": "com.netflix.conductor.core.events.queue.Message",
            "pkg": "com.netflix.conductor.core.events.queue",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/events/queue/Message.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields payload (line 23), id (line 24) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "Message(java.lang.String,java.lang.String,java.lang.String)",
            "param": "receipt",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.events.queue.Message",
            "pkg": "com.netflix.conductor.core.events.queue",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/events/queue/Message.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields payload (line 23), id (line 24), receipt (line 25) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field receipt (line 25) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "getTaskInputV2(java.util.Map<java.lang.String,java.lang.Object>,com.netflix.conductor.common.run.Workflow,java.lang.String,com.netflix.conductor.common.metadata.tasks.TaskDef)",
            "param": "taskId",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.utils.ParametersUtils",
            "pkg": "com.netflix.conductor.core.utils",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/ParametersUtils.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'taskId' where @NonNull is required"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "Message(java.lang.String,java.lang.String,java.lang.String)",
            "param": "payload",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.events.queue.Message",
            "pkg": "com.netflix.conductor.core.events.queue",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/events/queue/Message.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields payload (line 23), id (line 24), receipt (line 25) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field payload (line 23) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "terminateWorkflow(com.netflix.conductor.common.run.Workflow,java.lang.String,java.lang.String)",
            "param": "reason",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.execution.WorkflowExecutor",
            "pkg": "com.netflix.conductor.core.execution",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'reason' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'failureWorkflow' where @NonNull is required"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getPayloadObject(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "com.netflix.conductor.core.events.DefaultEventProcessor",
            "pkg": "com.netflix.conductor.core.events",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/events/DefaultEventProcessor.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'payloadObject' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'getPayloadObject(msg.getPayload())' where @NonNull is required"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "taskDefs",
            "location": "CLASS_FIELD",
            "class": "com.netflix.conductor.metrics.WorkflowMonitor",
            "pkg": "com.netflix.conductor.metrics",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/metrics/WorkflowMonitor.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field workflowDefs (line 52) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "dereferenced expression taskDefs is @Nullable"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "workflowDefs",
            "location": "CLASS_FIELD",
            "class": "com.netflix.conductor.metrics.WorkflowMonitor",
            "pkg": "com.netflix.conductor.metrics",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/metrics/WorkflowMonitor.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field taskDefs (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "dereferenced expression workflowDefs is @Nullable"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "replace(java.util.Map<java.lang.String,java.lang.Object>,com.jayway.jsonpath.DocumentContext,java.lang.String)",
            "param": "taskId",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.utils.ParametersUtils",
            "pkg": "com.netflix.conductor.core.utils",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/ParametersUtils.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'taskId' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'taskId' where @NonNull is required"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "payload",
            "location": "CLASS_FIELD",
            "class": "com.netflix.conductor.core.events.queue.Message",
            "pkg": "com.netflix.conductor.core.events.queue",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/events/queue/Message.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields id (line 25), receipt (line 26) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getLastPollTask(java.lang.String,java.lang.String,java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "com.netflix.conductor.service.ExecutionService",
            "pkg": "com.netflix.conductor.service",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/service/ExecutionService.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "getQueueName(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "param": "isolationGroup",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.utils.QueueUtils",
            "pkg": "com.netflix.conductor.core.utils",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/QueueUtils.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getLocation(com.netflix.conductor.common.utils.ExternalPayloadStorage.Operation,com.netflix.conductor.common.utils.ExternalPayloadStorage.PayloadType,java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "com.netflix.conductor.core.storage.DummyPayloadStorage",
            "pkg": "com.netflix.conductor.core.storage",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/storage/DummyPayloadStorage.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method com.netflix.conductor.common.utils.ExternalPayloadStorage.getLocation(com.netflix.conductor.common.utils.ExternalPayloadStorage.Operation,com.netflix.conductor.common.utils.ExternalPayloadStorage.PayloadType,java.lang.String) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "startWorkflow(java.lang.String,java.lang.Integer,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)",
            "param": "event",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.execution.WorkflowExecutor",
            "pkg": "com.netflix.conductor.core.execution",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "TerminateWorkflowException(java.lang.String)",
            "param": "reason",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.exception.TerminateWorkflowException",
            "pkg": "com.netflix.conductor.core.exception",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/exception/TerminateWorkflowException.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'reason' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "startWorkflow(java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "param": "parentWorkflowId",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.execution.WorkflowExecutor",
            "pkg": "com.netflix.conductor.core.execution",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getPendingTaskByWorkflow(java.lang.String,java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "com.netflix.conductor.core.execution.WorkflowExecutor",
            "pkg": "com.netflix.conductor.core.execution",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "startWorkflow(java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)",
            "param": "externalInputPayloadStoragePath",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.execution.WorkflowExecutor",
            "pkg": "com.netflix.conductor.core.execution",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "startWorkflow(java.lang.String,java.lang.Integer,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)",
            "param": "externalInputPayloadStoragePath",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.execution.WorkflowExecutor",
            "pkg": "com.netflix.conductor.core.execution",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "startWorkflow(java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)",
            "param": "parentWorkflowId",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.execution.WorkflowExecutor",
            "pkg": "com.netflix.conductor.core.execution",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "poll(java.lang.String,java.lang.String,java.lang.String)",
            "param": "domain",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.service.ExecutionService",
            "pkg": "com.netflix.conductor.service",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/service/ExecutionService.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'domain' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "exceedsRateLimitPerFrequency(com.netflix.conductor.common.metadata.tasks.Task,com.netflix.conductor.common.metadata.tasks.TaskDef)",
            "param": "taskDef",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.orchestration.ExecutionDAOFacade",
            "pkg": "com.netflix.conductor.core.orchestration",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/orchestration/ExecutionDAOFacade.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "replaceVariables(java.lang.String,com.jayway.jsonpath.DocumentContext,java.lang.String)",
            "param": "taskId",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.utils.ParametersUtils",
            "pkg": "com.netflix.conductor.core.utils",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/ParametersUtils.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'taskId' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getTask(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "com.netflix.conductor.core.execution.WorkflowExecutor",
            "pkg": "com.netflix.conductor.core.execution",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "startWorkflow(java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)",
            "param": "taskToDomain",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.execution.WorkflowExecutor",
            "pkg": "com.netflix.conductor.core.execution",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "getQueue(java.lang.String)",
            "param": "eventType",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.events.EventQueues",
            "pkg": "com.netflix.conductor.core.events",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/events/EventQueues.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'eventType' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "rerunWF(java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String)",
            "param": "workflowInput",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.execution.WorkflowExecutor",
            "pkg": "com.netflix.conductor.core.execution",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "download(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "com.netflix.conductor.core.storage.DummyPayloadStorage",
            "pkg": "com.netflix.conductor.core.storage",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/storage/DummyPayloadStorage.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method com.netflix.conductor.common.utils.ExternalPayloadStorage.download(java.lang.String) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "metadataDAO",
            "location": "CLASS_FIELD",
            "class": "com.netflix.conductor.validations.ValidationContext",
            "pkg": "com.netflix.conductor.validations",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/validations/ValidationContext.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "startWorkflow(com.netflix.conductor.common.metadata.workflow.WorkflowDef,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)",
            "param": "event",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.execution.WorkflowExecutor",
            "pkg": "com.netflix.conductor.core.execution",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "startWorkflow(com.netflix.conductor.common.metadata.workflow.WorkflowDef,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)",
            "param": "externalInputPayloadStoragePath",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.execution.WorkflowExecutor",
            "pkg": "com.netflix.conductor.core.execution",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "startWorkflow(com.netflix.conductor.common.metadata.workflow.WorkflowDef,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)",
            "param": "parentWorkflowId",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.execution.WorkflowExecutor",
            "pkg": "com.netflix.conductor.core.execution",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "startWorkflow(com.netflix.conductor.common.metadata.workflow.WorkflowDef,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)",
            "param": "externalInputPayloadStoragePath",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.execution.WorkflowExecutor",
            "pkg": "com.netflix.conductor.core.execution",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "poll(java.lang.String,java.lang.String,java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "com.netflix.conductor.service.ExecutionService",
            "pkg": "com.netflix.conductor.service",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/service/ExecutionService.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getActiveDomain(java.lang.String,java.lang.String[])",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "com.netflix.conductor.core.execution.WorkflowExecutor",
            "pkg": "com.netflix.conductor.core.execution",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'getActiveDomain(task.getTaskType(), domains)' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'getActiveDomain(task.getTaskType(), taskDomainstr.split(\",\"))' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "getWorkflowDef(@javax.validation.constraints.NotEmpty(message=\"Workflow name cannot be null or empty\") java.lang.String,java.lang.Integer)",
            "param": "version",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.service.MetadataService",
            "pkg": "com.netflix.conductor.service",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/service/MetadataService.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getNextTasksToBeScheduled(com.netflix.conductor.common.run.Workflow,com.netflix.conductor.common.metadata.tasks.Task)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "com.netflix.conductor.core.execution.DeciderService",
            "pkg": "com.netflix.conductor.core.execution",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/DeciderService.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "retry(com.netflix.conductor.common.metadata.tasks.TaskDef,com.netflix.conductor.common.metadata.workflow.WorkflowTask,com.netflix.conductor.common.metadata.tasks.Task,com.netflix.conductor.common.run.Workflow)",
            "param": "taskDefinition",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.execution.DeciderService",
            "pkg": "com.netflix.conductor.core.execution",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/DeciderService.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getValue(java.lang.String,com.fasterxml.jackson.databind.JsonNode)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "com.netflix.conductor.core.events.queue.DefaultEventQueueProcessor",
            "pkg": "com.netflix.conductor.core.events.queue",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/events/queue/DefaultEventQueueProcessor.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "startWorkflow(java.lang.String,java.lang.Integer,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String)",
            "param": "externalInputPayloadStoragePath",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.execution.WorkflowExecutor",
            "pkg": "com.netflix.conductor.core.execution",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'externalInputPayloadStoragePath' where @NonNull is required"
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "validateInputStatus(java.lang.String)",
            "param": "status",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.execution.tasks.Terminate",
            "pkg": "com.netflix.conductor.core.execution.tasks",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/tasks/Terminate.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "getQueueName(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "param": "domain",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.utils.QueueUtils",
            "pkg": "com.netflix.conductor.core.utils",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/QueueUtils.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "getTasksToBeScheduled(com.netflix.conductor.common.run.Workflow,com.netflix.conductor.common.metadata.workflow.WorkflowTask,int,java.lang.String)",
            "param": "retriedTaskId",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.execution.DeciderService",
            "pkg": "com.netflix.conductor.core.execution",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/DeciderService.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'retriedTaskId' where @NonNull is required"
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "startWorkflow(java.lang.String,java.lang.Integer,java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String)",
            "param": "event",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.execution.WorkflowExecutor",
            "pkg": "com.netflix.conductor.core.execution",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getTaskPollDataByDomain(java.lang.String,java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "com.netflix.conductor.core.orchestration.ExecutionDAOFacade",
            "pkg": "com.netflix.conductor.core.orchestration",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/orchestration/ExecutionDAOFacade.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "startWorkflow(java.lang.String,java.lang.Integer,java.lang.String,java.lang.Integer,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String,java.lang.String)",
            "param": "event",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.execution.WorkflowExecutor",
            "pkg": "com.netflix.conductor.core.execution",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "searchWorkflows(java.lang.String,java.lang.String,int,int,java.util.List<java.lang.String>)",
            "param": "sort",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.dao.IndexDAO",
            "pkg": "com.netflix.conductor.dao",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/dao/IndexDAO.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "terminateWorkflow(com.netflix.conductor.common.run.Workflow,java.lang.String,java.lang.String)",
            "param": "failureWorkflow",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.execution.WorkflowExecutor",
            "pkg": "com.netflix.conductor.core.execution",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java",
            "errors": [],
            "jump": -2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getQueue(com.netflix.conductor.common.run.Workflow,com.netflix.conductor.common.metadata.tasks.Task)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "com.netflix.conductor.core.execution.tasks.Event",
            "pkg": "com.netflix.conductor.core.execution.tasks",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/tasks/Event.java",
            "errors": [
                "dereferenced expression getQueue(workflow, task) is @Nullable"
            ],
            "jump": -2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "updateWorkflowOutput(com.netflix.conductor.common.run.Workflow,com.netflix.conductor.common.metadata.tasks.Task)",
            "param": "task",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.execution.DeciderService",
            "pkg": "com.netflix.conductor.core.execution",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/DeciderService.java",
            "errors": [],
            "jump": -2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "getTaskInputV2(java.util.Map<java.lang.String,java.lang.Object>,com.netflix.conductor.common.run.Workflow,java.lang.String,com.netflix.conductor.common.metadata.tasks.TaskDef)",
            "param": "taskDefinition",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.utils.ParametersUtils",
            "pkg": "com.netflix.conductor.core.utils",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/ParametersUtils.java",
            "errors": [],
            "jump": -5
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "appendFailedResponse(java.lang.String,java.lang.String)",
            "param": "errorMessage",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.utils.BulkResponse",
            "pkg": "com.netflix.conductor.core.utils",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/BulkResponse.java",
            "errors": [],
            "jump": -5
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getMetadataDAO()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "com.netflix.conductor.validations.ValidationContext",
            "pkg": "com.netflix.conductor.validations",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/validations/ValidationContext.java",
            "errors": [
                "dereferenced expression ValidationContext.getMetadataDAO() is @Nullable",
                "dereferenced expression ValidationContext.getMetadataDAO() is @Nullable",
                "dereferenced expression ValidationContext.getMetadataDAO() is @Nullable",
                "dereferenced expression ValidationContext.getMetadataDAO() is @Nullable"
            ],
            "jump": 3
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "withRetryTaskId(java.lang.String)",
            "param": "val",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.execution.mapper.TaskMapperContext.Builder",
            "pkg": "com.netflix.conductor.core.execution.mapper",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/mapper/TaskMapperContext.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field retryTaskId (line 174) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "poll(java.lang.String,java.lang.String,java.lang.String,int,int)",
            "param": "domain",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.service.ExecutionService",
            "pkg": "com.netflix.conductor.service",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/service/ExecutionService.java",
            "errors": [],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "terminateWorkflow(com.netflix.conductor.common.run.Workflow,java.lang.String,java.lang.String)",
            "param": "reason",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.execution.WorkflowExecutor",
            "pkg": "com.netflix.conductor.core.execution",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/execution/WorkflowExecutor.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'failureWorkflow' where @NonNull is required"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "getTaskInput(java.util.Map<java.lang.String,java.lang.Object>,com.netflix.conductor.common.run.Workflow,com.netflix.conductor.common.metadata.tasks.TaskDef,java.lang.String)",
            "param": "taskDefinition",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.utils.ParametersUtils",
            "pkg": "com.netflix.conductor.core.utils",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/ParametersUtils.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "getTaskInputV2(java.util.Map<java.lang.String,java.lang.Object>,com.netflix.conductor.common.run.Workflow,java.lang.String,com.netflix.conductor.common.metadata.tasks.TaskDef)",
            "param": "taskId",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.utils.ParametersUtils",
            "pkg": "com.netflix.conductor.core.utils",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/ParametersUtils.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "replace(java.util.Map<java.lang.String,java.lang.Object>,com.jayway.jsonpath.DocumentContext,java.lang.String)",
            "param": "taskId",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.utils.ParametersUtils",
            "pkg": "com.netflix.conductor.core.utils",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/ParametersUtils.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "poll(java.lang.String,java.lang.String,java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "com.netflix.conductor.service.TaskServiceImpl",
            "pkg": "com.netflix.conductor.service",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/service/TaskServiceImpl.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method com.netflix.conductor.service.TaskService.poll(@javax.validation.constraints.NotEmpty(message=\"TaskType cannot be null or empty.\") java.lang.String,java.lang.String,java.lang.String) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "replace(java.lang.String)",
            "param": "paramString",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.utils.ParametersUtils",
            "pkg": "com.netflix.conductor.core.utils",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/ParametersUtils.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'paramString' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "getQueueName(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "param": "executionNameSpace",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.utils.QueueUtils",
            "pkg": "com.netflix.conductor.core.utils",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/QueueUtils.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "poll(java.lang.String,java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "com.netflix.conductor.service.ExecutionService",
            "pkg": "com.netflix.conductor.service",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/service/ExecutionService.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "exceedsRateLimitPerFrequency(com.netflix.conductor.common.metadata.tasks.Task,com.netflix.conductor.common.metadata.tasks.TaskDef)",
            "param": "taskDef",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.dao.RateLimitingDAO",
            "pkg": "com.netflix.conductor.dao",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/dao/RateLimitingDAO.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "TerminateWorkflowException(java.lang.String,com.netflix.conductor.common.run.Workflow.WorkflowStatus)",
            "param": "reason",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.exception.TerminateWorkflowException",
            "pkg": "com.netflix.conductor.core.exception",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/exception/TerminateWorkflowException.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getTask(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "com.netflix.conductor.service.ExecutionService",
            "pkg": "com.netflix.conductor.service",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/service/ExecutionService.java",
            "errors": [
                "dereferenced expression task is @Nullable"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "WRONG_OVERRIDE_RETURN",
            "method": "poll(@javax.validation.constraints.NotEmpty(message=\"TaskType cannot be null or empty.\") java.lang.String,java.lang.String,java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "com.netflix.conductor.service.TaskService",
            "pkg": "com.netflix.conductor.service",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/service/TaskService.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "TerminateWorkflowException(java.lang.String,com.netflix.conductor.common.run.Workflow.WorkflowStatus,com.netflix.conductor.common.metadata.tasks.Task)",
            "param": "reason",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.exception.TerminateWorkflowException",
            "pkg": "com.netflix.conductor.core.exception",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/exception/TerminateWorkflowException.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "replaceVariables(java.lang.String,com.jayway.jsonpath.DocumentContext,java.lang.String)",
            "param": "paramString",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.utils.ParametersUtils",
            "pkg": "com.netflix.conductor.core.utils",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/ParametersUtils.java",
            "errors": [
                "dereferenced expression paramString is @Nullable"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "replaceList(java.util.List<?>,java.lang.String,com.jayway.jsonpath.DocumentContext)",
            "param": "taskId",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.utils.ParametersUtils",
            "pkg": "com.netflix.conductor.core.utils",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/ParametersUtils.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "getTaskInput(java.util.Map<java.lang.String,java.lang.Object>,com.netflix.conductor.common.run.Workflow,com.netflix.conductor.common.metadata.tasks.TaskDef,java.lang.String)",
            "param": "taskId",
            "location": "METHOD_PARAM",
            "class": "com.netflix.conductor.core.utils.ParametersUtils",
            "pkg": "com.netflix.conductor.core.utils",
            "inject": "true",
            "uri": "//private/tmp/projects/conductor/core/src/main/java/com/netflix/conductor/core/utils/ParametersUtils.java",
            "errors": [],
            "jump": -4
        }
    ]
}