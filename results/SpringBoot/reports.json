{"reports": [{"inject": "true", "pkg": "org.springframework.boot.origin", "class": "org.springframework.boot.origin.Origin", "jump": 7, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/origin/Origin.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'origin' where @NonNull is required", "(Covered) passing @Nullable parameter 'Origin.from(reference.getConfigDataLocation())' where @NonNull is required"], "location": "METHOD_RETURN", "method": "from(java.lang.Object)"}, {"inject": "true", "pkg": "org.springframework.boot.context.properties.source", "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyName.ElementsParser", "jump": 3, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java", "param": "valueProcessor", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field string (line 64) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resolved (line 815) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'valueProcessor' where @NonNull is required", "(Covered) passing @Nullable parameter 'valueProcessor' where @NonNull is required", "(Covered) passing @Nullable parameter 'valueProcessor' where @NonNull is required", "(Covered) passing @Nullable parameter 'valueProcessor' where @NonNull is required"], "location": "METHOD_PARAM", "method": "parse(java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)"}, {"inject": "true", "pkg": "org.springframework.boot.builder", "class": "org.springframework.boot.builder.SpringApplicationBuilder", "jump": 3, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/builder/SpringApplicationBuilder.java", "param": "environment", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'this.environment' where @NonNull is required", "(Covered) passing @Nullable parameter 'this.environment' where @NonNull is required", "(Covered) passing @Nullable parameter 'this.environment' where @NonNull is required"], "location": "CLASS_FIELD", "method": ""}, {"inject": "true", "pkg": "org.springframework.boot.builder", "class": "org.springframework.boot.builder.SpringApplicationBuilder", "jump": 3, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/builder/SpringApplicationBuilder.java", "param": "context", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields parent (line 80), environment (line 88) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "CLASS_FIELD", "method": ""}, {"inject": "true", "pkg": "org.springframework.boot.context.properties.source", "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyName", "jump": 2, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field string (line 64) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resolved (line 816) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'ConfigurationPropertyName.of(name, true)' where @NonNull is required"], "location": "METHOD_RETURN", "method": "of(java.lang.CharSequence,boolean)"}, {"inject": "true", "pkg": "org.springframework.boot", "class": "org.springframework.boot.SpringApplication", "jump": 2, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java", "param": "initializers", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), listeners (line 231), defaultProperties (line 233) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression this.initializers is @Nullable", "(Covered) passing @Nullable parameter 'this.initializers' where @NonNull is required"], "location": "CLASS_FIELD", "method": ""}, {"inject": "true", "pkg": "org.springframework.boot", "class": "org.springframework.boot.SpringApplication", "jump": 2, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java", "param": "context", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_PARAM", "method": "handleRunFailure(org.springframework.context.ConfigurableApplicationContext,java.lang.Throwable,org.springframework.boot.SpringApplicationRunListeners)"}, {"inject": "true", "pkg": "org.springframework.boot.origin", "class": "org.springframework.boot.origin.OriginTrackedValue", "jump": 2, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/origin/OriginTrackedValue.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_RETURN", "method": "of(java.lang.Object,org.springframework.boot.origin.Origin)"}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics", "class": "org.springframework.boot.diagnostics.AbstractFailureAnalyzer", "jump": 2, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/AbstractFailureAnalyzer.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'exception' where @NonNull is required", "(Covered) passing @Nullable parameter 'target' where @NonNull is required", "(Covered) passing @Nullable parameter 'exception' where @NonNull is required"], "location": "METHOD_RETURN", "method": "<E>findCause(java.lang.Throwable,java.lang.Class<E>)"}, {"inject": "true", "pkg": "org.springframework.boot", "class": "org.springframework.boot.SpringApplication", "jump": 2, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java", "param": "listeners", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), defaultProperties (line 233) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression this.listeners is @Nullable", "(Covered) passing @Nullable parameter 'this.listeners' where @NonNull is required"], "location": "CLASS_FIELD", "method": ""}, {"inject": "true", "pkg": "org.springframework.boot.origin", "class": "org.springframework.boot.origin.OriginTrackedValue", "jump": 1, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/origin/OriginTrackedValue.java", "param": "origin", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'origin' where @NonNull is required", "(Covered) passing @Nullable parameter 'origin' where @NonNull is required"], "location": "METHOD_PARAM", "method": "of(java.lang.Object,org.springframework.boot.origin.Origin)"}, {"inject": "true", "pkg": "org.springframework.boot", "class": "org.springframework.boot.SpringApplication", "jump": 1, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java", "param": "banner", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields beanNameGenerator (line 219), environment (line 221), initializers (line 229), listeners (line 231), defaultProperties (line 233) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'this.banner' where @NonNull is required"], "location": "CLASS_FIELD", "method": ""}, {"inject": "true", "pkg": "org.springframework.boot", "class": "org.springframework.boot.SpringApplication", "jump": 1, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java", "param": "defaultProperties", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'this.defaultProperties' where @NonNull is required"], "location": "CLASS_FIELD", "method": ""}, {"inject": "true", "pkg": "org.springframework.boot.context.properties.source", "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyName.ElementsParser", "jump": 1, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java", "param": "resolved", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field string (line 64) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'this.resolved' where @NonNull is required", "(Covered) passing @Nullable parameter 'this.resolved' where @NonNull is required"], "location": "CLASS_FIELD", "method": ""}, {"inject": "true", "pkg": "org.springframework.boot.context.properties.source", "class": "org.springframework.boot.context.properties.source.ConfigurationProperty", "jump": 1, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationProperty.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_RETURN", "method": "of(org.springframework.boot.context.properties.source.ConfigurationPropertyName,java.lang.Object,org.springframework.boot.origin.Origin)"}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics.analyzer", "class": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer", "jump": 0, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/InvalidConfigurationPropertyValueFailureAnalyzer.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field string (line 64) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resolved (line 815) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) method returns @Nullable, but superclass method org.springframework.boot.diagnostics.AbstractFailureAnalyzer.analyze(java.lang.Throwable,T) returns @NonNull"], "location": "METHOD_RETURN", "method": "analyze(java.lang.Throwable,org.springframework.boot.context.properties.source.InvalidConfigurationPropertyValueException)"}, {"inject": "true", "pkg": "org.springframework.boot.builder", "class": "org.springframework.boot.builder.SpringApplicationBuilder", "jump": 0, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/builder/SpringApplicationBuilder.java", "param": "parent", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), environment (line 88) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "CLASS_FIELD", "method": ""}, {"inject": "true", "pkg": "org.springframework.boot.context.properties.source", "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyName", "jump": 0, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java", "param": "elementValueProcessor", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field string (line 64) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'elementValueProcessor' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull field resolved (line 815) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_PARAM", "method": "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)"}, {"inject": "true", "pkg": "org.springframework.boot", "class": "org.springframework.boot.SpringApplication", "jump": 0, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'printedBanner' where @NonNull is required"], "location": "METHOD_RETURN", "method": "printBanner(org.springframework.core.env.ConfigurableEnvironment)"}, {"inject": "true", "pkg": "org.springframework.boot", "class": "org.springframework.boot.SpringApplication", "jump": 0, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields mainApplicationClass (line 204), banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_RETURN", "method": "deduceMainApplicationClass()"}, {"inject": "true", "pkg": "org.springframework.boot.context.properties.source", "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyName.Elements", "jump": 0, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java", "param": "resolved", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field string (line 64) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resolved (line 815) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_PARAM", "method": "Elements(java.lang.CharSequence,int,int[],int[],org.springframework.boot.context.properties.source.ConfigurationPropertyName.ElementType[],java.lang.CharSequence[])"}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics", "class": "org.springframework.boot.diagnostics.AbstractFailureAnalyzer", "jump": 0, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/AbstractFailureAnalyzer.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) method returns @Nullable, but superclass method org.springframework.boot.diagnostics.FailureAnalyzer.analyze(java.lang.Throwable) returns @NonNull"], "location": "METHOD_RETURN", "method": "analyze(java.lang.Throwable)"}, {"inject": "true", "pkg": "org.springframework.boot.context.properties.source", "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyName", "jump": 0, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java", "param": "e1", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field string (line 64) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'type1' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull field resolved (line 815) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_PARAM", "method": "compare(java.lang.String,org.springframework.boot.context.properties.source.ConfigurationPropertyName.ElementType,java.lang.String,org.springframework.boot.context.properties.source.ConfigurationPropertyName.ElementType)"}, {"inject": "true", "pkg": "org.springframework.boot", "class": "org.springframework.boot.SpringApplication", "jump": 0, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java", "param": "beanNameGenerator", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), environment (line 221), initializers (line 229), listeners (line 231), defaultProperties (line 233) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "CLASS_FIELD", "method": ""}, {"inject": "true", "pkg": "org.springframework.boot.web.server", "class": "org.springframework.boot.web.server.PortInUseException", "jump": 0, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/PortInUseException.java", "param": "cause", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field string (line 64) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resolved (line 815) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'cause' where @NonNull is required"], "location": "METHOD_PARAM", "method": "PortInUseException(int,java.lang.Throwable)"}, {"inject": "true", "pkg": "org.springframework.boot", "class": "org.springframework.boot.LazyInitializationBeanFactoryPostProcessor", "jump": 0, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/LazyInitializationBeanFactoryPostProcessor.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'beanType' where @NonNull is required"], "location": "METHOD_RETURN", "method": "getBeanType(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.lang.String)"}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics.analyzer", "class": "org.springframework.boot.diagnostics.analyzer.AbstractInjectionFailureAnalyzer", "jump": 0, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/AbstractInjectionFailureAnalyzer.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'getDescription(rootFailure)' where @NonNull is required"], "location": "METHOD_RETURN", "method": "getDescription(java.lang.Throwable)"}, {"inject": "true", "pkg": "org.springframework.boot.origin", "class": "org.springframework.boot.origin.JarUri", "jump": 0, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/origin/JarUri.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_RETURN", "method": "from(java.lang.String)"}, {"inject": "true", "pkg": "org.springframework.boot", "class": "org.springframework.boot.SpringApplication", "jump": 0, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java", "param": "environment", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), initializers (line 229), listeners (line 231), defaultProperties (line 233) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "CLASS_FIELD", "method": ""}, {"inject": "true", "pkg": "org.springframework.boot.origin", "class": "org.springframework.boot.origin.OriginLookup", "jump": 0, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/origin/OriginLookup.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'origin' where @NonNull is required", "(Covered) passing @Nullable parameter 'origin' where @NonNull is required"], "location": "METHOD_RETURN", "method": "<K>getOrigin(java.lang.Object,K)"}, {"inject": "true", "pkg": "org.springframework.boot", "class": "org.springframework.boot.DefaultBootstrapContext", "jump": 0, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/DefaultBootstrapContext.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) method returns @Nullable, but superclass method org.springframework.boot.BootstrapRegistry.<T>getRegisteredInstanceSupplier(java.lang.Class<T>) returns @NonNull"], "location": "METHOD_RETURN", "method": "<T>getRegisteredInstanceSupplier(java.lang.Class<T>)"}, {"inject": "true", "pkg": "org.springframework.boot", "class": "org.springframework.boot.BootstrapRegistry.InstanceSupplier", "jump": 0, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/BootstrapRegistry.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "method": "get(org.springframework.boot.BootstrapContext)"}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics.analyzer", "class": "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer", "jump": 0, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/BindFailureAnalyzer.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) method returns @Nullable, but superclass method org.springframework.boot.diagnostics.AbstractFailureAnalyzer.analyze(java.lang.Throwable,T) returns @NonNull"], "location": "METHOD_RETURN", "method": "analyze(java.lang.Throwable,org.springframework.boot.context.properties.bind.BindException)"}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics.analyzer", "class": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer", "jump": 0, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/NoSuchMethodFailureAnalyzer.java", "param": "cause", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'cause' where @NonNull is required"], "location": "METHOD_PARAM", "method": "getNoSuchMethodDescriptor(java.lang.String)"}, {"inject": "true", "pkg": "org.springframework.boot", "class": "org.springframework.boot.SpringApplication", "jump": 0, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java", "param": "resourceLoader", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), resourceLoader (line 216), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_PARAM", "method": "SpringApplication(org.springframework.core.io.ResourceLoader,java.lang.Class<?>...)"}, {"inject": "true", "pkg": "org.springframework.boot.context.properties.source", "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyName.ElementsParser", "jump": 0, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field string (line 64) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resolved (line 815) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_RETURN", "method": "expand(java.lang.CharSequence[])"}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics.analyzer", "class": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer", "jump": 0, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/NoSuchMethodFailureAnalyzer.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) method returns @Nullable, but superclass method org.springframework.boot.diagnostics.AbstractFailureAnalyzer.analyze(java.lang.Throwable,T) returns @NonNull"], "location": "METHOD_RETURN", "method": "analyze(java.lang.Throwable,java.lang.NoSuchMethodError)"}, {"inject": "true", "pkg": "org.springframework.boot.builder", "class": "org.springframework.boot.builder.ParentContextCloserApplicationListener", "jump": -1, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/builder/ParentContextCloserApplicationListener.java", "param": "context", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "CLASS_FIELD", "method": ""}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics.analyzer", "class": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer", "jump": -1, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/NoSuchMethodFailureAnalyzer.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_RETURN", "method": "findCandidates(java.lang.String)"}, {"inject": "true", "pkg": "org.springframework.boot.context.properties.bind", "class": "org.springframework.boot.context.properties.bind.Bindable", "jump": -1, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Bindable.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field string (line 64) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resolved (line 815) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_RETURN", "method": "<A>getAnnotation(java.lang.Class<A>)"}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics.analyzer", "class": "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer", "jump": -1, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/BindFailureAnalyzer.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_RETURN", "method": "getMessage(org.springframework.boot.context.properties.bind.BindException)"}, {"inject": "true", "pkg": "org.springframework.boot.origin", "class": "org.springframework.boot.origin.Origin", "jump": -1, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/origin/Origin.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_RETURN", "method": "getParent()"}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics.analyzer", "class": "org.springframework.boot.diagnostics.analyzer.AbstractInjectionFailureAnalyzer", "jump": -1, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/AbstractInjectionFailureAnalyzer.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_RETURN", "method": "<C>findMostNestedCause(java.lang.Throwable,java.lang.Class<C>)"}, {"inject": "true", "pkg": "org.springframework.boot.context.properties.bind", "class": "org.springframework.boot.context.properties.bind.Bindable", "jump": -1, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Bindable.java", "param": "value", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field string (line 64) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resolved (line 815) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_PARAM", "method": "Bindable(org.springframework.core.ResolvableType,org.springframework.core.ResolvableType,java.util.function.Supplier<T>,java.lang.annotation.Annotation[])"}, {"inject": "true", "pkg": "org.springframework.boot", "class": "org.springframework.boot.SpringApplication", "jump": -1, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_RETURN", "method": "getSpringBootExceptionHandler()"}, {"inject": "true", "pkg": "org.springframework.boot.context.properties.source", "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyName", "jump": -1, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field string (line 64) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resolved (line 816) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_RETURN", "method": "elementsOf(java.lang.CharSequence,boolean,int)"}, {"inject": "true", "pkg": "org.springframework.boot", "class": "org.springframework.boot.SpringApplication", "jump": -1, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java", "param": "listeners", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_PARAM", "method": "handleRunFailure(org.springframework.context.ConfigurableApplicationContext,java.lang.Throwable,org.springframework.boot.SpringApplicationRunListeners)"}, {"inject": "true", "pkg": "org.springframework.boot", "class": "org.springframework.boot.BeanDefinitionLoader", "jump": -1, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/BeanDefinitionLoader.java", "param": "resourceLoader", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "CLASS_FIELD", "method": ""}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics.analyzer", "class": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer", "jump": -1, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/NoSuchMethodFailureAnalyzer.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_RETURN", "method": "getTypeHierarchy(java.lang.Class<?>)"}, {"inject": "true", "pkg": "org.springframework.boot.context.properties.source", "class": "org.springframework.boot.context.properties.source.ConfigurationProperty", "jump": -1, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationProperty.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_RETURN", "method": "of(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.origin.OriginTrackedValue)"}, {"inject": "true", "pkg": "org.springframework.boot.context.properties.source", "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyName", "jump": -1, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java", "param": "string", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resolved (line 816) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "CLASS_FIELD", "method": ""}, {"inject": "true", "pkg": "org.springframework.boot.origin", "class": "org.springframework.boot.origin.OriginTrackedValue", "jump": -1, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/origin/OriginTrackedValue.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_RETURN", "method": "toString()"}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics.analyzer", "class": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer", "jump": -1, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/NoSuchMethodFailureAnalyzer.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_RETURN", "method": "load(java.lang.String)"}, {"inject": "true", "pkg": "org.springframework.boot", "class": "org.springframework.boot.SpringApplicationRunListeners", "jump": -1, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplicationRunListeners.java", "param": "stepAction", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_PARAM", "method": "doWithListeners(java.lang.String,java.util.function.Consumer<org.springframework.boot.SpringApplicationRunListener>,java.util.function.Consumer<org.springframework.core.metrics.StartupStep>)"}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics.analyzer", "class": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer", "jump": -1, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/InvalidConfigurationPropertyValueFailureAnalyzer.java", "param": "environment", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field string (line 64) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resolved (line 815) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "CLASS_FIELD", "method": ""}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics.analyzer", "class": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer", "jump": -3, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/NoSuchMethodFailureAnalyzer.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_RETURN", "method": "extractClassName(java.lang.String)"}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics.analyzer", "class": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer", "jump": -4, "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/NoSuchMethodFailureAnalyzer.java", "param": "", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields context (line 77), parent (line 79), environment (line 87) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields banner (line 214), beanNameGenerator (line 218), environment (line 220), initializers (line 228), listeners (line 230), defaultProperties (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_RETURN", "method": "getNoSuchMethodDescriptor(java.lang.String)"}, {"inject": "true", "pkg": "org.springframework.boot.builder", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/builder/ParentContextCloserApplicationListener.java", "jump": 0, "method": "", "param": "context", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "class": "org.springframework.boot.builder.ParentContextCloserApplicationListener"}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics.analyzer", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/NoSuchMethodFailureAnalyzer.java", "jump": 0, "method": "findCandidates(java.lang.String)", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer"}, {"inject": "true", "pkg": "org.springframework.boot.context.properties.bind", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Bindable.java", "jump": 0, "method": "<A>getAnnotation(java.lang.Class<A>)", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.context.properties.bind.Bindable"}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics.analyzer", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/BindFailureAnalyzer.java", "jump": 0, "method": "getMessage(org.springframework.boot.context.properties.bind.BindException)", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer"}, {"inject": "true", "pkg": "org.springframework.boot.context.properties.source", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java", "jump": 0, "method": "of(java.lang.CharSequence,boolean)", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyName"}, {"inject": "true", "pkg": "org.springframework.boot.origin", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/origin/Origin.java", "jump": 0, "method": "getParent()", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.origin.Origin"}, {"inject": "true", "pkg": "org.springframework.boot.builder", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/builder/SpringApplicationBuilder.java", "jump": 0, "method": "", "param": "parent", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "class": "org.springframework.boot.builder.SpringApplicationBuilder"}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics.analyzer", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/AbstractInjectionFailureAnalyzer.java", "jump": 0, "method": "<C>findMostNestedCause(java.lang.Throwable,java.lang.Class<C>)", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.diagnostics.analyzer.AbstractInjectionFailureAnalyzer"}, {"inject": "true", "pkg": "org.springframework.boot.context.properties.source", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java", "jump": 0, "method": "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)", "param": "elementValueProcessor", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyName"}, {"inject": "true", "pkg": "org.springframework.boot.context.properties.bind", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Bindable.java", "jump": 0, "method": "Bindable(org.springframework.core.ResolvableType,org.springframework.core.ResolvableType,java.util.function.Supplier<T>,java.lang.annotation.Annotation[])", "param": "value", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "class": "org.springframework.boot.context.properties.bind.Bindable"}, {"inject": "true", "pkg": "org.springframework.boot.origin", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/origin/OriginTrackedValue.java", "jump": 0, "method": "of(java.lang.Object,org.springframework.boot.origin.Origin)", "param": "origin", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "class": "org.springframework.boot.origin.OriginTrackedValue"}, {"inject": "true", "pkg": "org.springframework.boot", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java", "jump": 0, "method": "getSpringBootExceptionHandler()", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.SpringApplication"}, {"inject": "true", "pkg": "org.springframework.boot", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java", "jump": 0, "method": "", "param": "initializers", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "class": "org.springframework.boot.SpringApplication"}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics.analyzer", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/NoSuchMethodFailureAnalyzer.java", "jump": 0, "method": "extractClassName(java.lang.String)", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer"}, {"inject": "true", "pkg": "org.springframework.boot", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java", "jump": 0, "method": "printBanner(org.springframework.core.env.ConfigurableEnvironment)", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.SpringApplication"}, {"inject": "true", "pkg": "org.springframework.boot", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java", "jump": 0, "method": "handleRunFailure(org.springframework.context.ConfigurableApplicationContext,java.lang.Throwable,org.springframework.boot.SpringApplicationRunListeners)", "param": "context", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "class": "org.springframework.boot.SpringApplication"}, {"inject": "true", "pkg": "org.springframework.boot", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java", "jump": 0, "method": "deduceMainApplicationClass()", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.SpringApplication"}, {"inject": "true", "pkg": "org.springframework.boot.origin", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/origin/OriginTrackedValue.java", "jump": 0, "method": "of(java.lang.Object,org.springframework.boot.origin.Origin)", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.origin.OriginTrackedValue"}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/AbstractFailureAnalyzer.java", "jump": 0, "method": "<E>findCause(java.lang.Throwable,java.lang.Class<E>)", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.diagnostics.AbstractFailureAnalyzer"}, {"inject": "true", "pkg": "org.springframework.boot.context.properties.source", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java", "jump": 0, "method": "elementsOf(java.lang.CharSequence,boolean,int)", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyName"}, {"inject": "true", "pkg": "org.springframework.boot", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java", "jump": 0, "method": "handleRunFailure(org.springframework.context.ConfigurableApplicationContext,java.lang.Throwable,org.springframework.boot.SpringApplicationRunListeners)", "param": "listeners", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "class": "org.springframework.boot.SpringApplication"}, {"inject": "true", "pkg": "org.springframework.boot.origin", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/origin/Origin.java", "jump": 0, "method": "from(java.lang.Object)", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.origin.Origin"}, {"inject": "true", "pkg": "org.springframework.boot", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java", "jump": 0, "method": "", "param": "banner", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "class": "org.springframework.boot.SpringApplication"}, {"inject": "true", "pkg": "org.springframework.boot", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/BeanDefinitionLoader.java", "jump": 0, "method": "", "param": "resourceLoader", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "class": "org.springframework.boot.BeanDefinitionLoader"}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics.analyzer", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/NoSuchMethodFailureAnalyzer.java", "jump": 0, "method": "getTypeHierarchy(java.lang.Class<?>)", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer"}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics.analyzer", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/NoSuchMethodFailureAnalyzer.java", "jump": 0, "method": "getNoSuchMethodDescriptor(java.lang.String)", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer"}, {"inject": "true", "pkg": "org.springframework.boot.context.properties.source", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java", "jump": 0, "method": "Elements(java.lang.CharSequence,int,int[],int[],org.springframework.boot.context.properties.source.ConfigurationPropertyName.ElementType[],java.lang.CharSequence[])", "param": "resolved", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyName.Elements"}, {"inject": "true", "pkg": "org.springframework.boot", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java", "jump": 0, "method": "", "param": "listeners", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "class": "org.springframework.boot.SpringApplication"}, {"inject": "true", "pkg": "org.springframework.boot.context.properties.source", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationProperty.java", "jump": 0, "method": "of(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.origin.OriginTrackedValue)", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.context.properties.source.ConfigurationProperty"}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/AbstractFailureAnalyzer.java", "jump": 0, "method": "analyze(java.lang.Throwable)", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.diagnostics.AbstractFailureAnalyzer"}, {"inject": "true", "pkg": "org.springframework.boot.context.properties.source", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java", "jump": 0, "method": "compare(java.lang.String,org.springframework.boot.context.properties.source.ConfigurationPropertyName.ElementType,java.lang.String,org.springframework.boot.context.properties.source.ConfigurationPropertyName.ElementType)", "param": "e1", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyName"}, {"inject": "true", "pkg": "org.springframework.boot", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java", "jump": 0, "method": "", "param": "beanNameGenerator", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "class": "org.springframework.boot.SpringApplication"}, {"inject": "true", "pkg": "org.springframework.boot", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java", "jump": 0, "method": "", "param": "defaultProperties", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "class": "org.springframework.boot.SpringApplication"}, {"inject": "true", "pkg": "org.springframework.boot.context.properties.source", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java", "jump": 0, "method": "", "param": "string", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyName"}, {"inject": "true", "pkg": "org.springframework.boot.web.server", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/PortInUseException.java", "jump": 0, "method": "PortInUseException(int,java.lang.Throwable)", "param": "cause", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "class": "org.springframework.boot.web.server.PortInUseException"}, {"inject": "true", "pkg": "org.springframework.boot.context.properties.source", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java", "jump": 0, "method": "parse(java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)", "param": "valueProcessor", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyName.ElementsParser"}, {"inject": "true", "pkg": "org.springframework.boot", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/LazyInitializationBeanFactoryPostProcessor.java", "jump": 0, "method": "getBeanType(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.lang.String)", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.LazyInitializationBeanFactoryPostProcessor"}, {"inject": "true", "pkg": "org.springframework.boot.origin", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/origin/OriginTrackedValue.java", "jump": 0, "method": "toString()", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.origin.OriginTrackedValue"}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics.analyzer", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/AbstractInjectionFailureAnalyzer.java", "jump": 0, "method": "getDescription(java.lang.Throwable)", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.diagnostics.analyzer.AbstractInjectionFailureAnalyzer"}, {"inject": "true", "pkg": "org.springframework.boot.origin", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/origin/JarUri.java", "jump": 0, "method": "from(java.lang.String)", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.origin.JarUri"}, {"inject": "true", "pkg": "org.springframework.boot.builder", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/builder/SpringApplicationBuilder.java", "jump": 0, "method": "", "param": "environment", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "class": "org.springframework.boot.builder.SpringApplicationBuilder"}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics.analyzer", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/NoSuchMethodFailureAnalyzer.java", "jump": 0, "method": "load(java.lang.String)", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer"}, {"inject": "true", "pkg": "org.springframework.boot", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplicationRunListeners.java", "jump": 0, "method": "doWithListeners(java.lang.String,java.util.function.Consumer<org.springframework.boot.SpringApplicationRunListener>,java.util.function.Consumer<org.springframework.core.metrics.StartupStep>)", "param": "stepAction", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "class": "org.springframework.boot.SpringApplicationRunListeners"}, {"inject": "true", "pkg": "org.springframework.boot", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java", "jump": 0, "method": "", "param": "environment", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "class": "org.springframework.boot.SpringApplication"}, {"inject": "true", "pkg": "org.springframework.boot.origin", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/origin/OriginLookup.java", "jump": 0, "method": "<K>getOrigin(java.lang.Object,K)", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.origin.OriginLookup"}, {"inject": "true", "pkg": "org.springframework.boot", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/DefaultBootstrapContext.java", "jump": 0, "method": "<T>getRegisteredInstanceSupplier(java.lang.Class<T>)", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.DefaultBootstrapContext"}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics.analyzer", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/BindFailureAnalyzer.java", "jump": 0, "method": "analyze(java.lang.Throwable,org.springframework.boot.context.properties.bind.BindException)", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer"}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics.analyzer", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/NoSuchMethodFailureAnalyzer.java", "jump": 0, "method": "getNoSuchMethodDescriptor(java.lang.String)", "param": "cause", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "class": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer"}, {"inject": "true", "pkg": "org.springframework.boot.context.properties.source", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java", "jump": 0, "method": "", "param": "resolved", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyName.ElementsParser"}, {"inject": "true", "pkg": "org.springframework.boot", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java", "jump": 0, "method": "SpringApplication(org.springframework.core.io.ResourceLoader,java.lang.Class<?>...)", "param": "resourceLoader", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "class": "org.springframework.boot.SpringApplication"}, {"inject": "true", "pkg": "org.springframework.boot.context.properties.source", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationProperty.java", "jump": 0, "method": "of(org.springframework.boot.context.properties.source.ConfigurationPropertyName,java.lang.Object,org.springframework.boot.origin.Origin)", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.context.properties.source.ConfigurationProperty"}, {"inject": "true", "pkg": "org.springframework.boot.builder", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/builder/SpringApplicationBuilder.java", "jump": 0, "method": "", "param": "context", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "class": "org.springframework.boot.builder.SpringApplicationBuilder"}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/AbstractFailureAnalyzer.java", "jump": 0, "method": "analyze(java.lang.Throwable,T)", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.diagnostics.AbstractFailureAnalyzer"}, {"inject": "true", "pkg": "org.springframework.boot.context.properties.source", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java", "jump": 0, "method": "expand(java.lang.CharSequence[])", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyName.ElementsParser"}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics.analyzer", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/InvalidConfigurationPropertyValueFailureAnalyzer.java", "jump": 0, "method": "", "param": "environment", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "class": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer"}, {"inject": "true", "pkg": "org.springframework.boot.diagnostics.analyzer", "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/NoSuchMethodFailureAnalyzer.java", "jump": 0, "method": "analyze(java.lang.Throwable,java.lang.NoSuchMethodError)", "param": "", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "class": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer"}]}