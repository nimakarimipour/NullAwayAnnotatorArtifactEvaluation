{"reports": [{"param": "", "method": "<T>defaultValue(java.lang.Class<T>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/Primitives.java", "jump": 8, "pkg": "org.mockito.internal.util", "class": "org.mockito.internal.util.Primitives", "reason": "RETURN_NULLABLE"}, {"param": "delegatedObject", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'delegatedObject' where @NonNull is required", "(Covered) passing @Nullable parameter 'delegatedObject' where @NonNull is required", "(Covered) passing @Nullable parameter 'delegatedObject' where @NonNull is required", "dereferenced expression delegatedObject is @Nullable"], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/defaultanswers/ForwardsInvocations.java", "jump": 3, "pkg": "org.mockito.internal.stubbing.defaultanswers", "class": "org.mockito.internal.stubbing.defaultanswers.ForwardsInvocations", "reason": "ASSIGN_FIELD_NULLABLE"}, {"param": "", "method": "returnValueFor(java.lang.Class<?>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java", "jump": 2, "pkg": "org.mockito.internal.stubbing.defaultanswers", "class": "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues", "reason": "RETURN_NULLABLE"}, {"param": "mockName", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields typeToMock (line 30), name (line 32), spiedInstance (line 33), defaultAnswer (line 34), outerClassInstance (line 53), constructorArgs (line 54) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/settings/CreationSettings.java", "jump": 2, "pkg": "org.mockito.internal.creation.settings", "class": "org.mockito.internal.creation.settings.CreationSettings", "reason": "FIELD_NO_INIT"}, {"param": "typeToMock", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields name (line 33), spiedInstance (line 34), defaultAnswer (line 35), mockName (line 36), outerClassInstance (line 52), constructorArgs (line 53) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/settings/CreationSettings.java", "jump": 2, "pkg": "org.mockito.internal.creation.settings", "class": "org.mockito.internal.creation.settings.CreationSettings", "reason": "FIELD_NO_INIT"}, {"param": "spiedInstance", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields typeToMock (line 30), name (line 32), defaultAnswer (line 36), mockName (line 37), outerClassInstance (line 53), constructorArgs (line 54) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/settings/CreationSettings.java", "jump": 2, "pkg": "org.mockito.internal.creation.settings", "class": "org.mockito.internal.creation.settings.CreationSettings", "reason": "FIELD_NO_INIT"}, {"param": "defaultAnswer", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields typeToMock (line 30), name (line 32), spiedInstance (line 33), mockName (line 37), outerClassInstance (line 53), constructorArgs (line 54) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/settings/CreationSettings.java", "jump": 2, "pkg": "org.mockito.internal.creation.settings", "class": "org.mockito.internal.creation.settings.CreationSettings", "reason": "FIELD_NO_INIT"}, {"param": "", "method": "fieldClass()", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'fieldClass' where @NonNull is required", "dereferenced expression fieldClass is @Nullable"], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/reflection/FieldInitializationReport.java", "jump": 1, "pkg": "org.mockito.internal.util.reflection", "class": "org.mockito.internal.util.reflection.FieldInitializationReport", "reason": "RETURN_NULLABLE"}, {"param": "readReplace", "method": "SubclassBytecodeGenerator(org.mockito.internal.creation.bytebuddy.SubclassLoader,net.bytebuddy.implementation.Implementation,net.bytebuddy.matcher.ElementMatcher<? super net.bytebuddy.description.method.MethodDescription>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field readReplace (line 54) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/bytebuddy/SubclassBytecodeGenerator.java", "jump": 1, "pkg": "org.mockito.internal.creation.bytebuddy", "class": "org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator", "reason": "PASS_NULLABLE"}, {"param": "", "method": "<T>notNull()", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/ArgumentMatchers.java", "jump": 1, "pkg": "org.mockito", "class": "org.mockito.ArgumentMatchers", "reason": "RETURN_NULLABLE"}, {"param": "outerClassInstance", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields typeToMock (line 30), name (line 32), spiedInstance (line 33), defaultAnswer (line 34), mockName (line 35), constructorArgs (line 54) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/settings/CreationSettings.java", "jump": 1, "pkg": "org.mockito.internal.creation.settings", "class": "org.mockito.internal.creation.settings.CreationSettings", "reason": "FIELD_NO_INIT"}, {"param": "", "method": "returnValueFor(java.lang.Class<?>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValues.java", "jump": 1, "pkg": "org.mockito.internal.stubbing.defaultanswers", "class": "org.mockito.internal.stubbing.defaultanswers.ReturnsMoreEmptyValues", "reason": "RETURN_NULLABLE"}, {"param": "constructorArgs", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields typeToMock (line 30), name (line 32), spiedInstance (line 33), defaultAnswer (line 34), mockName (line 35), outerClassInstance (line 51) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/settings/CreationSettings.java", "jump": 1, "pkg": "org.mockito.internal.creation.settings", "class": "org.mockito.internal.creation.settings.CreationSettings", "reason": "FIELD_NO_INIT"}, {"param": "wanted", "method": "VerificationDataInOrderImpl(org.mockito.internal.verification.api.InOrderContext,java.util.List<org.mockito.invocation.Invocation>,org.mockito.invocation.MatchableInvocation)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field wanted (line 18) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/verification/api/VerificationDataInOrderImpl.java", "jump": 1, "pkg": "org.mockito.internal.verification.api", "class": "org.mockito.internal.verification.api.VerificationDataInOrderImpl", "reason": "PASS_NULLABLE"}, {"param": "", "method": "returnTypeForMockWithCorrectGenerics(org.mockito.invocation.InvocationOnMock,org.mockito.internal.stubbing.defaultanswers.RetrieveGenericsForDefaultAnswers.AnswerCallback)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/defaultanswers/RetrieveGenericsForDefaultAnswers.java", "jump": 1, "pkg": "org.mockito.internal.stubbing.defaultanswers", "class": "org.mockito.internal.stubbing.defaultanswers.RetrieveGenericsForDefaultAnswers", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "<T>primitiveTypeOf(java.lang.Class<T>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'Primitives.primitiveTypeOf(referenceType)' where @NonNull is required", "dereferenced expression Primitives.primitiveTypeOf(valueClass) is @Nullable"], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/Primitives.java", "jump": 1, "pkg": "org.mockito.internal.util", "class": "org.mockito.internal.util.Primitives", "reason": "RETURN_NULLABLE"}, {"param": "name", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields typeToMock (line 30), spiedInstance (line 35), defaultAnswer (line 36), mockName (line 37), outerClassInstance (line 53), constructorArgs (line 54) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/settings/CreationSettings.java", "jump": 1, "pkg": "org.mockito.internal.creation.settings", "class": "org.mockito.internal.creation.settings.CreationSettings", "reason": "FIELD_NO_INIT"}, {"param": "", "method": "<T>isNull()", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'isNull()' where @NonNull is required"], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/ArgumentMatchers.java", "jump": 1, "pkg": "org.mockito", "class": "org.mockito.ArgumentMatchers", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "initialValue(java.lang.Thread)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/concurrent/DetachedThreadLocal.java", "jump": 1, "pkg": "org.mockito.internal.util.concurrent", "class": "org.mockito.internal.util.concurrent.DetachedThreadLocal", "reason": "RETURN_NULLABLE"}, {"param": "constructorArgs", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression constructorArgs is @Nullable"], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/MockSettingsImpl.java", "jump": 1, "pkg": "org.mockito.internal.creation", "class": "org.mockito.internal.creation.MockSettingsImpl", "reason": "FIELD_NO_INIT"}, {"param": "type", "method": "apply(java.lang.Class<?>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) parameter type is @NonNull, but parameter in superclass method org.mockito.internal.stubbing.defaultanswers.RetrieveGenericsForDefaultAnswers.AnswerCallback.apply(java.lang.Class<?>) is @Nullable", "(Covered) parameter type is @NonNull, but parameter in superclass method org.mockito.internal.stubbing.defaultanswers.RetrieveGenericsForDefaultAnswers.AnswerCallback.apply(java.lang.Class<?>) is @Nullable"], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/defaultanswers/RetrieveGenericsForDefaultAnswers.java", "jump": 1, "pkg": "org.mockito.internal.stubbing.defaultanswers", "class": "org.mockito.internal.stubbing.defaultanswers.RetrieveGenericsForDefaultAnswers.AnswerCallback", "reason": "PASS_NULLABLE"}, {"param": "cause", "method": "VerificationEventImpl(java.lang.Object,org.mockito.verification.VerificationMode,org.mockito.internal.verification.api.VerificationData,java.lang.Throwable)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field cause (line 17) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/verification/VerificationEventImpl.java", "jump": 1, "pkg": "org.mockito.internal.verification", "class": "org.mockito.internal.verification.VerificationEventImpl", "reason": "PASS_NULLABLE"}, {"param": "", "method": "findAnswerFor(org.mockito.invocation.Invocation)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field mockStrictness (line 40) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression findAnswerFor(invocation) is @Nullable", "(Covered) passing @Nullable parameter 'stubbing' where @NonNull is required"], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/InvocationContainerImpl.java", "jump": 1, "pkg": "org.mockito.internal.stubbing", "class": "org.mockito.internal.stubbing.InvocationContainerImpl", "reason": "RETURN_NULLABLE"}, {"param": "value", "method": "Returns(java.lang.Object)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field value (line 21) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/answers/Returns.java", "jump": 1, "pkg": "org.mockito.internal.stubbing.answers", "class": "org.mockito.internal.stubbing.answers.Returns", "reason": "PASS_NULLABLE"}, {"param": "alias", "method": "PluginInitializer(org.mockito.plugins.PluginSwitch,java.lang.String,org.mockito.internal.configuration.plugins.DefaultMockitoPlugins)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field alias (line 19) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/configuration/plugins/PluginInitializer.java", "jump": 1, "pkg": "org.mockito.internal.configuration.plugins", "class": "org.mockito.internal.configuration.plugins.PluginInitializer", "reason": "PASS_NULLABLE"}, {"param": "throwable", "method": "ThrowsException(java.lang.Throwable)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field throwable (line 17) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/answers/ThrowsException.java", "jump": 1, "pkg": "org.mockito.internal.stubbing.answers", "class": "org.mockito.internal.stubbing.answers.ThrowsException", "reason": "PASS_NULLABLE"}, {"param": "excludeFields", "method": "reflectionEquals(java.lang.Object,java.lang.Object,boolean,java.lang.Class<?>,java.lang.String[])", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'excludeFields' where @NonNull is required", "(Covered) passing @Nullable parameter 'excludeFields' where @NonNull is required"], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java", "jump": 1, "pkg": "org.mockito.internal.matchers.apachecommons", "class": "org.mockito.internal.matchers.apachecommons.EqualsBuilder", "reason": "PASS_NULLABLE"}, {"param": "", "method": "getHandler(java.lang.Object)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) method returns @Nullable, but superclass method org.mockito.plugins.MockMaker.getHandler(java.lang.Object) returns @NonNull"], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/bytebuddy/InlineByteBuddyMockMaker.java", "jump": 0, "pkg": "org.mockito.internal.creation.bytebuddy", "class": "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker", "reason": "RETURN_NULLABLE"}, {"param": "extraInterfaces", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field rawType (line 409) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/reflection/GenericMetadataSupport.java", "jump": 0, "pkg": "org.mockito.internal.util.reflection", "class": "org.mockito.internal.util.reflection.GenericMetadataSupport.TypeVariableReturnType", "reason": "FIELD_NO_INIT"}, {"param": "closeable", "method": "closeQuietly(java.io.Closeable)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'closeable' where @NonNull is required"], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/io/IOUtil.java", "jump": 0, "pkg": "org.mockito.internal.util.io", "class": "org.mockito.internal.util.io.IOUtil", "reason": "PASS_NULLABLE"}, {"param": "", "method": "answer(org.mockito.invocation.InvocationOnMock)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) method returns @Nullable, but superclass method org.mockito.stubbing.Answer.answer(org.mockito.invocation.InvocationOnMock) returns @NonNull"], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java", "jump": 0, "pkg": "org.mockito.internal.stubbing.defaultanswers", "class": "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "answer(org.mockito.invocation.InvocationOnMock)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) method returns @Nullable, but superclass method org.mockito.stubbing.Answer.answer(org.mockito.invocation.InvocationOnMock) returns @NonNull"], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/answers/DoesNothing.java", "jump": 0, "pkg": "org.mockito.internal.stubbing.answers", "class": "org.mockito.internal.stubbing.answers.DoesNothing", "reason": "RETURN_NULLABLE"}, {"param": "stubInfo", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/invocation/InterceptedInvocation.java", "jump": 0, "pkg": "org.mockito.internal.invocation", "class": "org.mockito.internal.invocation.InterceptedInvocation", "reason": "FIELD_NO_INIT"}, {"param": "stubbingStrictness", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/DoAnswerStyleStubbing.java", "jump": 0, "pkg": "org.mockito.internal.stubbing", "class": "org.mockito.internal.stubbing.DoAnswerStyleStubbing", "reason": "ASSIGN_FIELD_NULLABLE"}, {"param": "", "method": "thenThrow(java.lang.Throwable...)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) method returns @Nullable, but superclass method org.mockito.stubbing.OngoingStubbing.thenThrow(java.lang.Throwable...) returns @NonNull"], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/BaseStubbing.java", "jump": 0, "pkg": "org.mockito.internal.stubbing", "class": "org.mockito.internal.stubbing.BaseStubbing", "reason": "RETURN_NULLABLE"}, {"param": "message", "method": "InstantiationException(java.lang.String,java.lang.Throwable)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'message' where @NonNull is required"], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/creation/instance/InstantiationException.java", "jump": 0, "pkg": "org.mockito.creation.instance", "class": "org.mockito.creation.instance.InstantiationException", "reason": "PASS_NULLABLE"}, {"param": "", "method": "pullVerificationMode()", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields ongoingStubbing (line 36), verificationMode (line 37) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) method returns @Nullable, but superclass method org.mockito.internal.progress.MockingProgress.pullVerificationMode() returns @NonNull"], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/progress/MockingProgressImpl.java", "jump": 0, "pkg": "org.mockito.internal.progress", "class": "org.mockito.internal.progress.MockingProgressImpl", "reason": "RETURN_NULLABLE"}, {"param": "failure", "method": "finishMocking(java.lang.Throwable)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/framework/DefaultMockitoSession.java", "jump": 0, "pkg": "org.mockito.internal.framework", "class": "org.mockito.internal.framework.DefaultMockitoSession", "reason": "PASS_NULLABLE"}, {"param": "instance", "method": "tryInvoke(java.lang.reflect.Method,java.lang.Object,java.lang.Object[])", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'instance' where @NonNull is required"], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/bytebuddy/MockMethodAdvice.java", "jump": 0, "pkg": "org.mockito.internal.creation.bytebuddy", "class": "org.mockito.internal.creation.bytebuddy.MockMethodAdvice", "reason": "PASS_NULLABLE"}, {"param": "strictness", "method": "stubber(org.mockito.quality.Strictness)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'strictness' where @NonNull is required"], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/MockitoCore.java", "jump": 0, "pkg": "org.mockito.internal", "class": "org.mockito.internal.MockitoCore", "reason": "PASS_NULLABLE"}, {"param": "throwable", "method": "thenThrow(java.lang.Throwable)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'throwable' where @NonNull is required"], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/BaseStubbing.java", "jump": 0, "pkg": "org.mockito.internal.stubbing", "class": "org.mockito.internal.stubbing.BaseStubbing", "reason": "PASS_NULLABLE"}, {"param": "", "method": "defaultValue(K)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field thread (line 26) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields nextEntry (line 292), nextKey (line 294) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/concurrent/WeakConcurrentMap.java", "jump": 0, "pkg": "org.mockito.internal.util.concurrent", "class": "org.mockito.internal.util.concurrent.WeakConcurrentMap", "reason": "RETURN_NULLABLE"}, {"param": "type", "method": "extractActualBoundedTypeOf(java.lang.reflect.Type)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields rawType (line 409), extraInterfaces (line 410) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/reflection/GenericMetadataSupport.java", "jump": 0, "pkg": "org.mockito.internal.util.reflection", "class": "org.mockito.internal.util.reflection.GenericMetadataSupport.TypeVariableReturnType", "reason": "PASS_NULLABLE"}, {"param": "", "method": "findFirstUnverified(java.util.List<org.mockito.invocation.Invocation>,java.lang.Object)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/invocation/InvocationsFinder.java", "jump": 0, "pkg": "org.mockito.internal.invocation", "class": "org.mockito.internal.invocation.InvocationsFinder", "reason": "RETURN_NULLABLE"}, {"param": "rawType", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field extraInterfaces (line 412) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/reflection/GenericMetadataSupport.java", "jump": 0, "pkg": "org.mockito.internal.util.reflection", "class": "org.mockito.internal.util.reflection.GenericMetadataSupport.TypeVariableReturnType", "reason": "FIELD_NO_INIT"}, {"param": "value", "method": "thenReturn(T)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) parameter value is @NonNull, but parameter in superclass method org.mockito.stubbing.OngoingStubbing.thenReturn(T) is @Nullable"], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/stubbing/OngoingStubbing.java", "jump": 0, "pkg": "org.mockito.stubbing", "class": "org.mockito.stubbing.OngoingStubbing", "reason": "PASS_NULLABLE"}, {"param": "", "method": "<T>anyObject()", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/ArgumentMatchers.java", "jump": 0, "pkg": "org.mockito", "class": "org.mockito.ArgumentMatchers", "reason": "RETURN_NULLABLE"}, {"param": "nextEntry", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field thread (line 26) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field nextKey (line 294) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'nextEntry' where @NonNull is required"], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/concurrent/WeakConcurrentMap.java", "jump": 0, "pkg": "org.mockito.internal.util.concurrent", "class": "org.mockito.internal.util.concurrent.WeakConcurrentMap.EntryIterator", "reason": "FIELD_NO_INIT"}, {"param": "", "method": "handleStatic(java.lang.Class<?>,java.lang.reflect.Method,java.lang.Object[])", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) method returns @Nullable, but superclass method org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher.handleStatic(java.lang.Class<?>,java.lang.reflect.Method,java.lang.Object[]) returns @NonNull"], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/bytebuddy/MockMethodAdvice.java", "jump": 0, "pkg": "org.mockito.internal.creation.bytebuddy", "class": "org.mockito.internal.creation.bytebuddy.MockMethodAdvice", "reason": "RETURN_NULLABLE"}, {"param": "message", "method": "InstantiationException(java.lang.String,java.lang.Throwable)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'message' where @NonNull is required"], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/instance/InstantiationException.java", "jump": 0, "pkg": "org.mockito.internal.creation.instance", "class": "org.mockito.internal.creation.instance.InstantiationException", "reason": "PASS_NULLABLE"}, {"param": "", "method": "<T>doCreateMock(org.mockito.mock.MockCreationSettings<T>,org.mockito.invocation.MockHandler,boolean)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/bytebuddy/InlineByteBuddyMockMaker.java", "jump": 0, "pkg": "org.mockito.internal.creation.bytebuddy", "class": "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "handle(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) method returns @Nullable, but superclass method org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher.handle(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) returns @NonNull"], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/bytebuddy/MockMethodAdvice.java", "jump": 0, "pkg": "org.mockito.internal.creation.bytebuddy", "class": "org.mockito.internal.creation.bytebuddy.MockMethodAdvice", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "getHandler(java.lang.Object)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) method returns @Nullable, but superclass method org.mockito.plugins.MockMaker.getHandler(java.lang.Object) returns @NonNull"], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/bytebuddy/SubclassByteBuddyMockMaker.java", "jump": 0, "pkg": "org.mockito.internal.creation.bytebuddy", "class": "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "getActualTypeArgumentFor(java.lang.reflect.TypeVariable<?>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields rawType (line 410), extraInterfaces (line 411) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'getActualTypeArgumentFor(typeVariable)' where @NonNull is required"], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/reflection/GenericMetadataSupport.java", "jump": 0, "pkg": "org.mockito.internal.util.reflection", "class": "org.mockito.internal.util.reflection.GenericMetadataSupport", "reason": "RETURN_NULLABLE"}, {"param": "message", "method": "append(java.lang.String)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression message is @Nullable"], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/junit/VerificationCollectorImpl.java", "jump": 0, "pkg": "org.mockito.internal.junit", "class": "org.mockito.internal.junit.VerificationCollectorImpl", "reason": "PASS_NULLABLE"}, {"param": "", "method": "getLocationOfStubbing()", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field throwable (line 18) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field returnedValue (line 17) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) method returns @Nullable, but superclass method org.mockito.listeners.MethodInvocationReport.getLocationOfStubbing() returns @NonNull"], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/handler/NotifiedMethodInvocationReport.java", "jump": 0, "pkg": "org.mockito.internal.handler", "class": "org.mockito.internal.handler.NotifiedMethodInvocationReport", "reason": "RETURN_NULLABLE"}, {"param": "outerClassInstance", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/MockSettingsImpl.java", "jump": 0, "pkg": "org.mockito.internal.creation", "class": "org.mockito.internal.creation.MockSettingsImpl", "reason": "FIELD_NO_INIT"}, {"param": "settings", "method": "getInstantiator(org.mockito.mock.MockCreationSettings<?>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) parameter settings is @NonNull, but parameter in superclass method org.mockito.plugins.InstantiatorProvider2.getInstantiator(org.mockito.mock.MockCreationSettings<?>) is @Nullable", "(Covered) parameter settings is @NonNull, but parameter in superclass method org.mockito.plugins.InstantiatorProvider2.getInstantiator(org.mockito.mock.MockCreationSettings<?>) is @Nullable"], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/plugins/InstantiatorProvider2.java", "jump": 0, "pkg": "org.mockito.plugins", "class": "org.mockito.plugins.InstantiatorProvider2", "reason": "PASS_NULLABLE"}, {"param": "emptyPeriod", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/JavaEightUtil.java", "jump": -1, "pkg": "org.mockito.internal.util", "class": "org.mockito.internal.util.JavaEightUtil", "reason": "FIELD_NO_INIT"}, {"param": "", "method": "aryEq(float[])", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/AdditionalMatchers.java", "jump": -1, "pkg": "org.mockito", "class": "org.mockito.AdditionalMatchers", "reason": "RETURN_NULLABLE"}, {"param": "testClass", "method": "formatUnncessaryStubbingException(java.lang.Class<?>,java.util.Collection<org.mockito.invocation.Invocation>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/exceptions/Reporter.java", "jump": -1, "pkg": "org.mockito.internal.exceptions", "class": "org.mockito.internal.exceptions.Reporter", "reason": "PASS_NULLABLE"}, {"param": "", "method": "aryEq(boolean[])", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/AdditionalMatchers.java", "jump": -1, "pkg": "org.mockito", "class": "org.mockito.AdditionalMatchers", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "aryEq(double[])", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/AdditionalMatchers.java", "jump": -1, "pkg": "org.mockito", "class": "org.mockito.AdditionalMatchers", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "<T>same(T)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/ArgumentMatchers.java", "jump": -1, "pkg": "org.mockito", "class": "org.mockito.ArgumentMatchers", "reason": "RETURN_NULLABLE"}, {"param": "GET_STACK_TRACE_ELEMENT", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/exceptions/stacktrace/StackTraceFilter.java", "jump": -1, "pkg": "org.mockito.internal.exceptions.stacktrace", "class": "org.mockito.internal.exceptions.stacktrace.StackTraceFilter", "reason": "FIELD_NO_INIT"}, {"param": "", "method": "<T>refEq(T,java.lang.String...)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/ArgumentMatchers.java", "jump": -1, "pkg": "org.mockito", "class": "org.mockito.ArgumentMatchers", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "<T>leq(T)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/AdditionalMatchers.java", "jump": -1, "pkg": "org.mockito", "class": "org.mockito.AdditionalMatchers", "reason": "RETURN_NULLABLE"}, {"param": "additionalMessage", "method": "<T>checkNotNull(T,java.lang.String,java.lang.String)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/Checks.java", "jump": -1, "pkg": "org.mockito.internal.util", "class": "org.mockito.internal.util.Checks", "reason": "PASS_NULLABLE"}, {"param": "", "method": "<T>loadImpl(java.lang.Class<T>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/configuration/plugins/PluginInitializer.java", "jump": -1, "pkg": "org.mockito.internal.configuration.plugins", "class": "org.mockito.internal.configuration.plugins.PluginInitializer", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "<T>gt(T)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/AdditionalMatchers.java", "jump": -1, "pkg": "org.mockito", "class": "org.mockito.AdditionalMatchers", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "findSimilarInvocation(java.util.List<org.mockito.invocation.Invocation>,org.mockito.invocation.MatchableInvocation)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/invocation/InvocationsFinder.java", "jump": -1, "pkg": "org.mockito.internal.invocation", "class": "org.mockito.internal.invocation.InvocationsFinder", "reason": "RETURN_NULLABLE"}, {"param": "lastException", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields getModule (line 78), canRead (line 78), redefineModule (line 78) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/bytebuddy/InlineBytecodeGenerator.java", "jump": -1, "pkg": "org.mockito.internal.creation.bytebuddy", "class": "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator", "reason": "FIELD_NO_INIT"}, {"param": "", "method": "apply(java.lang.Class<?>,java.lang.Object,java.lang.Object[],java.lang.String[])", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/bytebuddy/ConstructionCallback.java", "jump": -1, "pkg": "org.mockito.internal.creation.bytebuddy", "class": "org.mockito.internal.creation.bytebuddy.ConstructionCallback", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "<T>argThat(org.mockito.ArgumentMatcher<T>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/ArgumentMatchers.java", "jump": -1, "pkg": "org.mockito", "class": "org.mockito.ArgumentMatchers", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "<T>and(T,T)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/AdditionalMatchers.java", "jump": -1, "pkg": "org.mockito", "class": "org.mockito.AdditionalMatchers", "reason": "RETURN_NULLABLE"}, {"param": "type", "method": "extractRawTypeOf(java.lang.reflect.Type)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields rawType (line 409), extraInterfaces (line 410) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/reflection/GenericMetadataSupport.java", "jump": -1, "pkg": "org.mockito.internal.util.reflection", "class": "org.mockito.internal.util.reflection.GenericMetadataSupport", "reason": "PASS_NULLABLE"}, {"param": "cause", "method": "InstantiationException(java.lang.String,java.lang.Throwable)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'cause' where @NonNull is required"], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/creation/instance/InstantiationException.java", "jump": -1, "pkg": "org.mockito.creation.instance", "class": "org.mockito.creation.instance.InstantiationException", "reason": "PASS_NULLABLE"}, {"param": "", "method": "handle(org.mockito.invocation.Invocation)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) method returns @Nullable, but superclass method org.mockito.invocation.MockHandler.handle(org.mockito.invocation.Invocation) returns @NonNull"], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/handler/MockHandlerImpl.java", "jump": -1, "pkg": "org.mockito.internal.handler", "class": "org.mockito.internal.handler.MockHandlerImpl", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "findGenericInterface(java.lang.Class<?>,java.lang.Class<?>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/reflection/GenericTypeExtractor.java", "jump": -1, "pkg": "org.mockito.internal.util.reflection", "class": "org.mockito.internal.util.reflection.GenericTypeExtractor", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "aryEq(byte[])", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/AdditionalMatchers.java", "jump": -1, "pkg": "org.mockito", "class": "org.mockito.AdditionalMatchers", "reason": "RETURN_NULLABLE"}, {"param": "mock", "method": "findFirstUnverified(java.util.List<org.mockito.invocation.Invocation>,java.lang.Object)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/invocation/InvocationsFinder.java", "jump": -1, "pkg": "org.mockito.internal.invocation", "class": "org.mockito.internal.invocation.InvocationsFinder", "reason": "PASS_NULLABLE"}, {"param": "", "method": "makeStandardArgument(java.lang.Class<?>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/bytebuddy/InlineByteBuddyMockMaker.java", "jump": -1, "pkg": "org.mockito.internal.creation.bytebuddy", "class": "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "aryEq(char[])", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/AdditionalMatchers.java", "jump": -1, "pkg": "org.mockito", "class": "org.mockito.AdditionalMatchers", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "<T>cmpEq(T)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/AdditionalMatchers.java", "jump": -1, "pkg": "org.mockito", "class": "org.mockito.AdditionalMatchers", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "<T>geq(T)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/AdditionalMatchers.java", "jump": -1, "pkg": "org.mockito", "class": "org.mockito.AdditionalMatchers", "reason": "RETURN_NULLABLE"}, {"param": "ongoingStubbing", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field verificationMode (line 38) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/progress/MockingProgressImpl.java", "jump": -1, "pkg": "org.mockito.internal.progress", "class": "org.mockito.internal.progress.MockingProgressImpl", "reason": "FIELD_NO_INIT"}, {"param": "", "method": "aryEq(int[])", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/AdditionalMatchers.java", "jump": -1, "pkg": "org.mockito", "class": "org.mockito.AdditionalMatchers", "reason": "RETURN_NULLABLE"}, {"param": "logger", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/session/DefaultMockitoSessionBuilder.java", "jump": -1, "pkg": "org.mockito.internal.session", "class": "org.mockito.internal.session.DefaultMockitoSessionBuilder", "reason": "FIELD_NO_INIT"}, {"param": "", "method": "<T>eq(T)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/ArgumentMatchers.java", "jump": -1, "pkg": "org.mockito", "class": "org.mockito.ArgumentMatchers", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "findPreviousVerifiedInOrder(java.util.List<org.mockito.invocation.Invocation>,org.mockito.internal.verification.api.InOrderContext)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/invocation/InvocationsFinder.java", "jump": -1, "pkg": "org.mockito.internal.invocation", "class": "org.mockito.internal.invocation.InvocationsFinder", "reason": "RETURN_NULLABLE"}, {"param": "emptyDuration", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/JavaEightUtil.java", "jump": -1, "pkg": "org.mockito.internal.util", "class": "org.mockito.internal.util.JavaEightUtil", "reason": "FIELD_NO_INIT"}, {"param": "", "method": "enter(java.lang.String,java.lang.Class<?>,java.lang.reflect.Method,java.lang.Object[])", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/bytebuddy/MockMethodAdvice.java", "jump": -1, "pkg": "org.mockito.internal.creation.bytebuddy", "class": "org.mockito.internal.creation.bytebuddy.MockMethodAdvice.ForStatic", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "enter(java.lang.String,java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/bytebuddy/MockMethodAdvice.java", "jump": -1, "pkg": "org.mockito.internal.creation.bytebuddy", "class": "org.mockito.internal.creation.bytebuddy.MockMethodAdvice", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "<T>anyVararg()", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/ArgumentMatchers.java", "jump": -1, "pkg": "org.mockito", "class": "org.mockito.ArgumentMatchers", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "readPluginClass(java.io.InputStream)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/configuration/plugins/PluginFileReader.java", "jump": -1, "pkg": "org.mockito.internal.configuration.plugins", "class": "org.mockito.internal.configuration.plugins.PluginFileReader", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "getField(java.lang.Class<?>,java.lang.String)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/junit/util/JUnitFailureHacker.java", "jump": -1, "pkg": "org.mockito.internal.junit.util", "class": "org.mockito.internal.junit.util.JUnitFailureHacker", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "objectThatIsAssignableFrom(java.lang.Class<?>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/configuration/injection/ConstructorInjection.java", "jump": -1, "pkg": "org.mockito.internal.configuration.injection", "class": "org.mockito.internal.configuration.injection.ConstructorInjection.SimpleArgumentResolver", "reason": "RETURN_NULLABLE"}, {"param": "closeable", "method": "close(java.io.Closeable)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/io/IOUtil.java", "jump": -1, "pkg": "org.mockito.internal.util.io", "class": "org.mockito.internal.util.io.IOUtil", "reason": "PASS_NULLABLE"}, {"param": "name", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/session/DefaultMockitoSessionBuilder.java", "jump": -1, "pkg": "org.mockito.internal.session", "class": "org.mockito.internal.session.DefaultMockitoSessionBuilder", "reason": "FIELD_NO_INIT"}, {"param": "", "method": "find(java.lang.String)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/AdditionalMatchers.java", "jump": -1, "pkg": "org.mockito", "class": "org.mockito.AdditionalMatchers", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "<T>not(T)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/AdditionalMatchers.java", "jump": -1, "pkg": "org.mockito", "class": "org.mockito.AdditionalMatchers", "reason": "RETURN_NULLABLE"}, {"param": "emptyOptional", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/JavaEightUtil.java", "jump": -1, "pkg": "org.mockito.internal.util", "class": "org.mockito.internal.util.JavaEightUtil", "reason": "FIELD_NO_INIT"}, {"param": "", "method": "getInlineMockMaker()", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/framework/DefaultMockitoFramework.java", "jump": -1, "pkg": "org.mockito.internal.framework", "class": "org.mockito.internal.framework.DefaultMockitoFramework", "reason": "RETURN_NULLABLE"}, {"param": "JAVA_LANG_ACCESS", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/exceptions/stacktrace/StackTraceFilter.java", "jump": -1, "pkg": "org.mockito.internal.exceptions.stacktrace", "class": "org.mockito.internal.exceptions.stacktrace.StackTraceFilter", "reason": "FIELD_NO_INIT"}, {"param": "", "method": "findPluginClass(java.lang.Iterable<java.net.URL>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/configuration/plugins/PluginFinder.java", "jump": -1, "pkg": "org.mockito.internal.configuration.plugins", "class": "org.mockito.internal.configuration.plugins.PluginFinder", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "findFirstMatchingUnverifiedInvocation(java.util.List<org.mockito.invocation.Invocation>,org.mockito.invocation.MatchableInvocation,org.mockito.internal.verification.api.InOrderContext)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/invocation/InvocationsFinder.java", "jump": -1, "pkg": "org.mockito.internal.invocation", "class": "org.mockito.internal.invocation.InvocationsFinder", "reason": "RETURN_NULLABLE"}, {"param": "strictness", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/session/DefaultMockitoSessionBuilder.java", "jump": -1, "pkg": "org.mockito.internal.session", "class": "org.mockito.internal.session.DefaultMockitoSessionBuilder", "reason": "FIELD_NO_INIT"}, {"param": "", "method": "<T>lt(T)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/AdditionalMatchers.java", "jump": -1, "pkg": "org.mockito", "class": "org.mockito.AdditionalMatchers", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "preparedMock(java.lang.Object,java.lang.reflect.Field)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/configuration/injection/scanner/MockScanner.java", "jump": -1, "pkg": "org.mockito.internal.configuration.injection.scanner", "class": "org.mockito.internal.configuration.injection.scanner.MockScanner", "reason": "RETURN_NULLABLE"}, {"param": "emptyOptionalInt", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/JavaEightUtil.java", "jump": -1, "pkg": "org.mockito.internal.util", "class": "org.mockito.internal.util.JavaEightUtil", "reason": "FIELD_NO_INIT"}, {"param": "", "method": "findTypeFromGenericInArguments(org.mockito.invocation.InvocationOnMock,java.lang.reflect.TypeVariable)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/defaultanswers/RetrieveGenericsForDefaultAnswers.java", "jump": -1, "pkg": "org.mockito.internal.stubbing.defaultanswers", "class": "org.mockito.internal.stubbing.defaultanswers.RetrieveGenericsForDefaultAnswers", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "aryEq(short[])", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/AdditionalMatchers.java", "jump": -1, "pkg": "org.mockito", "class": "org.mockito.AdditionalMatchers", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "<T>aryEq(T[])", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/AdditionalMatchers.java", "jump": -1, "pkg": "org.mockito", "class": "org.mockito.AdditionalMatchers", "reason": "RETURN_NULLABLE"}, {"param": "instance", "method": "describeClass(java.lang.Object)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/bytebuddy/SubclassByteBuddyMockMaker.java", "jump": -1, "pkg": "org.mockito.internal.creation.bytebuddy", "class": "org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker", "reason": "PASS_NULLABLE"}, {"param": "", "method": "findFirstUnverifiedInOrder(org.mockito.internal.verification.api.InOrderContext,java.util.List<org.mockito.invocation.Invocation>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/invocation/InvocationsFinder.java", "jump": -1, "pkg": "org.mockito.internal.invocation", "class": "org.mockito.internal.invocation.InvocationsFinder", "reason": "RETURN_NULLABLE"}, {"param": "reflectUpToClass", "method": "reflectionEquals(java.lang.Object,java.lang.Object,boolean,java.lang.Class<?>,java.lang.String[])", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java", "jump": -1, "pkg": "org.mockito.internal.matchers.apachecommons", "class": "org.mockito.internal.matchers.apachecommons.EqualsBuilder", "reason": "PASS_NULLABLE"}, {"param": "emptyOptionalDouble", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/JavaEightUtil.java", "jump": -1, "pkg": "org.mockito.internal.util", "class": "org.mockito.internal.util.JavaEightUtil", "reason": "FIELD_NO_INIT"}, {"param": "", "method": "loadConfiguration()", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/configuration/ClassPathLoader.java", "jump": -1, "pkg": "org.mockito.internal.configuration", "class": "org.mockito.internal.configuration.ClassPathLoader", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "aryEq(long[])", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/AdditionalMatchers.java", "jump": -1, "pkg": "org.mockito", "class": "org.mockito.AdditionalMatchers", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "filterFirst(java.lang.Throwable,boolean)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/exceptions/stacktrace/StackTraceFilter.java", "jump": -1, "pkg": "org.mockito.internal.exceptions.stacktrace", "class": "org.mockito.internal.exceptions.stacktrace.StackTraceFilter", "reason": "RETURN_NULLABLE"}, {"param": "emptyOptionalLong", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/JavaEightUtil.java", "jump": -1, "pkg": "org.mockito.internal.util", "class": "org.mockito.internal.util.JavaEightUtil", "reason": "FIELD_NO_INIT"}, {"param": "", "method": "getDefaultPluginClass(java.lang.String)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/configuration/plugins/DefaultMockitoPlugins.java", "jump": -1, "pkg": "org.mockito.internal.configuration.plugins", "class": "org.mockito.internal.configuration.plugins.DefaultMockitoPlugins", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "<T>or(T,T)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/AdditionalMatchers.java", "jump": -1, "pkg": "org.mockito", "class": "org.mockito.AdditionalMatchers", "reason": "RETURN_NULLABLE"}, {"param": "causeMessage", "method": "cannotInitializeForInjectMocksAnnotation(java.lang.String,java.lang.String)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/exceptions/Reporter.java", "jump": -1, "pkg": "org.mockito.internal.exceptions", "class": "org.mockito.internal.exceptions.Reporter", "reason": "PASS_NULLABLE"}, {"param": "alternatePluginType", "method": "<PreferredType,AlternateType>loadPlugin(java.lang.Class<PreferredType>,java.lang.Class<AlternateType>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/configuration/plugins/PluginLoader.java", "jump": -1, "pkg": "org.mockito.internal.configuration.plugins", "class": "org.mockito.internal.configuration.plugins.PluginLoader", "reason": "PASS_NULLABLE"}, {"param": "", "method": "getLastLocation(java.util.List<org.mockito.invocation.Invocation>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/invocation/InvocationsFinder.java", "jump": -1, "pkg": "org.mockito.internal.invocation", "class": "org.mockito.internal.invocation.InvocationsFinder", "reason": "RETURN_NULLABLE"}, {"param": "throwableType", "method": "thenThrow(java.lang.Class<? extends java.lang.Throwable>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/BaseStubbing.java", "jump": -1, "pkg": "org.mockito.internal.stubbing", "class": "org.mockito.internal.stubbing.BaseStubbing", "reason": "PASS_NULLABLE"}, {"param": "", "method": "get(java.lang.String,java.lang.Object)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/bytebuddy/inject/MockMethodDispatcher.java", "jump": -2, "pkg": "org.mockito.internal.creation.bytebuddy.inject", "class": "org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher", "reason": "RETURN_NULLABLE"}, {"param": "stubbingStrictness", "method": "addAnswer(org.mockito.stubbing.Answer,boolean,org.mockito.quality.Strictness)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field mockStrictness (line 40) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/InvocationContainerImpl.java", "jump": -2, "pkg": "org.mockito.internal.stubbing", "class": "org.mockito.internal.stubbing.InvocationContainerImpl", "reason": "PASS_NULLABLE"}, {"param": "", "method": "transform(java.lang.ClassLoader,java.lang.String,java.lang.Class<?>,java.security.ProtectionDomain,byte[])", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields getModule (line 78), canRead (line 78), redefineModule (line 78), lastException (line 80) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/bytebuddy/InlineBytecodeGenerator.java", "jump": -2, "pkg": "org.mockito.internal.creation.bytebuddy", "class": "org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "getStatic(java.lang.String,java.lang.Class<?>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/bytebuddy/inject/MockMethodDispatcher.java", "jump": -2, "pkg": "org.mockito.internal.creation.bytebuddy.inject", "class": "org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "exceptionCauseMessageIfAvailable(java.lang.Exception)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/exceptions/Reporter.java", "jump": -2, "pkg": "org.mockito.internal.exceptions", "class": "org.mockito.internal.exceptions.Reporter", "reason": "RETURN_NULLABLE"}, {"param": "nextKey", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field thread (line 26) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field nextEntry (line 291) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/concurrent/WeakConcurrentMap.java", "jump": -2, "pkg": "org.mockito.internal.util.concurrent", "class": "org.mockito.internal.util.concurrent.WeakConcurrentMap.EntryIterator", "reason": "FIELD_NO_INIT"}, {"param": "verificationMode", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field ongoingStubbing (line 36) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/progress/MockingProgressImpl.java", "jump": -3, "pkg": "org.mockito.internal.progress", "class": "org.mockito.internal.progress.MockingProgressImpl", "reason": "FIELD_NO_INIT"}, {"param": "className", "method": "<T>create(java.lang.Class<T>,java.lang.String)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/configuration/plugins/DefaultMockitoPlugins.java", "jump": -3, "pkg": "org.mockito.internal.configuration.plugins", "class": "org.mockito.internal.configuration.plugins.DefaultMockitoPlugins", "reason": "PASS_NULLABLE"}, {"param": "wanted", "method": "VerificationDataImpl(org.mockito.internal.stubbing.InvocationContainerImpl,org.mockito.internal.invocation.InvocationMatcher)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/verification/VerificationDataImpl.java", "jump": -3, "pkg": "org.mockito.internal.verification", "class": "org.mockito.internal.verification.VerificationDataImpl", "reason": "PASS_NULLABLE"}, {"param": "owner", "method": "assureArguments(java.lang.reflect.AccessibleObject,java.lang.Object,java.lang.Class<?>,java.lang.Object[],java.lang.Class<?>[])", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/reflection/InstrumentationMemberAccessor.java", "jump": -3, "pkg": "org.mockito.internal.util.reflection", "class": "org.mockito.internal.util.reflection.InstrumentationMemberAccessor", "reason": "PASS_NULLABLE"}, {"param": "invocation", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/verification/SingleRegisteredInvocation.java", "jump": -3, "pkg": "org.mockito.internal.verification", "class": "org.mockito.internal.verification.SingleRegisteredInvocation", "reason": "FIELD_NO_INIT"}, {"param": "stubbingInProgress", "method": "", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields ongoingStubbing (line 36), verificationMode (line 37) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "CLASS_FIELD", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/progress/MockingProgressImpl.java", "jump": -4, "pkg": "org.mockito.internal.progress", "class": "org.mockito.internal.progress.MockingProgressImpl", "reason": "ASSIGN_FIELD_NULLABLE"}, {"param": "", "method": "<T>defaultValue(java.lang.Class<T>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/Primitives.java", "jump": 6, "pkg": "org.mockito.internal.util", "class": "org.mockito.internal.util.Primitives", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "answer(org.mockito.invocation.InvocationOnMock)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'ret' where @NonNull is required"], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/stubbing/Answer.java", "jump": 4, "pkg": "org.mockito.stubbing", "class": "org.mockito.stubbing.Answer", "reason": "WRONG_OVERRIDE_RETURN"}, {"param": "", "method": "get(K)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/concurrent/WeakConcurrentMap.java", "jump": 3, "pkg": "org.mockito.internal.util.concurrent", "class": "org.mockito.internal.util.concurrent.WeakConcurrentMap", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "handle(org.mockito.invocation.Invocation)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'returnedValue' where @NonNull is required"], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/invocation/MockHandler.java", "jump": 3, "pkg": "org.mockito.invocation", "class": "org.mockito.invocation.MockHandler", "reason": "WRONG_OVERRIDE_RETURN"}, {"param": "target", "method": "invoke(java.lang.reflect.Method,java.lang.Object,java.lang.Object...)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) parameter target is @NonNull, but parameter in superclass method org.mockito.plugins.MemberAccessor.invoke(java.lang.reflect.Method,java.lang.Object,java.lang.Object...) is @Nullable", "(Covered) parameter target is @NonNull, but parameter in superclass method org.mockito.plugins.MemberAccessor.invoke(java.lang.reflect.Method,java.lang.Object,java.lang.Object...) is @Nullable", "(Covered) parameter target is @NonNull, but parameter in superclass method org.mockito.plugins.MemberAccessor.invoke(java.lang.reflect.Method,java.lang.Object,java.lang.Object...) is @Nullable"], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/plugins/MemberAccessor.java", "jump": 2, "pkg": "org.mockito.plugins", "class": "org.mockito.plugins.MemberAccessor", "reason": "PASS_NULLABLE"}, {"param": "", "method": "returnValueFor(java.lang.Class<?>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java", "jump": 1, "pkg": "org.mockito.internal.stubbing.defaultanswers", "class": "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues", "reason": "RETURN_NULLABLE"}, {"param": "strictness", "method": "StubberImpl(org.mockito.quality.Strictness)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field strictness (line 30) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/StubberImpl.java", "jump": 1, "pkg": "org.mockito.internal.stubbing", "class": "org.mockito.internal.stubbing.StubberImpl", "reason": "PASS_NULLABLE"}, {"param": "entry", "method": "SimpleEntry(K,java.util.Map.Entry<org.mockito.internal.util.concurrent.WeakConcurrentMap.WeakKey<K>,V>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field entry (line 342) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/concurrent/WeakConcurrentMap.java", "jump": 1, "pkg": "org.mockito.internal.util.concurrent", "class": "org.mockito.internal.util.concurrent.WeakConcurrentMap.SimpleEntry", "reason": "PASS_NULLABLE"}, {"param": "", "method": "findAnswerFor(org.mockito.invocation.Invocation)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression findAnswerFor(invocation) is @Nullable", "(Covered) passing @Nullable parameter 'stubbing' where @NonNull is required"], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/InvocationContainerImpl.java", "jump": 1, "pkg": "org.mockito.internal.stubbing", "class": "org.mockito.internal.stubbing.InvocationContainerImpl", "reason": "RETURN_NULLABLE"}, {"param": "type", "method": "assureArguments(java.lang.reflect.AccessibleObject,java.lang.Object,java.lang.Class<?>,java.lang.Object[],java.lang.Class<?>[])", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression type is @Nullable"], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/reflection/InstrumentationMemberAccessor.java", "jump": 0, "pkg": "org.mockito.internal.util.reflection", "class": "org.mockito.internal.util.reflection.InstrumentationMemberAccessor", "reason": "PASS_NULLABLE"}, {"param": "", "method": "findFirstUnverified(java.util.List<org.mockito.invocation.Invocation>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'unverified' where @NonNull is required"], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/invocation/InvocationsFinder.java", "jump": 0, "pkg": "org.mockito.internal.invocation", "class": "org.mockito.internal.invocation.InvocationsFinder", "reason": "RETURN_NULLABLE"}, {"param": "settings", "method": "getInstantiator(org.mockito.mock.MockCreationSettings<?>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'settings' where @NonNull is required"], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/instance/InstantiatorProviderAdapter.java", "jump": 0, "pkg": "org.mockito.internal.creation.instance", "class": "org.mockito.internal.creation.instance.InstantiatorProviderAdapter", "reason": "WRONG_OVERRIDE_PARAM"}, {"param": "", "method": "<T>createMock(org.mockito.mock.MockCreationSettings<T>,org.mockito.invocation.MockHandler)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) method returns @Nullable, but superclass method org.mockito.plugins.MockMaker.<T>createMock(org.mockito.mock.MockCreationSettings<T>,org.mockito.invocation.MockHandler) returns @NonNull"], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/bytebuddy/InlineByteBuddyMockMaker.java", "jump": 0, "pkg": "org.mockito.internal.creation.bytebuddy", "class": "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker", "reason": "RETURN_NULLABLE"}, {"param": "value", "method": "thenReturn(T)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'value' where @NonNull is required"], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/BaseStubbing.java", "jump": 0, "pkg": "org.mockito.internal.stubbing", "class": "org.mockito.internal.stubbing.BaseStubbing", "reason": "WRONG_OVERRIDE_PARAM"}, {"param": "", "method": "handleConstruction(java.lang.Class<?>,java.lang.Object,java.lang.Object[],java.lang.String[])", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) method returns @Nullable, but superclass method org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher.handleConstruction(java.lang.Class<?>,java.lang.Object,java.lang.Object[],java.lang.String[]) returns @NonNull"], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/bytebuddy/MockMethodAdvice.java", "jump": 0, "pkg": "org.mockito.internal.creation.bytebuddy", "class": "org.mockito.internal.creation.bytebuddy.MockMethodAdvice", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "pullOngoingStubbing()", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) method returns @Nullable, but superclass method org.mockito.internal.progress.MockingProgress.pullOngoingStubbing() returns @NonNull"], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/progress/MockingProgressImpl.java", "jump": 0, "pkg": "org.mockito.internal.progress", "class": "org.mockito.internal.progress.MockingProgressImpl", "reason": "RETURN_NULLABLE"}, {"param": "throwable", "method": "ThrowsException(java.lang.Throwable)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field throwable (line 17) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/answers/ThrowsException.java", "jump": 0, "pkg": "org.mockito.internal.stubbing.answers", "class": "org.mockito.internal.stubbing.answers.ThrowsException", "reason": "PASS_NULLABLE"}, {"param": "", "method": "stubInfo()", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) method returns @Nullable, but superclass method org.mockito.invocation.Invocation.stubInfo() returns @NonNull"], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/invocation/InterceptedInvocation.java", "jump": 0, "pkg": "org.mockito.internal.invocation", "class": "org.mockito.internal.invocation.InterceptedInvocation", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "thenThrow(java.lang.Throwable...)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'mockitoOngoingStubbing.thenThrow(throwables)' where @NonNull is required"], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/stubbing/OngoingStubbing.java", "jump": 0, "pkg": "org.mockito.stubbing", "class": "org.mockito.stubbing.OngoingStubbing", "reason": "WRONG_OVERRIDE_RETURN"}, {"param": "", "method": "getOuterClassInstance()", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) method returns @Nullable, but superclass method org.mockito.internal.creation.settings.CreationSettings.getOuterClassInstance() returns @NonNull"], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/MockSettingsImpl.java", "jump": 0, "pkg": "org.mockito.internal.creation", "class": "org.mockito.internal.creation.MockSettingsImpl", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "getHandler(java.lang.Object)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/plugins/MockMaker.java", "jump": 0, "pkg": "org.mockito.plugins", "class": "org.mockito.plugins.MockMaker", "reason": "WRONG_OVERRIDE_RETURN"}, {"param": "", "method": "getStubbingStrictness()", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/DoAnswerStyleStubbing.java", "jump": -1, "pkg": "org.mockito.internal.stubbing", "class": "org.mockito.internal.stubbing.DoAnswerStyleStubbing", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "findTypeFromGeneric(org.mockito.invocation.InvocationOnMock,java.lang.reflect.TypeVariable)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/defaultanswers/RetrieveGenericsForDefaultAnswers.java", "jump": -1, "pkg": "org.mockito.internal.stubbing.defaultanswers", "class": "org.mockito.internal.stubbing.defaultanswers.RetrieveGenericsForDefaultAnswers", "reason": "RETURN_NULLABLE"}, {"param": "message", "method": "MockitoException(java.lang.String,java.lang.Throwable)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'cause' where @NonNull is required"], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/exceptions/base/MockitoException.java", "jump": -1, "pkg": "org.mockito.exceptions.base", "class": "org.mockito.exceptions.base.MockitoException", "reason": "PASS_NULLABLE"}, {"param": "", "method": "extractActualBoundedTypeOf(java.lang.reflect.Type)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/reflection/GenericMetadataSupport.java", "jump": -1, "pkg": "org.mockito.internal.util.reflection", "class": "org.mockito.internal.util.reflection.GenericMetadataSupport.TypeVariableReturnType", "reason": "RETURN_NULLABLE"}, {"param": "classType", "method": "registerTypeVariablesOn(java.lang.reflect.Type)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/reflection/GenericMetadataSupport.java", "jump": -1, "pkg": "org.mockito.internal.util.reflection", "class": "org.mockito.internal.util.reflection.GenericMetadataSupport", "reason": "PASS_NULLABLE"}, {"param": "", "method": "handleStatic(java.lang.Class<?>,java.lang.reflect.Method,java.lang.Object[])", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/bytebuddy/inject/MockMethodDispatcher.java", "jump": -1, "pkg": "org.mockito.internal.creation.bytebuddy.inject", "class": "org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher", "reason": "WRONG_OVERRIDE_RETURN"}, {"param": "settings", "method": "getInstantiator(org.mockito.mock.MockCreationSettings<?>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/instance/DefaultInstantiatorProvider.java", "jump": -1, "pkg": "org.mockito.internal.creation.instance", "class": "org.mockito.internal.creation.instance.DefaultInstantiatorProvider", "reason": "WRONG_OVERRIDE_PARAM"}, {"param": "", "method": "getLocationOfStubbing()", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/listeners/MethodInvocationReport.java", "jump": -1, "pkg": "org.mockito.listeners", "class": "org.mockito.listeners.MethodInvocationReport", "reason": "WRONG_OVERRIDE_RETURN"}, {"param": "", "method": "pullVerificationMode()", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/progress/MockingProgress.java", "jump": -1, "pkg": "org.mockito.internal.progress", "class": "org.mockito.internal.progress.MockingProgress", "reason": "WRONG_OVERRIDE_RETURN"}, {"param": "", "method": "handle(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/bytebuddy/inject/MockMethodDispatcher.java", "jump": -1, "pkg": "org.mockito.internal.creation.bytebuddy.inject", "class": "org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher", "reason": "WRONG_OVERRIDE_RETURN"}, {"param": "", "method": "<T>any()", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/ArgumentMatchers.java", "jump": -1, "pkg": "org.mockito", "class": "org.mockito.ArgumentMatchers", "reason": "RETURN_NULLABLE"}, {"param": "excludeFields", "method": "reflectionEquals(java.lang.Object,java.lang.Object,boolean,java.lang.Class<?>,java.lang.String[])", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'excludeFields' where @NonNull is required", "(Covered) passing @Nullable parameter 'excludeFields' where @NonNull is required"], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java", "jump": -1, "pkg": "org.mockito.internal.matchers.apachecommons", "class": "org.mockito.internal.matchers.apachecommons.EqualsBuilder", "reason": "PASS_NULLABLE"}, {"param": "", "method": "<T>getMockHandler(T)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression oldHandler is @Nullable", "dereferenced expression getMockHandler(mock) is @Nullable", "dereferenced expression getMockHandler(mock) is @Nullable", "dereferenced expression getMockHandler(mock) is @Nullable", "dereferenced expression getMockHandler(mock) is @Nullable", "dereferenced expression getMockHandler(mock) is @Nullable", "dereferenced expression MockUtil.getMockHandler(invocation.getMock()) is @Nullable", "dereferenced expression MockUtil.getMockHandler(invocation.getMock()) is @Nullable", "dereferenced expression MockUtil.getMockHandler(mock) is @Nullable", "dereferenced expression MockUtil.getMockHandler(mock) is @Nullable"], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/MockUtil.java", "jump": 10, "pkg": "org.mockito.internal.util", "class": "org.mockito.internal.util.MockUtil", "reason": "RETURN_NULLABLE"}, {"param": "", "method": "getOuterClassInstance()", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields typeToMock (line 30), name (line 32), spiedInstance (line 33), defaultAnswer (line 34), mockName (line 35), outerClassInstance (line 51), constructorArgs (line 52) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field outerClassInstance (line 51) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) method returns @Nullable, but superclass method org.mockito.mock.MockCreationSettings.getOuterClassInstance() returns @NonNull"], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/settings/CreationSettings.java", "jump": 2, "pkg": "org.mockito.internal.creation.settings", "class": "org.mockito.internal.creation.settings.CreationSettings", "reason": "WRONG_OVERRIDE_RETURN"}, {"param": "", "method": "<T>createMock(org.mockito.mock.MockCreationSettings<T>,org.mockito.invocation.MockHandler)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/plugins/MockMaker.java", "jump": 2, "pkg": "org.mockito.plugins", "class": "org.mockito.plugins.MockMaker", "reason": "WRONG_OVERRIDE_RETURN"}, {"param": "ongoingStubbing", "method": "BDDOngoingStubbingImpl(org.mockito.stubbing.OngoingStubbing<T>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field mockitoOngoingStubbing (line 86) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/BDDMockito.java", "jump": 1, "pkg": "org.mockito", "class": "org.mockito.BDDMockito.BDDOngoingStubbingImpl", "reason": "PASS_NULLABLE"}, {"param": "", "method": "pullOngoingStubbing()", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression ongoingStubbing is @Nullable"], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/progress/MockingProgress.java", "jump": 0, "pkg": "org.mockito.internal.progress", "class": "org.mockito.internal.progress.MockingProgress", "reason": "WRONG_OVERRIDE_RETURN"}, {"param": "value", "method": "Returns(java.lang.Object)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field value (line 21) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/answers/Returns.java", "jump": 0, "pkg": "org.mockito.internal.stubbing.answers", "class": "org.mockito.internal.stubbing.answers.Returns", "reason": "PASS_NULLABLE"}, {"param": "undesired", "method": "noMoreInteractionsWanted(org.mockito.invocation.Invocation,java.util.List<org.mockito.internal.exceptions.VerificationAwareInvocation>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression undesired is @Nullable"], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/exceptions/Reporter.java", "jump": 0, "pkg": "org.mockito.internal.exceptions", "class": "org.mockito.internal.exceptions.Reporter", "reason": "PASS_NULLABLE"}, {"param": "settings", "method": "getInstantiator(org.mockito.mock.MockCreationSettings<?>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) parameter settings is @NonNull, but parameter in superclass method org.mockito.plugins.InstantiatorProvider.getInstantiator(org.mockito.mock.MockCreationSettings<?>) is @Nullable"], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/plugins/InstantiatorProvider.java", "jump": 0, "pkg": "org.mockito.plugins", "class": "org.mockito.plugins.InstantiatorProvider", "reason": "PASS_NULLABLE"}, {"param": "", "method": "handleConstruction(java.lang.Class<?>,java.lang.Object,java.lang.Object[],java.lang.String[])", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/bytebuddy/inject/MockMethodDispatcher.java", "jump": 0, "pkg": "org.mockito.internal.creation.bytebuddy.inject", "class": "org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher", "reason": "WRONG_OVERRIDE_RETURN"}, {"param": "", "method": "getHandler(java.lang.Object)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/bytebuddy/ByteBuddyMockMaker.java", "jump": -1, "pkg": "org.mockito.internal.creation.bytebuddy", "class": "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker", "reason": "RETURN_NULLABLE"}, {"param": "t", "method": "MockitoException(java.lang.String,java.lang.Throwable)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/exceptions/base/MockitoException.java", "jump": -1, "pkg": "org.mockito.exceptions.base", "class": "org.mockito.exceptions.base.MockitoException", "reason": "PASS_NULLABLE"}, {"param": "", "method": "stubInfo()", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/invocation/Invocation.java", "jump": -1, "pkg": "org.mockito.invocation", "class": "org.mockito.invocation.Invocation", "reason": "WRONG_OVERRIDE_RETURN"}, {"param": "excludeFields", "method": "reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class<?>,org.mockito.internal.matchers.apachecommons.EqualsBuilder,boolean,java.lang.String[])", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java", "jump": -2, "pkg": "org.mockito.internal.matchers.apachecommons", "class": "org.mockito.internal.matchers.apachecommons.EqualsBuilder", "reason": "PASS_NULLABLE"}, {"param": "settings", "method": "getInstantiator(org.mockito.mock.MockCreationSettings<?>)", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_PARAM", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/instance/InstantiatorProvider2Adapter.java", "jump": -1, "pkg": "org.mockito.internal.creation.instance", "class": "org.mockito.internal.creation.instance.InstantiatorProvider2Adapter", "reason": "WRONG_OVERRIDE_PARAM"}, {"param": "", "method": "handleConstruction(java.lang.String,java.lang.Class<?>,java.lang.Object,java.lang.Object[],java.lang.String[])", "inject": "true", "annotation": "javax.annotation.Nullable", "errors": [], "location": "METHOD_RETURN", "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/bytebuddy/inject/MockMethodDispatcher.java", "jump": -1, "pkg": "org.mockito.internal.creation.bytebuddy.inject", "class": "org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher", "reason": "RETURN_NULLABLE"}]}