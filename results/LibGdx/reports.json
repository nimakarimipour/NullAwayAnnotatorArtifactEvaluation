{"reports": [{"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/Gdx.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression Gdx.gl20 is @Nullable", "dereferenced expression gl is @Nullable"], "jump": 115, "pkg": "com.badlogic.gdx", "inject": "true", "class": "com.badlogic.gdx.Gdx", "location": "CLASS_FIELD", "param": "gl20"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/Gdx.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable", "dereferenced expression Gdx.gl is @Nullable"], "jump": 84, "pkg": "com.badlogic.gdx", "inject": "true", "class": "com.badlogic.gdx.Gdx", "location": "CLASS_FIELD", "param": "gl"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/Gdx.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable", "dereferenced expression Gdx.graphics is @Nullable"], "jump": 57, "pkg": "com.badlogic.gdx", "inject": "true", "class": "com.badlogic.gdx.Gdx", "location": "CLASS_FIELD", "param": "graphics"}, {"method": "<T>get(T)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression shaders.get(Gdx.app) is @Nullable", "dereferenced expression shaders.get(app) is @Nullable", "dereferenced expression shaders.get(Gdx.app) is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields entries1 (line 77), entries2 (line 77), values1 (line 79), values2 (line 79), keys1 (line 81), keys2 (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression assets.get(type) is @Nullable", "dereferenced expression assetRef is @Nullable", "dereferenced expression assets.get(type) is @Nullable", "dereferenced expression assetsByType.get(fileName) is @Nullable", "dereferenced expression assetsByType is @Nullable", "dereferenced expression assetsByType.get(fileName) is @Nullable", "dereferenced expression assets.get(type) is @Nullable", "(Covered) passing @Nullable parameter 'type' where @NonNull is required", "dereferenced expression assetRef is @Nullable", "dereferenced expression assets.get(type) is @Nullable", "(Covered) passing @Nullable parameter 'type' where @NonNull is required", "dereferenced expression assetRef is @Nullable", "dereferenced expression assets.get(type) is @Nullable", "(Covered) passing @Nullable parameter 'type' where @NonNull is required", "dereferenced expression assetRef is @Nullable", "dereferenced expression assets.get(type).get(fileName) is @Nullable", "dereferenced expression assets.get(type) is @Nullable", "dereferenced expression assets.get(type).get(fileName) is @Nullable", "dereferenced expression assets.get(type) is @Nullable", "dereferenced expression assets.get(type) is @Nullable", "(Covered) passing @Nullable parameter 'type' where @NonNull is required", "(Covered) passing @Nullable parameter 'type' where @NonNull is required", "dereferenced expression assetRef is @Nullable", "(Covered) passing @Nullable parameter 'pageToTexture.get(region.page)' where @NonNull is required", "dereferenced expression metadata is @Nullable", "dereferenced expression metadata is @Nullable", "dereferenced expression metadata is @Nullable", "dereferenced expression metadata is @Nullable", "dereferenced expression typeResources is @Nullable", "(Covered) passing @Nullable parameter 'map.get((T)key)' where @NonNull is required", "(Covered) passing @Nullable parameter 'map.get(keys[i])' where @NonNull is required", "(Covered) passing @Nullable parameter 'values.get(actor)' where @NonNull is required", "dereferenced expression rect is @Nullable", "dereferenced expression rect is @Nullable", "dereferenced expression texture is @Nullable", "(Covered) passing @Nullable parameter 'images.get(name)' where @NonNull is required"], "jump": 55, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectMap", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'c.actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'c.actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'c.actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'c.actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'actor' where @NonNull is required"], "jump": 44, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "actor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/Gdx.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression Gdx.app is @Nullable", "dereferenced expression Gdx.app is @Nullable", "(Covered) passing @Nullable parameter 'Gdx.app' where @NonNull is required", "(Covered) passing @Nullable parameter 'Gdx.app' where @NonNull is required", "(Covered) passing @Nullable parameter 'Gdx.app' where @NonNull is required", "(Covered) passing @Nullable parameter 'Gdx.app' where @NonNull is required", "(Covered) passing @Nullable parameter 'Gdx.app' where @NonNull is required", "dereferenced expression Gdx.app is @Nullable", "dereferenced expression Gdx.app is @Nullable", "dereferenced expression Gdx.app is @Nullable", "dereferenced expression Gdx.app is @Nullable", "dereferenced expression Gdx.app is @Nullable", "dereferenced expression Gdx.app is @Nullable", "dereferenced expression Gdx.app is @Nullable", "dereferenced expression Gdx.app is @Nullable", "dereferenced expression Gdx.app is @Nullable", "(Covered) passing @Nullable parameter 'Gdx.app' where @NonNull is required", "(Covered) passing @Nullable parameter 'Gdx.app' where @NonNull is required", "(Covered) passing @Nullable parameter 'Gdx.app' where @NonNull is required", "(Covered) passing @Nullable parameter 'Gdx.app' where @NonNull is required", "(Covered) passing @Nullable parameter 'Gdx.app' where @NonNull is required", "read of @NonNull field app before initialization", "dereferenced expression Gdx.app is @Nullable", "dereferenced expression Gdx.app is @Nullable", "dereferenced expression Gdx.app is @Nullable", "dereferenced expression Gdx.app is @Nullable", "dereferenced expression Gdx.app is @Nullable", "dereferenced expression Gdx.app is @Nullable", "dereferenced expression Gdx.app is @Nullable", "(Covered) passing @Nullable parameter 'Gdx.app' where @NonNull is required", "dereferenced expression Gdx.app is @Nullable", "dereferenced expression Gdx.app is @Nullable", "dereferenced expression Gdx.app is @Nullable", "dereferenced expression Gdx.app is @Nullable", "dereferenced expression Gdx.app is @Nullable", "dereferenced expression Gdx.app is @Nullable", "dereferenced expression Gdx.app is @Nullable", "dereferenced expression Gdx.app is @Nullable", "(Covered) passing @Nullable parameter 'Gdx.app' where @NonNull is required", "dereferenced expression Gdx.app is @Nullable", "dereferenced expression Gdx.app is @Nullable", "dereferenced expression Gdx.app is @Nullable", "dereferenced expression Gdx.app is @Nullable"], "jump": 44, "pkg": "com.badlogic.gdx", "inject": "true", "class": "com.badlogic.gdx.Gdx", "location": "CLASS_FIELD", "param": "app"}, {"method": "set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/BaseShader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable", "(Covered) parameter renderable is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter.set(com.badlogic.gdx.graphics.g3d.shaders.BaseShader,int,com.badlogic.gdx.graphics.g3d.Renderable,com.badlogic.gdx.graphics.g3d.Attributes) is @Nullable"], "jump": 37, "pkg": "com.badlogic.gdx.graphics.g3d.shaders", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter", "location": "METHOD_PARAM", "param": "renderable"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'this.writer' where @NonNull is required", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable"], "jump": 28, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Json", "location": "CLASS_FIELD", "param": "writer"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/MeshPart.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression renderable.meshPart.mesh is @Nullable", "dereferenced expression renderable.meshPart.mesh is @Nullable", "dereferenced expression renderable.meshPart.mesh is @Nullable", "dereferenced expression renderable.meshPart.mesh is @Nullable", "dereferenced expression renderable.meshPart.mesh is @Nullable", "dereferenced expression renderable.meshPart.mesh is @Nullable", "dereferenced expression renderable.meshPart.mesh is @Nullable", "dereferenced expression mesh is @Nullable", "dereferenced expression mesh is @Nullable", "dereferenced expression mesh is @Nullable", "dereferenced expression renderable.meshPart.mesh is @Nullable", "dereferenced expression renderable.meshPart.mesh is @Nullable", "dereferenced expression renderable.meshPart.mesh is @Nullable", "dereferenced expression meshPart.mesh is @Nullable", "dereferenced expression meshPart.mesh is @Nullable", "dereferenced expression renderable.meshPart.mesh is @Nullable", "dereferenced expression renderable.meshPart.mesh is @Nullable", "dereferenced expression renderable.meshPart.mesh is @Nullable", "dereferenced expression arg0.meshPart.mesh is @Nullable", "dereferenced expression arg1.meshPart.mesh is @Nullable", "dereferenced expression first.meshPart.mesh is @Nullable", "dereferenced expression renderable.meshPart.mesh is @Nullable", "(Covered) passing @Nullable parameter 'meshpart.mesh' where @NonNull is required", "(Covered) passing @Nullable parameter 'mpm.meshPart.mesh' where @NonNull is required", "(Covered) passing @Nullable parameter 'mpm.meshPart.mesh' where @NonNull is required", "(Covered) passing @Nullable parameter 'mpm.meshPart.mesh' where @NonNull is required", "dereferenced expression mesh is @Nullable"], "jump": 27, "pkg": "com.badlogic.gdx.graphics.g3d.model", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.MeshPart", "location": "CLASS_FIELD", "param": "mesh"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/BaseShader.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression shader.program is @Nullable", "dereferenced expression shader.program is @Nullable", "dereferenced expression shader.program is @Nullable", "(Covered) passing @Nullable parameter 'program' where @NonNull is required", "dereferenced expression program is @Nullable", "dereferenced expression program is @Nullable", "dereferenced expression program is @Nullable", "dereferenced expression program is @Nullable", "dereferenced expression program is @Nullable", "(Covered) passing @Nullable parameter 'program' where @NonNull is required", "(Covered) passing @Nullable parameter 'program' where @NonNull is required", "(Covered) passing @Nullable parameter 'program' where @NonNull is required", "(Covered) passing @Nullable parameter 'program' where @NonNull is required", "dereferenced expression program is @Nullable", "dereferenced expression program is @Nullable", "dereferenced expression program is @Nullable", "dereferenced expression program is @Nullable", "dereferenced expression program is @Nullable", "dereferenced expression program is @Nullable", "dereferenced expression program is @Nullable", "dereferenced expression program is @Nullable", "dereferenced expression program is @Nullable", "dereferenced expression program is @Nullable", "dereferenced expression program is @Nullable", "dereferenced expression program is @Nullable", "dereferenced expression program is @Nullable", "dereferenced expression program is @Nullable", "dereferenced expression program is @Nullable", "(Covered) passing @Nullable parameter 'program' where @NonNull is required", "dereferenced expression program is @Nullable"], "jump": 27, "pkg": "com.badlogic.gdx.graphics.g3d.shaders", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.shaders.BaseShader", "location": "CLASS_FIELD", "param": "program"}, {"method": "<T>readValue(java.lang.Class<T>,java.lang.Class,com.badlogic.gdx.utils.JsonValue)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'readValue(field.getType(), elementType, jsonValue)' where @NonNull is required", "(Covered) passing @Nullable parameter 'readValue(field.getType(), metadata.elementType, child)' where @NonNull is required", "(Covered) passing @Nullable parameter 'readValue(elementType, null, child)' where @NonNull is required", "unboxing of a @Nullable value", "unboxing of a @Nullable value", "(Covered) passing @Nullable parameter 'readValue(elementType, null, child)' where @NonNull is required", "(Covered) passing @Nullable parameter 'readValue(elementType, null, child)' where @NonNull is required", "(Covered) passing @Nullable parameter 'readValue(elementType, null, child)' where @NonNull is required", "(Covered) passing @Nullable parameter 'readValue(elementType, null, child)' where @NonNull is required", "(Covered) passing @Nullable parameter 'readValue(elementType, null, child)' where @NonNull is required", "(Covered) passing @Nullable parameter 'readValue(elementType, null, child)' where @NonNull is required", "(Covered) passing @Nullable parameter 'readValue(elementType, null, child)' where @NonNull is required"], "jump": 26, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Json", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/Gdx.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression Gdx.files is @Nullable", "dereferenced expression Gdx.files is @Nullable", "dereferenced expression Gdx.files is @Nullable", "dereferenced expression Gdx.files is @Nullable", "dereferenced expression Gdx.files is @Nullable", "dereferenced expression Gdx.files is @Nullable", "dereferenced expression Gdx.files is @Nullable", "dereferenced expression Gdx.files is @Nullable", "dereferenced expression Gdx.files is @Nullable", "dereferenced expression Gdx.files is @Nullable", "dereferenced expression Gdx.files is @Nullable", "dereferenced expression Gdx.files is @Nullable", "dereferenced expression Gdx.files is @Nullable", "dereferenced expression Gdx.files is @Nullable", "dereferenced expression Gdx.files is @Nullable", "dereferenced expression Gdx.files is @Nullable", "dereferenced expression Gdx.files is @Nullable", "dereferenced expression Gdx.files is @Nullable", "dereferenced expression Gdx.files is @Nullable", "dereferenced expression Gdx.files is @Nullable", "dereferenced expression Gdx.files is @Nullable", "dereferenced expression Gdx.files is @Nullable"], "jump": 24, "pkg": "com.badlogic.gdx", "inject": "true", "class": "com.badlogic.gdx.Gdx", "location": "CLASS_FIELD", "param": "files"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Action.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression target is @Nullable", "dereferenced expression target is @Nullable", "dereferenced expression target is @Nullable", "dereferenced expression target is @Nullable", "dereferenced expression target is @Nullable", "dereferenced expression target is @Nullable", "dereferenced expression target is @Nullable", "dereferenced expression target is @Nullable", "dereferenced expression target is @Nullable", "dereferenced expression target is @Nullable", "dereferenced expression target is @Nullable", "dereferenced expression target is @Nullable", "dereferenced expression target is @Nullable", "dereferenced expression target is @Nullable", "dereferenced expression target is @Nullable", "dereferenced expression target is @Nullable", "dereferenced expression target is @Nullable", "dereferenced expression target is @Nullable", "dereferenced expression target is @Nullable", "dereferenced expression target is @Nullable", "dereferenced expression target is @Nullable", "dereferenced expression target is @Nullable", "dereferenced expression target is @Nullable", "dereferenced expression target is @Nullable"], "jump": 24, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.Action", "location": "CLASS_FIELD", "param": "target"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/Gdx.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression Gdx.input is @Nullable", "dereferenced expression Gdx.input is @Nullable", "dereferenced expression Gdx.input is @Nullable", "dereferenced expression Gdx.input is @Nullable", "dereferenced expression Gdx.input is @Nullable", "dereferenced expression Gdx.input is @Nullable", "dereferenced expression Gdx.input is @Nullable", "dereferenced expression Gdx.input is @Nullable", "dereferenced expression Gdx.input is @Nullable", "dereferenced expression Gdx.input is @Nullable", "dereferenced expression Gdx.input is @Nullable", "dereferenced expression Gdx.input is @Nullable", "dereferenced expression Gdx.input is @Nullable", "dereferenced expression Gdx.input is @Nullable", "dereferenced expression Gdx.input is @Nullable", "dereferenced expression Gdx.input is @Nullable", "dereferenced expression Gdx.input is @Nullable", "dereferenced expression Gdx.input is @Nullable", "dereferenced expression Gdx.input is @Nullable", "dereferenced expression Gdx.input is @Nullable", "dereferenced expression Gdx.input is @Nullable", "dereferenced expression Gdx.input is @Nullable", "dereferenced expression Gdx.input is @Nullable"], "jump": 22, "pkg": "com.badlogic.gdx", "inject": "true", "class": "com.badlogic.gdx.Gdx", "location": "CLASS_FIELD", "param": "input"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields foundNode (line 67), rangeStart (line 69) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression rangeStart.actor is @Nullable", "dereferenced expression node.actor is @Nullable", "dereferenced expression node.actor is @Nullable", "dereferenced expression node.actor is @Nullable", "dereferenced expression rootNodes.get(index + 1).actor is @Nullable", "dereferenced expression before.actor is @Nullable", "dereferenced expression node.actor is @Nullable", "dereferenced expression actor is @Nullable", "dereferenced expression node.actor is @Nullable", "dereferenced expression actor is @Nullable", "dereferenced expression node.actor is @Nullable", "dereferenced expression node.actor is @Nullable", "(Covered) initializer method does not guarantee @NonNull field parent (line 676) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field parent (line 676) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression actor is @Nullable", "(Covered) passing @Nullable parameter 'actor' where @NonNull is required", "dereferenced expression actor is @Nullable", "dereferenced expression children.get(childIndex + 1).actor is @Nullable", "dereferenced expression before.actor is @Nullable", "dereferenced expression node.actor is @Nullable", "dereferenced expression actor is @Nullable", "dereferenced expression actor is @Nullable", "dereferenced expression actor is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields plus (line 1038), minus (line 1038), plusOver (line 1040), minusOver (line 1040), over (line 1043), selection (line 1043), background (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plusOver (line 1040), minusOver (line 1040), over (line 1043), background (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 22, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree.Node", "location": "CLASS_FIELD", "param": "actor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/batches/BillboardParticleBatch.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field mode (line 112) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'vertices' where @NonNull is required", "(Covered) passing @Nullable parameter 'vertices' where @NonNull is required", "(Covered) passing @Nullable parameter 'vertices' where @NonNull is required", "(Covered) passing @Nullable parameter 'vertices' where @NonNull is required", "(Covered) passing @Nullable parameter 'vertices' where @NonNull is required", "(Covered) passing @Nullable parameter 'vertices' where @NonNull is required", "(Covered) passing @Nullable parameter 'vertices' where @NonNull is required", "(Covered) passing @Nullable parameter 'vertices' where @NonNull is required", "(Covered) passing @Nullable parameter 'vertices' where @NonNull is required", "(Covered) passing @Nullable parameter 'vertices' where @NonNull is required", "(Covered) passing @Nullable parameter 'vertices' where @NonNull is required", "(Covered) passing @Nullable parameter 'vertices' where @NonNull is required", "(Covered) passing @Nullable parameter 'vertices' where @NonNull is required", "(Covered) passing @Nullable parameter 'vertices' where @NonNull is required", "(Covered) passing @Nullable parameter 'vertices' where @NonNull is required", "(Covered) passing @Nullable parameter 'vertices' where @NonNull is required", "(Covered) passing @Nullable parameter 'vertices' where @NonNull is required", "(Covered) passing @Nullable parameter 'vertices' where @NonNull is required", "(Covered) passing @Nullable parameter 'vertices' where @NonNull is required", "(Covered) passing @Nullable parameter 'vertices' where @NonNull is required", "(Covered) passing @Nullable parameter 'vertices' where @NonNull is required"], "jump": 20, "pkg": "com.badlogic.gdx.graphics.g3d.particles.batches", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.batches.BillboardParticleBatch", "location": "CLASS_FIELD", "param": "vertices"}, {"method": "asString()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'object.asString()' where @NonNull is required", "(Covered) passing @Nullable parameter 'object.asString()' where @NonNull is required", "(Covered) passing @Nullable parameter 'object.asString()' where @NonNull is required", "(Covered) passing @Nullable parameter 'jsonData.asString()' where @NonNull is required", "(Covered) passing @Nullable parameter 'jsonData.asString()' where @NonNull is required", "dereferenced expression string is @Nullable", "dereferenced expression string is @Nullable", "(Covered) passing @Nullable parameter 'jsonData.asString()' where @NonNull is required", "(Covered) passing @Nullable parameter 'jsonData.asString()' where @NonNull is required", "dereferenced expression attr is @Nullable", "(Covered) passing @Nullable parameter 'value.asString()' where @NonNull is required"], "jump": 18, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.JsonValue", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field passwordBuffer (line 136) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression style.font is @Nullable", "dereferenced expression style.font is @Nullable", "dereferenced expression style.font is @Nullable", "(Covered) passing @Nullable parameter 'font' where @NonNull is required", "(Covered) passing @Nullable parameter 'font' where @NonNull is required", "dereferenced expression font is @Nullable", "dereferenced expression font is @Nullable", "dereferenced expression style.font is @Nullable", "dereferenced expression style.font is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 1225), focusedFontColor (line 1227), disabledFontColor (line 1227), background (line 1230), focusedBackground (line 1230), disabledBackground (line 1230), cursor (line 1230), selection (line 1230), messageFont (line 1233), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 1225), focusedFontColor (line 1227), disabledFontColor (line 1227), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields focusedFontColor (line 1227), disabledFontColor (line 1227), focusedBackground (line 1230), disabledBackground (line 1230), messageFont (line 1233), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression style.font is @Nullable", "dereferenced expression style.font is @Nullable", "dereferenced expression font is @Nullable", "dereferenced expression style.font is @Nullable", "dereferenced expression style.font is @Nullable", "(Covered) passing @Nullable parameter 'font' where @NonNull is required", "dereferenced expression style.font is @Nullable", "dereferenced expression font is @Nullable", "dereferenced expression font is @Nullable"], "jump": 18, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldStyle", "location": "CLASS_FIELD", "param": "font"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/BaseShader.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression locations is @Nullable", "dereferenced expression locations is @Nullable", "dereferenced expression locations is @Nullable", "dereferenced expression locations is @Nullable", "dereferenced expression locations is @Nullable", "dereferenced expression locations is @Nullable", "dereferenced expression locations is @Nullable", "dereferenced expression locations is @Nullable", "dereferenced expression locations is @Nullable", "dereferenced expression locations is @Nullable", "dereferenced expression locations is @Nullable", "dereferenced expression locations is @Nullable", "dereferenced expression locations is @Nullable", "dereferenced expression locations is @Nullable", "dereferenced expression locations is @Nullable", "dereferenced expression locations is @Nullable", "dereferenced expression locations is @Nullable"], "jump": 16, "pkg": "com.badlogic.gdx.graphics.g3d.shaders", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.shaders.BaseShader", "location": "CLASS_FIELD", "param": "locations"}, {"method": "get(com.badlogic.gdx.scenes.scene2d.Actor)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Value.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) parameter context is @NonNull, but parameter in superclass method com.badlogic.gdx.scenes.scene2d.ui.Value.get(com.badlogic.gdx.scenes.scene2d.Actor) is @Nullable", "(Covered) parameter context is @NonNull, but parameter in superclass method com.badlogic.gdx.scenes.scene2d.ui.Value.get(com.badlogic.gdx.scenes.scene2d.Actor) is @Nullable", "(Covered) parameter context is @NonNull, but parameter in superclass method com.badlogic.gdx.scenes.scene2d.ui.Value.get(com.badlogic.gdx.scenes.scene2d.Actor) is @Nullable", "(Covered) parameter context is @NonNull, but parameter in superclass method com.badlogic.gdx.scenes.scene2d.ui.Value.get(com.badlogic.gdx.scenes.scene2d.Actor) is @Nullable", "(Covered) parameter context is @NonNull, but parameter in superclass method com.badlogic.gdx.scenes.scene2d.ui.Value.get(com.badlogic.gdx.scenes.scene2d.Actor) is @Nullable", "(Covered) parameter context is @NonNull, but parameter in superclass method com.badlogic.gdx.scenes.scene2d.ui.Value.get(com.badlogic.gdx.scenes.scene2d.Actor) is @Nullable", "(Covered) parameter context is @NonNull, but parameter in superclass method com.badlogic.gdx.scenes.scene2d.ui.Value.get(com.badlogic.gdx.scenes.scene2d.Actor) is @Nullable", "(Covered) parameter actor is @NonNull, but parameter in superclass method com.badlogic.gdx.scenes.scene2d.ui.Value.get(com.badlogic.gdx.scenes.scene2d.Actor) is @Nullable", "(Covered) parameter actor is @NonNull, but parameter in superclass method com.badlogic.gdx.scenes.scene2d.ui.Value.get(com.badlogic.gdx.scenes.scene2d.Actor) is @Nullable", "(Covered) parameter context is @NonNull, but parameter in superclass method com.badlogic.gdx.scenes.scene2d.ui.Value.get(com.badlogic.gdx.scenes.scene2d.Actor) is @Nullable", "(Covered) parameter context is @NonNull, but parameter in superclass method com.badlogic.gdx.scenes.scene2d.ui.Value.get(com.badlogic.gdx.scenes.scene2d.Actor) is @Nullable", "(Covered) parameter context is @NonNull, but parameter in superclass method com.badlogic.gdx.scenes.scene2d.ui.Value.get(com.badlogic.gdx.scenes.scene2d.Actor) is @Nullable", "(Covered) parameter context is @NonNull, but parameter in superclass method com.badlogic.gdx.scenes.scene2d.ui.Value.get(com.badlogic.gdx.scenes.scene2d.Actor) is @Nullable", "(Covered) parameter context is @NonNull, but parameter in superclass method com.badlogic.gdx.scenes.scene2d.ui.Value.get(com.badlogic.gdx.scenes.scene2d.Actor) is @Nullable", "(Covered) parameter context is @NonNull, but parameter in superclass method com.badlogic.gdx.scenes.scene2d.ui.Value.get(com.badlogic.gdx.scenes.scene2d.Actor) is @Nullable", "(Covered) parameter context is @NonNull, but parameter in superclass method com.badlogic.gdx.scenes.scene2d.ui.Value.get(com.badlogic.gdx.scenes.scene2d.Actor) is @Nullable"], "jump": 15, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Value", "location": "METHOD_PARAM", "param": "context"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/files/FileHandle.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field type (line 64) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression file is @Nullable", "dereferenced expression file is @Nullable", "dereferenced expression file is @Nullable", "dereferenced expression file is @Nullable", "dereferenced expression file is @Nullable", "dereferenced expression file is @Nullable", "dereferenced expression file is @Nullable", "dereferenced expression file is @Nullable", "dereferenced expression file is @Nullable", "dereferenced expression file is @Nullable", "dereferenced expression file is @Nullable", "dereferenced expression file is @Nullable", "dereferenced expression file is @Nullable", "dereferenced expression file is @Nullable"], "jump": 15, "pkg": "com.badlogic.gdx.files", "inject": "true", "class": "com.badlogic.gdx.files.FileHandle", "location": "CLASS_FIELD", "param": "file"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 77), entries2 (line 77), values1 (line 79), values2 (line 79), keys1 (line 81), keys2 (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression entry.key is @Nullable", "(Covered) passing @Nullable parameter 'entry.key' where @NonNull is required", "(Covered) passing @Nullable parameter 'entry.key' where @NonNull is required", "(Covered) passing @Nullable parameter 'entry.key' where @NonNull is required", "(Covered) passing @Nullable parameter 'entry.key' where @NonNull is required", "(Covered) passing @Nullable parameter 'entry.key' where @NonNull is required", "dereferenced expression entry.key is @Nullable", "dereferenced expression e.key is @Nullable", "(Covered) passing @Nullable parameter 'b.key' where @NonNull is required", "dereferenced expression entry.key is @Nullable", "dereferenced expression items.get(i).key is @Nullable", "dereferenced expression entry.key is @Nullable", "dereferenced expression e.key is @Nullable", "(Covered) passing @Nullable parameter 'entry.key' where @NonNull is required", "(Covered) passing @Nullable parameter 'entry.key' where @NonNull is required", "(Covered) passing @Nullable parameter 'entry.key' where @NonNull is required"], "jump": 15, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectMap.Entry", "location": "CLASS_FIELD", "param": "key"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/Renderable.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression renderable.material is @Nullable", "dereferenced expression renderable.material is @Nullable", "dereferenced expression renderable.material is @Nullable", "dereferenced expression renderable.material is @Nullable", "dereferenced expression renderable.material is @Nullable", "dereferenced expression renderable.material is @Nullable", "(Covered) passing @Nullable parameter 'arg1.material' where @NonNull is required", "dereferenced expression arg0.material is @Nullable", "(Covered) passing @Nullable parameter 'material' where @NonNull is required", "(Covered) passing @Nullable parameter 'material' where @NonNull is required", "dereferenced expression mat is @Nullable", "(Covered) passing @Nullable parameter 'material = mat' where @NonNull is required", "dereferenced expression o1.material is @Nullable", "dereferenced expression o2.material is @Nullable"], "jump": 15, "pkg": "com.badlogic.gdx.graphics.g3d", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.Renderable", "location": "CLASS_FIELD", "param": "material"}, {"method": "getChildByName(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/XmlReader.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression data is @Nullable", "dereferenced expression tileset.getChildByName(\"image\") is @Nullable", "dereferenced expression tile.getChildByName(\"image\") is @Nullable", "dereferenced expression tileset.getChildByName(\"image\") is @Nullable", "dereferenced expression tile.getChildByName(\"image\") is @Nullable", "dereferenced expression image is @Nullable", "dereferenced expression tilesheets is @Nullable", "dereferenced expression layers is @Nullable", "dereferenced expression tilesheets is @Nullable", "dereferenced expression imageSource is @Nullable", "dereferenced expression element.getChildByName(\"Description\") is @Nullable", "dereferenced expression element.getChildByName(\"ImageSource\") is @Nullable", "dereferenced expression alignment is @Nullable", "dereferenced expression dimensions is @Nullable", "dereferenced expression tileArray is @Nullable", "dereferenced expression frames is @Nullable"], "jump": 14, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.XmlReader.Element", "location": "METHOD_RETURN", "param": ""}, {"method": "get(long)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/Attributes.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression blending is @Nullable", "dereferenced expression ta is @Nullable", "dereferenced expression ta is @Nullable", "dereferenced expression ta is @Nullable", "dereferenced expression ta is @Nullable", "dereferenced expression ta is @Nullable", "dereferenced expression ta is @Nullable", "dereferenced expression dirLights is @Nullable", "dereferenced expression pointLights is @Nullable", "dereferenced expression spotLights is @Nullable", "dereferenced expression attribute is @Nullable", "dereferenced expression attribute is @Nullable", "dereferenced expression attribute is @Nullable", "dereferenced expression colorAttribute is @Nullable"], "jump": 14, "pkg": "com.badlogic.gdx.graphics.g3d", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.Attributes", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/BaseShader.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression shader.context is @Nullable", "dereferenced expression shader.context is @Nullable", "dereferenced expression shader.context is @Nullable", "dereferenced expression shader.context is @Nullable", "dereferenced expression shader.context is @Nullable", "dereferenced expression shader.context is @Nullable", "dereferenced expression shader.context is @Nullable", "dereferenced expression context is @Nullable", "dereferenced expression context is @Nullable", "dereferenced expression context is @Nullable", "dereferenced expression context is @Nullable", "dereferenced expression context is @Nullable", "dereferenced expression context is @Nullable", "dereferenced expression context is @Nullable", "dereferenced expression context is @Nullable"], "jump": 14, "pkg": "com.badlogic.gdx.graphics.g3d.shaders", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.shaders.BaseShader", "location": "CLASS_FIELD", "param": "context"}, {"method": "getVertexAttribute(int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/Mesh.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression posAttrib is @Nullable", "dereferenced expression posAttrib is @Nullable", "dereferenced expression posAttrib is @Nullable", "dereferenced expression posAttr is @Nullable", "dereferenced expression posAttr is @Nullable", "dereferenced expression posAttr is @Nullable", "dereferenced expression getVertexAttribute(usage[i]) is @Nullable", "dereferenced expression mesh.getVertexAttribute(Usage.Position) is @Nullable", "dereferenced expression mesh.getVertexAttribute(Usage.Position) is @Nullable", "dereferenced expression mesh.getVertexAttribute(Usage.Normal) is @Nullable", "dereferenced expression mesh.getVertexAttribute(Usage.Tangent) is @Nullable", "dereferenced expression mesh.getVertexAttribute(Usage.BiNormal) is @Nullable", "dereferenced expression mesh.getVertexAttribute(Usage.Normal) is @Nullable", "dereferenced expression mesh.getVertexAttribute(Usage.ColorPacked) is @Nullable", "dereferenced expression mesh.getVertexAttribute(Usage.TextureCoordinates) is @Nullable"], "jump": 14, "pkg": "com.badlogic.gdx.graphics", "inject": "true", "class": "com.badlogic.gdx.graphics.Mesh", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/Gdx.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression Gdx.gl30 is @Nullable", "dereferenced expression Gdx.gl30 is @Nullable", "dereferenced expression Gdx.gl30 is @Nullable", "dereferenced expression Gdx.gl30 is @Nullable", "dereferenced expression Gdx.gl30 is @Nullable", "dereferenced expression Gdx.gl30 is @Nullable", "dereferenced expression Gdx.gl30 is @Nullable", "dereferenced expression Gdx.gl30 is @Nullable", "dereferenced expression Gdx.gl30 is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression Gdx.gl30 is @Nullable", "dereferenced expression gl is @Nullable", "dereferenced expression Gdx.gl30 is @Nullable", "dereferenced expression Gdx.gl30 is @Nullable"], "jump": 14, "pkg": "com.badlogic.gdx", "inject": "true", "class": "com.badlogic.gdx.Gdx", "location": "CLASS_FIELD", "param": "gl30"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/DynamicsInfluencer.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression positionChannel is @Nullable", "dereferenced expression previousPositionChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression accellerationChannel is @Nullable", "dereferenced expression angularVelocityChannel is @Nullable", "dereferenced expression positionChannel is @Nullable", "dereferenced expression previousPositionChannel is @Nullable", "dereferenced expression accellerationChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression angularVelocityChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression angularVelocityChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable"], "jump": 13, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsInfluencer", "location": "CLASS_FIELD", "param": "rotationChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/DynamicsInfluencer.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression positionChannel is @Nullable", "dereferenced expression previousPositionChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression accellerationChannel is @Nullable", "dereferenced expression angularVelocityChannel is @Nullable", "dereferenced expression positionChannel is @Nullable", "dereferenced expression previousPositionChannel is @Nullable", "dereferenced expression accellerationChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression angularVelocityChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression angularVelocityChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable"], "jump": 13, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsInfluencer", "location": "CLASS_FIELD", "param": "accellerationChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/DynamicsInfluencer.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression positionChannel is @Nullable", "dereferenced expression previousPositionChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression accellerationChannel is @Nullable", "dereferenced expression angularVelocityChannel is @Nullable", "dereferenced expression positionChannel is @Nullable", "dereferenced expression previousPositionChannel is @Nullable", "dereferenced expression accellerationChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression angularVelocityChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression angularVelocityChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable"], "jump": 13, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsInfluencer", "location": "CLASS_FIELD", "param": "angularVelocityChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/BaseShader.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression shader.camera is @Nullable", "dereferenced expression shader.camera is @Nullable", "dereferenced expression shader.camera is @Nullable", "dereferenced expression shader.camera is @Nullable", "dereferenced expression shader.camera is @Nullable", "dereferenced expression shader.camera is @Nullable", "dereferenced expression shader.camera is @Nullable", "dereferenced expression shader.camera is @Nullable", "dereferenced expression shader.camera is @Nullable", "dereferenced expression shader.camera is @Nullable", "dereferenced expression shader.camera is @Nullable", "dereferenced expression shader.camera is @Nullable", "dereferenced expression shader.camera is @Nullable", "dereferenced expression shader.camera is @Nullable"], "jump": 13, "pkg": "com.badlogic.gdx.graphics.g3d.shaders", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.shaders.BaseShader", "location": "CLASS_FIELD", "param": "camera"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/DynamicsInfluencer.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression positionChannel is @Nullable", "dereferenced expression previousPositionChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression accellerationChannel is @Nullable", "dereferenced expression angularVelocityChannel is @Nullable", "dereferenced expression positionChannel is @Nullable", "dereferenced expression previousPositionChannel is @Nullable", "dereferenced expression accellerationChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression angularVelocityChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression angularVelocityChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable"], "jump": 13, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsInfluencer", "location": "CLASS_FIELD", "param": "positionChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/DynamicsInfluencer.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression positionChannel is @Nullable", "dereferenced expression previousPositionChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression accellerationChannel is @Nullable", "dereferenced expression angularVelocityChannel is @Nullable", "dereferenced expression positionChannel is @Nullable", "dereferenced expression previousPositionChannel is @Nullable", "dereferenced expression accellerationChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression angularVelocityChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression angularVelocityChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable"], "jump": 13, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsInfluencer", "location": "CLASS_FIELD", "param": "previousPositionChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression c.padLeft is @Nullable", "dereferenced expression c.padTop is @Nullable", "dereferenced expression c.padRight is @Nullable", "dereferenced expression c.padBottom is @Nullable", "dereferenced expression padTop is @Nullable", "dereferenced expression padLeft is @Nullable", "dereferenced expression padBottom is @Nullable", "dereferenced expression padRight is @Nullable", "dereferenced expression padLeft is @Nullable", "dereferenced expression padRight is @Nullable", "dereferenced expression padTop is @Nullable", "dereferenced expression padBottom is @Nullable"], "jump": 12, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "padRight"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression c.padLeft is @Nullable", "dereferenced expression c.padTop is @Nullable", "dereferenced expression c.padRight is @Nullable", "dereferenced expression c.padBottom is @Nullable", "dereferenced expression padTop is @Nullable", "dereferenced expression padLeft is @Nullable", "dereferenced expression padBottom is @Nullable", "dereferenced expression padRight is @Nullable", "dereferenced expression padLeft is @Nullable", "dereferenced expression padRight is @Nullable", "dereferenced expression padTop is @Nullable", "dereferenced expression padBottom is @Nullable"], "jump": 12, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "padTop"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/compression/lz/BinTree.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression _son is @Nullable", "dereferenced expression _son is @Nullable", "dereferenced expression _son is @Nullable", "dereferenced expression _son is @Nullable", "dereferenced expression _son is @Nullable", "dereferenced expression _son is @Nullable", "dereferenced expression _son is @Nullable", "dereferenced expression _son is @Nullable", "dereferenced expression _son is @Nullable", "dereferenced expression _son is @Nullable", "dereferenced expression _son is @Nullable", "dereferenced expression _son is @Nullable", "(Covered) passing @Nullable parameter '_son' where @NonNull is required"], "jump": 12, "pkg": "com.badlogic.gdx.utils.compression.lz", "inject": "true", "class": "com.badlogic.gdx.utils.compression.lz.BinTree", "location": "CLASS_FIELD", "param": "_son"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression c.padLeft is @Nullable", "dereferenced expression c.padTop is @Nullable", "dereferenced expression c.padRight is @Nullable", "dereferenced expression c.padBottom is @Nullable", "dereferenced expression padTop is @Nullable", "dereferenced expression padLeft is @Nullable", "dereferenced expression padBottom is @Nullable", "dereferenced expression padRight is @Nullable", "dereferenced expression padLeft is @Nullable", "dereferenced expression padRight is @Nullable", "dereferenced expression padTop is @Nullable", "dereferenced expression padBottom is @Nullable"], "jump": 12, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "padBottom"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "errors": ["unboxing of a @Nullable value", "unboxing of a @Nullable value", "unboxing of a @Nullable value", "unboxing of a @Nullable value", "unboxing of a @Nullable value", "unboxing of a @Nullable value", "unboxing of a @Nullable value", "unboxing of a @Nullable value", "unboxing of a @Nullable value", "unboxing of a @Nullable value", "unboxing of a @Nullable value", "unboxing of a @Nullable value", "unboxing of a @Nullable value"], "jump": 12, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "colspan"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression c.padLeft is @Nullable", "dereferenced expression c.padTop is @Nullable", "dereferenced expression c.padRight is @Nullable", "dereferenced expression c.padBottom is @Nullable", "dereferenced expression padTop is @Nullable", "dereferenced expression padLeft is @Nullable", "dereferenced expression padBottom is @Nullable", "dereferenced expression padRight is @Nullable", "dereferenced expression padLeft is @Nullable", "dereferenced expression padRight is @Nullable", "dereferenced expression padTop is @Nullable", "dereferenced expression padBottom is @Nullable"], "jump": 12, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "padLeft"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 77), entries2 (line 77), values1 (line 79), values2 (line 79), keys1 (line 81), keys2 (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression asset.value is @Nullable", "(Covered) passing @Nullable parameter 'entry.value' where @NonNull is required", "dereferenced expression entry.value is @Nullable", "(Covered) passing @Nullable parameter 'entry.value' where @NonNull is required", "(Covered) passing @Nullable parameter 'entry.value' where @NonNull is required", "dereferenced expression entry.value is @Nullable", "dereferenced expression e.value is @Nullable", "(Covered) passing @Nullable parameter 'b.value' where @NonNull is required", "dereferenced expression entry.value is @Nullable", "dereferenced expression e.value is @Nullable", "(Covered) passing @Nullable parameter 'entry.value' where @NonNull is required", "(Covered) passing @Nullable parameter 'entry.value' where @NonNull is required", "(Covered) passing @Nullable parameter 'entry.value' where @NonNull is required"], "jump": 11, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectMap.Entry", "location": "CLASS_FIELD", "param": "value"}, {"method": "findByUsage(int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/VertexAttributes.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field iterable (line 76) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields iterator1 (line 294), iterator2 (line 294) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression CPU_ATTRIBUTES.findByUsage(Usage.Position) is @Nullable", "dereferenced expression CPU_ATTRIBUTES.findByUsage(Usage.ColorUnpacked) is @Nullable", "dereferenced expression CPU_ATTRIBUTES.findByUsage(Usage.TextureCoordinates) is @Nullable", "dereferenced expression CPU_ATTRIBUTES.findByUsage(sizeAndRotationUsage) is @Nullable", "dereferenced expression GPU_ATTRIBUTES.findByUsage(Usage.Position) is @Nullable", "dereferenced expression GPU_ATTRIBUTES.findByUsage(Usage.TextureCoordinates) is @Nullable", "dereferenced expression GPU_ATTRIBUTES.findByUsage(sizeAndRotationUsage) is @Nullable", "dereferenced expression GPU_ATTRIBUTES.findByUsage(Usage.ColorUnpacked) is @Nullable", "dereferenced expression CPU_ATTRIBUTES.findByUsage(Usage.Position) is @Nullable", "dereferenced expression CPU_ATTRIBUTES.findByUsage(Usage.TextureCoordinates) is @Nullable", "dereferenced expression CPU_ATTRIBUTES.findByUsage(Usage.ColorUnpacked) is @Nullable", "dereferenced expression attributes.findByUsage(Usage.Position) is @Nullable"], "jump": 11, "pkg": "com.badlogic.gdx.graphics", "inject": "true", "class": "com.badlogic.gdx.graphics.VertexAttributes", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/net/HttpRequestBuilder.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression httpRequest is @Nullable", "dereferenced expression httpRequest is @Nullable", "dereferenced expression httpRequest is @Nullable", "dereferenced expression httpRequest is @Nullable", "dereferenced expression httpRequest is @Nullable", "dereferenced expression httpRequest is @Nullable", "dereferenced expression httpRequest is @Nullable", "dereferenced expression httpRequest is @Nullable", "dereferenced expression httpRequest is @Nullable", "dereferenced expression httpRequest is @Nullable", "dereferenced expression httpRequest is @Nullable"], "jump": 11, "pkg": "com.badlogic.gdx.net", "inject": "true", "class": "com.badlogic.gdx.net.HttpRequestBuilder", "location": "CLASS_FIELD", "param": "httpRequest"}, {"method": "<T>getChannel(com.badlogic.gdx.graphics.g3d.particles.ParallelArray.ChannelDescriptor)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ParallelArray.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression positionChannel is @Nullable"], "jump": 11, "pkg": "com.badlogic.gdx.graphics.g3d.particles", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.ParallelArray", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/NodeAnimation.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression nanim.node is @Nullable", "dereferenced expression nodeAnim.node is @Nullable", "dereferenced expression nodeAnim.node is @Nullable", "dereferenced expression nodeAnim.node is @Nullable", "dereferenced expression node is @Nullable", "dereferenced expression node is @Nullable", "dereferenced expression node is @Nullable", "(Covered) passing @Nullable parameter 'node' where @NonNull is required", "(Covered) passing @Nullable parameter 'node' where @NonNull is required", "(Covered) passing @Nullable parameter 'node' where @NonNull is required", "dereferenced expression node is @Nullable", "dereferenced expression nodeAnim.node is @Nullable"], "jump": 10, "pkg": "com.badlogic.gdx.graphics.g3d.model", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.NodeAnimation", "location": "CLASS_FIELD", "param": "node"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/SimpleInfluencer.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression valueChannel is @Nullable", "dereferenced expression interpolationChannel is @Nullable", "dereferenced expression valueChannel is @Nullable", "dereferenced expression interpolationChannel is @Nullable", "dereferenced expression valueChannel is @Nullable", "dereferenced expression interpolationChannel is @Nullable", "dereferenced expression lifeChannel is @Nullable", "dereferenced expression valueChannel is @Nullable", "dereferenced expression interpolationChannel is @Nullable", "dereferenced expression valueChannel is @Nullable", "dereferenced expression interpolationChannel is @Nullable"], "jump": 10, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.SimpleInfluencer", "location": "CLASS_FIELD", "param": "interpolationChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field texture (line 65) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression regions.get(i).name is @Nullable", "dereferenced expression region.name is @Nullable", "dereferenced expression region.name is @Nullable", "dereferenced expression regions.get(i).name is @Nullable", "dereferenced expression region.name is @Nullable", "dereferenced expression region.name is @Nullable", "dereferenced expression region.name is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields splits (line 604), pads (line 609) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields splits (line 604), pads (line 609) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 10, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion", "location": "CLASS_FIELD", "param": "name"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/SimpleInfluencer.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression valueChannel is @Nullable", "dereferenced expression interpolationChannel is @Nullable", "dereferenced expression valueChannel is @Nullable", "dereferenced expression interpolationChannel is @Nullable", "dereferenced expression valueChannel is @Nullable", "dereferenced expression interpolationChannel is @Nullable", "dereferenced expression lifeChannel is @Nullable", "dereferenced expression valueChannel is @Nullable", "dereferenced expression interpolationChannel is @Nullable", "dereferenced expression valueChannel is @Nullable", "dereferenced expression interpolationChannel is @Nullable"], "jump": 10, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.SimpleInfluencer", "location": "CLASS_FIELD", "param": "lifeChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SplitPane.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression handle is @Nullable", "dereferenced expression handle is @Nullable", "dereferenced expression style.handle is @Nullable", "dereferenced expression style.handle is @Nullable", "dereferenced expression style.handle is @Nullable", "dereferenced expression style.handle is @Nullable", "dereferenced expression handle is @Nullable", "dereferenced expression handle is @Nullable", "dereferenced expression style.handle is @Nullable", "dereferenced expression style.handle is @Nullable", "dereferenced expression style.handle is @Nullable"], "jump": 10, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.SplitPane.SplitPaneStyle", "location": "CLASS_FIELD", "param": "handle"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/SimpleInfluencer.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression valueChannel is @Nullable", "dereferenced expression interpolationChannel is @Nullable", "dereferenced expression valueChannel is @Nullable", "dereferenced expression interpolationChannel is @Nullable", "dereferenced expression valueChannel is @Nullable", "dereferenced expression interpolationChannel is @Nullable", "dereferenced expression lifeChannel is @Nullable", "dereferenced expression valueChannel is @Nullable", "dereferenced expression interpolationChannel is @Nullable", "dereferenced expression valueChannel is @Nullable", "dereferenced expression interpolationChannel is @Nullable"], "jump": 10, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.SimpleInfluencer", "location": "CLASS_FIELD", "param": "valueChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression c.maxWidth is @Nullable", "dereferenced expression c.maxHeight is @Nullable", "dereferenced expression c.maxWidth is @Nullable", "dereferenced expression c.maxWidth is @Nullable", "dereferenced expression c.maxHeight is @Nullable", "dereferenced expression c.maxWidth is @Nullable", "dereferenced expression c.maxHeight is @Nullable", "dereferenced expression maxWidth is @Nullable", "dereferenced expression maxHeight is @Nullable"], "jump": 9, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "maxWidth"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression c.maxWidth is @Nullable", "dereferenced expression c.maxHeight is @Nullable", "dereferenced expression c.maxWidth is @Nullable", "dereferenced expression c.maxWidth is @Nullable", "dereferenced expression c.maxHeight is @Nullable", "dereferenced expression c.maxWidth is @Nullable", "dereferenced expression c.maxHeight is @Nullable", "dereferenced expression maxWidth is @Nullable", "dereferenced expression maxHeight is @Nullable"], "jump": 9, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "maxHeight"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression c.minWidth is @Nullable", "dereferenced expression c.minHeight is @Nullable", "dereferenced expression c.minWidth is @Nullable", "dereferenced expression c.minWidth is @Nullable", "dereferenced expression c.minHeight is @Nullable", "dereferenced expression c.minWidth is @Nullable", "dereferenced expression c.minHeight is @Nullable", "dereferenced expression minWidth is @Nullable", "dereferenced expression minHeight is @Nullable"], "jump": 9, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "minHeight"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression c.spaceLeft is @Nullable", "dereferenced expression c.spaceTop is @Nullable", "dereferenced expression above.spaceBottom is @Nullable", "dereferenced expression c.spaceRight is @Nullable", "dereferenced expression c.spaceBottom is @Nullable", "dereferenced expression spaceTop is @Nullable", "dereferenced expression spaceLeft is @Nullable", "dereferenced expression spaceBottom is @Nullable", "dereferenced expression spaceRight is @Nullable"], "jump": 9, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "spaceBottom"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression c.spaceLeft is @Nullable", "dereferenced expression c.spaceTop is @Nullable", "dereferenced expression above.spaceBottom is @Nullable", "dereferenced expression c.spaceRight is @Nullable", "dereferenced expression c.spaceBottom is @Nullable", "dereferenced expression spaceTop is @Nullable", "dereferenced expression spaceLeft is @Nullable", "dereferenced expression spaceBottom is @Nullable", "dereferenced expression spaceRight is @Nullable"], "jump": 9, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "spaceRight"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression c.spaceLeft is @Nullable", "dereferenced expression c.spaceTop is @Nullable", "dereferenced expression above.spaceBottom is @Nullable", "dereferenced expression c.spaceRight is @Nullable", "dereferenced expression c.spaceBottom is @Nullable", "dereferenced expression spaceTop is @Nullable", "dereferenced expression spaceLeft is @Nullable", "dereferenced expression spaceBottom is @Nullable", "dereferenced expression spaceRight is @Nullable"], "jump": 9, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "spaceTop"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression c.spaceLeft is @Nullable", "dereferenced expression c.spaceTop is @Nullable", "dereferenced expression above.spaceBottom is @Nullable", "dereferenced expression c.spaceRight is @Nullable", "dereferenced expression c.spaceBottom is @Nullable", "dereferenced expression spaceTop is @Nullable", "dereferenced expression spaceLeft is @Nullable", "dereferenced expression spaceBottom is @Nullable", "dereferenced expression spaceRight is @Nullable"], "jump": 9, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "spaceLeft"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression c.minWidth is @Nullable", "dereferenced expression c.minHeight is @Nullable", "dereferenced expression c.minWidth is @Nullable", "dereferenced expression c.minWidth is @Nullable", "dereferenced expression c.minHeight is @Nullable", "dereferenced expression c.minWidth is @Nullable", "dereferenced expression c.minHeight is @Nullable", "dereferenced expression minWidth is @Nullable", "dereferenced expression minHeight is @Nullable"], "jump": 9, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "minWidth"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/renderers/BillboardControllerRenderData.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression scaleChannel is @Nullable", "dereferenced expression regionChannel is @Nullable", "dereferenced expression colorChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression scaleChannel is @Nullable", "dereferenced expression regionChannel is @Nullable", "dereferenced expression colorChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression scaleChannel is @Nullable", "dereferenced expression regionChannel is @Nullable", "dereferenced expression colorChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable"], "jump": 8, "pkg": "com.badlogic.gdx.graphics.g3d.particles.renderers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.renderers.BillboardControllerRenderData", "location": "CLASS_FIELD", "param": "rotationChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/renderers/BillboardControllerRenderData.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression scaleChannel is @Nullable", "dereferenced expression regionChannel is @Nullable", "dereferenced expression colorChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression scaleChannel is @Nullable", "dereferenced expression regionChannel is @Nullable", "dereferenced expression colorChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression scaleChannel is @Nullable", "dereferenced expression regionChannel is @Nullable", "dereferenced expression colorChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable"], "jump": 8, "pkg": "com.badlogic.gdx.graphics.g3d.particles.renderers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.renderers.BillboardControllerRenderData", "location": "CLASS_FIELD", "param": "scaleChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/renderers/BillboardControllerRenderData.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression scaleChannel is @Nullable", "dereferenced expression regionChannel is @Nullable", "dereferenced expression colorChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression scaleChannel is @Nullable", "dereferenced expression regionChannel is @Nullable", "dereferenced expression colorChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression scaleChannel is @Nullable", "dereferenced expression regionChannel is @Nullable", "dereferenced expression colorChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable"], "jump": 8, "pkg": "com.badlogic.gdx.graphics.g3d.particles.renderers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.renderers.BillboardControllerRenderData", "location": "CLASS_FIELD", "param": "colorChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/renderers/BillboardControllerRenderData.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression scaleChannel is @Nullable", "dereferenced expression regionChannel is @Nullable", "dereferenced expression colorChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression scaleChannel is @Nullable", "dereferenced expression regionChannel is @Nullable", "dereferenced expression colorChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression scaleChannel is @Nullable", "dereferenced expression regionChannel is @Nullable", "dereferenced expression colorChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable"], "jump": 8, "pkg": "com.badlogic.gdx.graphics.g3d.particles.renderers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.renderers.BillboardControllerRenderData", "location": "CLASS_FIELD", "param": "regionChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ResourceData.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field resource (line 176) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resources (line 70) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'data.filename' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull field type (line 130) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'filename' where @NonNull is required", "dereferenced expression data.filename is @Nullable", "(Covered) passing @Nullable parameter 'data.filename' where @NonNull is required", "(Covered) passing @Nullable parameter 'assetData.filename' where @NonNull is required", "(Covered) passing @Nullable parameter 'assetData.filename' where @NonNull is required", "(Covered) passing @Nullable parameter 'assetData.filename' where @NonNull is required", "(Covered) passing @Nullable parameter 'assetData.filename' where @NonNull is required"], "jump": 8, "pkg": "com.badlogic.gdx.graphics.g3d.particles", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.ResourceData.AssetData", "location": "CLASS_FIELD", "param": "filename"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/files/FileHandle.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field file (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'type' where @NonNull is required", "(Covered) passing @Nullable parameter 'type' where @NonNull is required", "(Covered) passing @Nullable parameter 'type' where @NonNull is required", "(Covered) passing @Nullable parameter 'type' where @NonNull is required", "switch expression type is @Nullable", "switch expression type is @Nullable", "dereferenced expression type is @Nullable"], "jump": 8, "pkg": "com.badlogic.gdx.files", "inject": "true", "class": "com.badlogic.gdx.files.FileHandle", "location": "CLASS_FIELD", "param": "type"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ActorGestureListener.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field event (line 42) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression actor is @Nullable", "dereferenced expression actor is @Nullable", "dereferenced expression actor is @Nullable", "dereferenced expression actor is @Nullable", "dereferenced expression actor is @Nullable", "dereferenced expression actor is @Nullable"], "jump": 7, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener", "location": "CLASS_FIELD", "param": "actor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression c.prefWidth is @Nullable", "dereferenced expression c.prefHeight is @Nullable", "dereferenced expression c.prefWidth is @Nullable", "dereferenced expression c.prefWidth is @Nullable", "dereferenced expression c.prefHeight is @Nullable", "dereferenced expression prefWidth is @Nullable", "dereferenced expression prefHeight is @Nullable"], "jump": 7, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "prefWidth"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ActorGestureListener.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field event (line 42) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression actor is @Nullable", "dereferenced expression actor is @Nullable", "dereferenced expression actor is @Nullable", "dereferenced expression actor is @Nullable", "dereferenced expression actor is @Nullable", "dereferenced expression actor is @Nullable"], "jump": 7, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener", "location": "CLASS_FIELD", "param": "touchDownTarget"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression c.prefWidth is @Nullable", "dereferenced expression c.prefHeight is @Nullable", "dereferenced expression c.prefWidth is @Nullable", "dereferenced expression c.prefWidth is @Nullable", "dereferenced expression c.prefHeight is @Nullable", "dereferenced expression prefWidth is @Nullable", "dereferenced expression prefHeight is @Nullable"], "jump": 7, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "prefHeight"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/renderers/ParticleControllerRenderData.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression data.controller is @Nullable", "dereferenced expression data.controller is @Nullable", "dereferenced expression data.controller is @Nullable", "dereferenced expression data.controller is @Nullable", "dereferenced expression data.controller is @Nullable", "dereferenced expression data.controller is @Nullable", "dereferenced expression data.controller is @Nullable", "dereferenced expression data.controller is @Nullable"], "jump": 7, "pkg": "com.badlogic.gdx.graphics.g3d.particles.renderers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.renderers.ParticleControllerRenderData", "location": "CLASS_FIELD", "param": "controller"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/compression/lz/InWindow.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression _bufferBase is @Nullable", "dereferenced expression _bufferBase is @Nullable", "dereferenced expression _bufferBase is @Nullable", "dereferenced expression _bufferBase is @Nullable", "dereferenced expression _bufferBase is @Nullable", "dereferenced expression _bufferBase is @Nullable", "dereferenced expression _bufferBase is @Nullable", "dereferenced expression _bufferBase is @Nullable"], "jump": 7, "pkg": "com.badlogic.gdx.utils.compression.lz", "inject": "true", "class": "com.badlogic.gdx.utils.compression.lz.InWindow", "location": "CLASS_FIELD", "param": "_bufferBase"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ActorGestureListener.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields actor (line 45), touchDownTarget (line 45) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'event' where @NonNull is required", "(Covered) passing @Nullable parameter 'event' where @NonNull is required", "(Covered) passing @Nullable parameter 'event' where @NonNull is required", "(Covered) passing @Nullable parameter 'event' where @NonNull is required", "(Covered) passing @Nullable parameter 'event' where @NonNull is required", "(Covered) passing @Nullable parameter 'event' where @NonNull is required"], "jump": 6, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener", "location": "CLASS_FIELD", "param": "event"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextButton.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'style.fontColor' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull fields font (line 161), checkedFontColor (line 167), checkedDownFontColor (line 167), checkedOverFontColor (line 167), checkedFocusedFontColor (line 167) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields checkedFontColor (line 167), checkedDownFontColor (line 167), checkedOverFontColor (line 167), checkedFocusedFontColor (line 167) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields checkedFontColor (line 167), checkedDownFontColor (line 167), checkedOverFontColor (line 167), checkedFocusedFontColor (line 167) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'style.fontColor' where @NonNull is required"], "jump": 5, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TextButton.TextButtonStyle", "location": "CLASS_FIELD", "param": "downFontColor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ParticleController.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field name (line 52) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression particleChannels is @Nullable", "dereferenced expression controller.particleChannels is @Nullable", "dereferenced expression controller.particleChannels is @Nullable", "dereferenced expression controller.particleChannels is @Nullable", "dereferenced expression controller.particleChannels is @Nullable"], "jump": 5, "pkg": "com.badlogic.gdx.graphics.g3d.particles", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.ParticleController", "location": "CLASS_FIELD", "param": "particleChannels"}, {"method": "obtain(com.badlogic.gdx.graphics.g3d.model.Animation,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController.AnimationListener)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/AnimationController.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields queued (line 161), previous (line 171) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields listener (line 74), animation (line 79) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'obtain(anim, offset, duration, loopCount, speed, listener)' where @NonNull is required", "(Covered) passing @Nullable parameter 'obtain(anim, offset, duration, loopCount, speed, listener)' where @NonNull is required", "(Covered) passing @Nullable parameter 'obtain(anim, offset, duration, loopCount, speed, listener)' where @NonNull is required", "(Covered) passing @Nullable parameter 'obtain(anim, offset, duration, loopCount, speed, listener)' where @NonNull is required"], "jump": 5, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.AnimationController", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'actor' where @NonNull is required"], "jump": 5, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Container", "location": "CLASS_FIELD", "param": "actor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression font is @Nullable", "dereferenced expression font is @Nullable", "dereferenced expression font is @Nullable", "dereferenced expression font is @Nullable", "(Covered) passing @Nullable parameter 'style.font' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull field previousScrollFocus (line 474) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields overFontColor (line 645), disabledFontColor (line 645), background (line 648), scrollStyle (line 651), listStyle (line 653), backgroundOver (line 655), backgroundOpen (line 655), backgroundDisabled (line 655) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields overFontColor (line 645), disabledFontColor (line 645), backgroundOver (line 655), backgroundOpen (line 655), backgroundDisabled (line 655) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields overFontColor (line 645), disabledFontColor (line 645) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 5, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.SelectBox.SelectBoxStyle", "location": "CLASS_FIELD", "param": "font"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextButton.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'style.fontColor' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull fields font (line 161), checkedFontColor (line 167), checkedDownFontColor (line 167), checkedOverFontColor (line 167), checkedFocusedFontColor (line 167) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields checkedFontColor (line 167), checkedDownFontColor (line 167), checkedOverFontColor (line 167), checkedFocusedFontColor (line 167) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields checkedFontColor (line 167), checkedDownFontColor (line 167), checkedOverFontColor (line 167), checkedFocusedFontColor (line 167) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'style.fontColor' where @NonNull is required"], "jump": 5, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TextButton.TextButtonStyle", "location": "CLASS_FIELD", "param": "focusedFontColor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/TextureDescriptor.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression lights.shadowMap.getDepthMap().texture is @Nullable", "dereferenced expression texture is @Nullable", "dereferenced expression texture is @Nullable"], "jump": 5, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor", "location": "CLASS_FIELD", "param": "texture"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextButton.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'style.fontColor' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull fields font (line 161), checkedFontColor (line 167), checkedDownFontColor (line 167), checkedOverFontColor (line 167), checkedFocusedFontColor (line 167) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields checkedFontColor (line 167), checkedDownFontColor (line 167), checkedOverFontColor (line 167), checkedFocusedFontColor (line 167) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields checkedFontColor (line 167), checkedDownFontColor (line 167), checkedOverFontColor (line 167), checkedFocusedFontColor (line 167) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'style.fontColor' where @NonNull is required"], "jump": 5, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TextButton.TextButtonStyle", "location": "CLASS_FIELD", "param": "fontColor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 5, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.JsonValue", "location": "CLASS_FIELD", "param": "prev"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextButton.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'style.fontColor' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull fields font (line 161), checkedFontColor (line 167), checkedDownFontColor (line 167), checkedOverFontColor (line 167), checkedFocusedFontColor (line 167) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields checkedFontColor (line 167), checkedDownFontColor (line 167), checkedOverFontColor (line 167), checkedFocusedFontColor (line 167) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields checkedFontColor (line 167), checkedDownFontColor (line 167), checkedOverFontColor (line 167), checkedFocusedFontColor (line 167) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'style.fontColor' where @NonNull is required"], "jump": 5, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TextButton.TextButtonStyle", "location": "CLASS_FIELD", "param": "disabledFontColor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ResourceData.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field resource (line 176) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resources (line 70) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'data.type' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull field filename (line 127) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression type is @Nullable", "dereferenced expression data.type is @Nullable", "(Covered) passing @Nullable parameter 'data.type' where @NonNull is required", "(Covered) passing @Nullable parameter 'assetData.type' where @NonNull is required"], "jump": 5, "pkg": "com.badlogic.gdx.graphics.g3d.particles", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.ResourceData.AssetData", "location": "CLASS_FIELD", "param": "type"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/renderers/ParticleControllerRenderData.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression data.positionChannel is @Nullable", "dereferenced expression positionChannel is @Nullable", "dereferenced expression positionChannel is @Nullable", "dereferenced expression positionChannel is @Nullable", "dereferenced expression positionChannel is @Nullable", "dereferenced expression renderData.positionChannel is @Nullable"], "jump": 5, "pkg": "com.badlogic.gdx.graphics.g3d.particles.renderers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.renderers.ParticleControllerRenderData", "location": "CLASS_FIELD", "param": "positionChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/AnimationController.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields queued (line 162), previous (line 172) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field listener (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'anim.animation' where @NonNull is required", "(Covered) passing @Nullable parameter 'previous.animation' where @NonNull is required", "(Covered) passing @Nullable parameter 'previous.animation' where @NonNull is required", "(Covered) passing @Nullable parameter 'current.animation' where @NonNull is required", "(Covered) passing @Nullable parameter 'previous.animation' where @NonNull is required"], "jump": 5, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.AnimationController.AnimationDesc", "location": "CLASS_FIELD", "param": "animation"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/TimSort.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field c (line 67) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression a is @Nullable", "dereferenced expression a is @Nullable", "dereferenced expression a is @Nullable", "dereferenced expression a is @Nullable", "dereferenced expression a is @Nullable", "dereferenced expression a is @Nullable"], "jump": 5, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.TimSort", "location": "CLASS_FIELD", "param": "a"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/input/RemoteSender.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression out is @Nullable", "dereferenced expression out is @Nullable", "dereferenced expression out is @Nullable", "dereferenced expression out is @Nullable", "dereferenced expression out is @Nullable", "dereferenced expression out is @Nullable", "dereferenced expression out is @Nullable"], "jump": 5, "pkg": "com.badlogic.gdx.input", "inject": "true", "class": "com.badlogic.gdx.input.RemoteSender", "location": "CLASS_FIELD", "param": "out"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/DynamicsModifier.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 453) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 453) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 46), accellerationChannel (line 46) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 46), accellerationChannel (line 46) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression strengthChannel is @Nullable", "(Covered) initializer method does not guarantee @NonNull field angularChannel (line 131) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field angularChannel (line 131) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field rotationalVelocity2dChannel (line 202) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field rotationalVelocity2dChannel (line 202) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression strengthChannel is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 232), rotationalForceChannel (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 232), rotationalForceChannel (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression strengthChannel is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields accelerationChannel (line 290), positionChannel (line 292) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields accelerationChannel (line 290), positionChannel (line 292) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression strengthChannel is @Nullable", "(Covered) initializer method does not guarantee @NonNull field directionalVelocityChannel (line 335) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field directionalVelocityChannel (line 335) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression strengthChannel is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields directionalVelocityChannel (line 374), positionChannel (line 374) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields directionalVelocityChannel (line 374), positionChannel (line 374) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression strengthChannel is @Nullable", "(Covered) initializer method does not guarantee @NonNull field accelerationChannel (line 418) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field accelerationChannel (line 418) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression strengthChannel is @Nullable"], "jump": 5, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier.Strength", "location": "CLASS_FIELD", "param": "strengthChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/ParticleControllerInfluencer.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression particleControllerChannel is @Nullable", "dereferenced expression particleControllerChannel is @Nullable", "dereferenced expression particleControllerChannel is @Nullable", "dereferenced expression particleControllerChannel is @Nullable", "dereferenced expression particleControllerChannel is @Nullable", "dereferenced expression particleControllerChannel is @Nullable", "dereferenced expression particleControllerChannel is @Nullable"], "jump": 5, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerInfluencer", "location": "CLASS_FIELD", "param": "particleControllerChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextButton.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'style.fontColor' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull fields font (line 161), checkedFontColor (line 167), checkedDownFontColor (line 167), checkedOverFontColor (line 167), checkedFocusedFontColor (line 167) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields checkedFontColor (line 167), checkedDownFontColor (line 167), checkedOverFontColor (line 167), checkedFocusedFontColor (line 167) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields checkedFontColor (line 167), checkedDownFontColor (line 167), checkedOverFontColor (line 167), checkedFocusedFontColor (line 167) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'style.fontColor' where @NonNull is required"], "jump": 5, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TextButton.TextButtonStyle", "location": "CLASS_FIELD", "param": "overFontColor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ArrayMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 46), entries2 (line 46), values1 (line 48), values2 (line 48) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields entries1 (line 46), entries2 (line 46), values1 (line 48), values2 (line 48) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression keys2 is @Nullable", "dereferenced expression keys2 is @Nullable", "dereferenced expression keys2 is @Nullable"], "jump": 4, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ArrayMap", "location": "CLASS_FIELD", "param": "keys2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 77), entries2 (line 77), keys1 (line 82), keys2 (line 82) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression values2 is @Nullable", "dereferenced expression values2 is @Nullable", "dereferenced expression values2 is @Nullable", "dereferenced expression values2 is @Nullable"], "jump": 4, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectMap", "location": "CLASS_FIELD", "param": "values2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ParticleSorter.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression particleIndices is @Nullable", "dereferenced expression particleOffsets is @Nullable", "dereferenced expression particleIndices is @Nullable", "dereferenced expression particleIndices is @Nullable", "dereferenced expression particleIndices is @Nullable"], "jump": 4, "pkg": "com.badlogic.gdx.graphics.g3d.particles", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.ParticleSorter.Distance", "location": "CLASS_FIELD", "param": "particleIndices"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ArrayMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields values1 (line 49), values2 (line 49), keys1 (line 51), keys2 (line 51) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields values1 (line 49), values2 (line 49), keys1 (line 51), keys2 (line 51) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression entries2 is @Nullable", "dereferenced expression entries2 is @Nullable", "dereferenced expression entries2 is @Nullable"], "jump": 4, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ArrayMap", "location": "CLASS_FIELD", "param": "entries2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/compression/lzma/Encoder.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression _matchFinder is @Nullable", "dereferenced expression _matchFinder is @Nullable", "dereferenced expression _matchFinder is @Nullable", "dereferenced expression _matchFinder is @Nullable", "dereferenced expression _matchFinder is @Nullable", "dereferenced expression _matchFinder is @Nullable"], "jump": 4, "pkg": "com.badlogic.gdx.utils.compression.lzma", "inject": "true", "class": "com.badlogic.gdx.utils.compression.lzma.Encoder", "location": "CLASS_FIELD", "param": "_matchFinder"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ParticleSorter.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression particleIndices is @Nullable", "dereferenced expression particleOffsets is @Nullable", "dereferenced expression particleIndices is @Nullable", "dereferenced expression particleIndices is @Nullable", "dereferenced expression particleIndices is @Nullable"], "jump": 4, "pkg": "com.badlogic.gdx.graphics.g3d.particles", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.ParticleSorter.Distance", "location": "CLASS_FIELD", "param": "particleOffsets"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ArrayMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 46), entries2 (line 46), values1 (line 48), values2 (line 48) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields entries1 (line 46), entries2 (line 46), values1 (line 48), values2 (line 48) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression keys2 is @Nullable", "dereferenced expression keys2 is @Nullable", "dereferenced expression keys2 is @Nullable"], "jump": 4, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ArrayMap", "location": "CLASS_FIELD", "param": "keys1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/DynamicsModifier.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 46), accellerationChannel (line 46) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 46), accellerationChannel (line 46) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field strengthChannel (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field strengthChannel (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field angularChannel (line 130) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field angularChannel (line 130) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field rotationalVelocity2dChannel (line 201) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field rotationalVelocity2dChannel (line 201) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression lifeChannel is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 231), rotationalForceChannel (line 231) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 231), rotationalForceChannel (line 231) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression lifeChannel is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields accelerationChannel (line 289), positionChannel (line 291) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields accelerationChannel (line 289), positionChannel (line 291) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression lifeChannel is @Nullable", "(Covered) initializer method does not guarantee @NonNull field directionalVelocityChannel (line 334) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field directionalVelocityChannel (line 334) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression lifeChannel is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields directionalVelocityChannel (line 373), positionChannel (line 373) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields directionalVelocityChannel (line 373), positionChannel (line 373) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression lifeChannel is @Nullable", "(Covered) initializer method does not guarantee @NonNull field accelerationChannel (line 417) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field accelerationChannel (line 417) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression lifeChannel is @Nullable"], "jump": 4, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier", "location": "CLASS_FIELD", "param": "lifeChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 77), entries2 (line 77), values1 (line 79), values2 (line 79) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression keys2 is @Nullable", "dereferenced expression keys2 is @Nullable", "dereferenced expression keys2 is @Nullable", "dereferenced expression keys2 is @Nullable"], "jump": 4, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectMap", "location": "CLASS_FIELD", "param": "keys1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression style.font is @Nullable", "dereferenced expression style.font is @Nullable", "dereferenced expression style.font is @Nullable", "dereferenced expression style.font is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 434), background (line 437) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field fontColor (line 434) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field background (line 437) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 4, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Label.LabelStyle", "location": "CLASS_FIELD", "param": "font"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 77), entries2 (line 77), keys1 (line 82), keys2 (line 82) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression values2 is @Nullable", "dereferenced expression values2 is @Nullable", "dereferenced expression values2 is @Nullable", "dereferenced expression values2 is @Nullable"], "jump": 4, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectMap", "location": "CLASS_FIELD", "param": "values1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ComparableTimSort.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression a is @Nullable", "dereferenced expression a is @Nullable", "dereferenced expression a is @Nullable", "dereferenced expression a is @Nullable", "dereferenced expression a is @Nullable", "dereferenced expression a is @Nullable"], "jump": 4, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ComparableTimSort", "location": "CLASS_FIELD", "param": "a"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ArrayMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 46), entries2 (line 46), keys1 (line 51), keys2 (line 51) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields entries1 (line 46), entries2 (line 46), keys1 (line 51), keys2 (line 51) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression values2 is @Nullable", "dereferenced expression values2 is @Nullable", "dereferenced expression values2 is @Nullable"], "jump": 4, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ArrayMap", "location": "CLASS_FIELD", "param": "values2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextButton.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'style.font' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 164), downFontColor (line 164), overFontColor (line 164), focusedFontColor (line 164), disabledFontColor (line 164), checkedFontColor (line 167), checkedDownFontColor (line 167), checkedOverFontColor (line 167), checkedFocusedFontColor (line 167) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 164), downFontColor (line 164), overFontColor (line 164), focusedFontColor (line 164), disabledFontColor (line 164), checkedFontColor (line 167), checkedDownFontColor (line 167), checkedOverFontColor (line 167), checkedFocusedFontColor (line 167) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 164), downFontColor (line 164), overFontColor (line 164), focusedFontColor (line 164), disabledFontColor (line 164), checkedFontColor (line 167), checkedDownFontColor (line 167), checkedOverFontColor (line 167), checkedFocusedFontColor (line 167) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'style.font' where @NonNull is required"], "jump": 4, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TextButton.TextButtonStyle", "location": "CLASS_FIELD", "param": "font"}, {"method": "remove(K)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 77), entries2 (line 77), values1 (line 79), values2 (line 79), keys1 (line 81), keys2 (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'super.remove(before)' where @NonNull is required", "(Covered) passing @Nullable parameter 'super.remove(keys.get(index))' where @NonNull is required", "(Covered) passing @Nullable parameter 'dragListener' where @NonNull is required"], "jump": 4, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectMap", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ArrayMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 46), entries2 (line 46), keys1 (line 51), keys2 (line 51) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields entries1 (line 46), entries2 (line 46), keys1 (line 51), keys2 (line 51) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression values2 is @Nullable", "dereferenced expression values2 is @Nullable", "dereferenced expression values2 is @Nullable"], "jump": 4, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ArrayMap", "location": "CLASS_FIELD", "param": "values1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields values1 (line 80), values2 (line 80), keys1 (line 82), keys2 (line 82) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression entries2 is @Nullable", "dereferenced expression entries2 is @Nullable", "dereferenced expression entries2 is @Nullable", "dereferenced expression entries2 is @Nullable"], "jump": 4, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectMap", "location": "CLASS_FIELD", "param": "entries2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'style.listStyle' where @NonNull is required", "dereferenced expression listStyle is @Nullable", "(Covered) initializer method does not guarantee @NonNull field previousScrollFocus (line 474) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'selectBox.style.listStyle' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull fields font (line 640), overFontColor (line 644), disabledFontColor (line 644), background (line 647), scrollStyle (line 650), backgroundOver (line 655), backgroundOpen (line 655), backgroundDisabled (line 655) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields overFontColor (line 644), disabledFontColor (line 644), backgroundOver (line 655), backgroundOpen (line 655), backgroundDisabled (line 655) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields overFontColor (line 644), disabledFontColor (line 644) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'style.listStyle' where @NonNull is required"], "jump": 4, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.SelectBox.SelectBoxStyle", "location": "CLASS_FIELD", "param": "listStyle"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'style.scrollStyle' where @NonNull is required", "dereferenced expression scrollStyle is @Nullable", "dereferenced expression style.scrollStyle is @Nullable", "(Covered) initializer method does not guarantee @NonNull field previousScrollFocus (line 474) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields font (line 640), overFontColor (line 644), disabledFontColor (line 644), background (line 647), listStyle (line 653), backgroundOver (line 655), backgroundOpen (line 655), backgroundDisabled (line 655) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields overFontColor (line 644), disabledFontColor (line 644), backgroundOver (line 655), backgroundOpen (line 655), backgroundDisabled (line 655) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields overFontColor (line 644), disabledFontColor (line 644) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'style.scrollStyle' where @NonNull is required"], "jump": 4, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.SelectBox.SelectBoxStyle", "location": "CLASS_FIELD", "param": "scrollStyle"}, {"method": "keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/InputListener.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) parameter event is @NonNull, but parameter in superclass method com.badlogic.gdx.scenes.scene2d.InputListener.keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) is @Nullable", "(Covered) parameter event is @NonNull, but parameter in superclass method com.badlogic.gdx.scenes.scene2d.InputListener.keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) is @Nullable", "(Covered) parameter event is @NonNull, but parameter in superclass method com.badlogic.gdx.scenes.scene2d.InputListener.keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) is @Nullable", "(Covered) parameter event is @NonNull, but parameter in superclass method com.badlogic.gdx.scenes.scene2d.InputListener.keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) is @Nullable", "(Covered) parameter event is @NonNull, but parameter in superclass method com.badlogic.gdx.scenes.scene2d.InputListener.keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int) is @Nullable"], "jump": 4, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.InputListener", "location": "METHOD_PARAM", "param": "event"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields values1 (line 80), values2 (line 80), keys1 (line 82), keys2 (line 82) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression entries2 is @Nullable", "dereferenced expression entries2 is @Nullable", "dereferenced expression entries2 is @Nullable", "dereferenced expression entries2 is @Nullable"], "jump": 4, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectMap", "location": "CLASS_FIELD", "param": "entries1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ArrayMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields values1 (line 49), values2 (line 49), keys1 (line 51), keys2 (line 51) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields values1 (line 49), values2 (line 49), keys1 (line 51), keys2 (line 51) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression entries2 is @Nullable", "dereferenced expression entries2 is @Nullable", "dereferenced expression entries2 is @Nullable"], "jump": 4, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ArrayMap", "location": "CLASS_FIELD", "param": "entries1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteCache.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression cache.counts is @Nullable", "dereferenced expression cache.counts is @Nullable", "dereferenced expression counts is @Nullable", "dereferenced expression counts is @Nullable", "(Covered) initializer method does not guarantee @NonNull field textures (line 957) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 4, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.SpriteCache.Cache", "location": "CLASS_FIELD", "param": "counts"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/compression/lz/BinTree.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression _hash is @Nullable", "dereferenced expression _hash is @Nullable", "dereferenced expression _hash is @Nullable", "dereferenced expression _hash is @Nullable", "(Covered) passing @Nullable parameter '_hash' where @NonNull is required"], "jump": 4, "pkg": "com.badlogic.gdx.utils.compression.lz", "inject": "true", "class": "com.badlogic.gdx.utils.compression.lz.BinTree", "location": "CLASS_FIELD", "param": "_hash"}, {"method": "writeValue(java.lang.Object,java.lang.Class,java.lang.Class)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'knownType' where @NonNull is required", "(Covered) passing @Nullable parameter 'knownType' where @NonNull is required", "(Covered) passing @Nullable parameter 'knownType' where @NonNull is required", "(Covered) passing @Nullable parameter 'knownType' where @NonNull is required"], "jump": 4, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Json", "location": "METHOD_PARAM", "param": "knownType"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 77), entries2 (line 77), values1 (line 79), values2 (line 79) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression keys2 is @Nullable", "dereferenced expression keys2 is @Nullable", "dereferenced expression keys2 is @Nullable", "dereferenced expression keys2 is @Nullable"], "jump": 4, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectMap", "location": "CLASS_FIELD", "param": "keys2"}, {"method": "<T>getAssetFileName(T)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/AssetManager.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'manager.getAssetFileName(getTexture())' where @NonNull is required", "(Covered) passing @Nullable parameter 'manager.getAssetFileName(texture)' where @NonNull is required", "(Covered) passing @Nullable parameter 'manager.getAssetFileName(model)' where @NonNull is required", "(Covered) passing @Nullable parameter 'manager.getAssetFileName(model)' where @NonNull is required", "(Covered) passing @Nullable parameter 'manager.getAssetFileName(effect)' where @NonNull is required"], "jump": 4, "pkg": "com.badlogic.gdx.assets", "inject": "true", "class": "com.badlogic.gdx.assets.AssetManager", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelTexture.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'tex.fileName' where @NonNull is required", "(Covered) passing @Nullable parameter 'tex.fileName' where @NonNull is required", "(Covered) passing @Nullable parameter 'tex.fileName' where @NonNull is required", "(Covered) passing @Nullable parameter 'tex.fileName' where @NonNull is required", "(Covered) passing @Nullable parameter 'modelTexture.fileName' where @NonNull is required"], "jump": 4, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelTexture", "location": "CLASS_FIELD", "param": "fileName"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Queue.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field iterable (line 53) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field iterable (line 53) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression iterator2 is @Nullable", "dereferenced expression iterator2 is @Nullable", "dereferenced expression iterator2 is @Nullable"], "jump": 3, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Queue.QueueIterable", "location": "CLASS_FIELD", "param": "iterator2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression outputType is @Nullable", "dereferenced expression outputType is @Nullable", "dereferenced expression outputType is @Nullable", "dereferenced expression outputType is @Nullable"], "jump": 3, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.JsonValue.PrettyPrintSettings", "location": "CLASS_FIELD", "param": "outputType"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field mouseOverActor (line 98) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'focus.target' where @NonNull is required", "(Covered) passing @Nullable parameter 'focus.listenerActor' where @NonNull is required", "(Covered) passing @Nullable parameter 'focus.target' where @NonNull is required", "(Covered) passing @Nullable parameter 'focus.listenerActor' where @NonNull is required", "(Covered) passing @Nullable parameter 'focus.target' where @NonNull is required", "(Covered) passing @Nullable parameter 'focus.target' where @NonNull is required", "(Covered) passing @Nullable parameter 'focus.listenerActor' where @NonNull is required"], "jump": 3, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus", "location": "CLASS_FIELD", "param": "listenerActor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/VertexAttributes.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field iterable (line 76) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression iterator2 is @Nullable", "dereferenced expression iterator2 is @Nullable", "dereferenced expression iterator2 is @Nullable"], "jump": 3, "pkg": "com.badlogic.gdx.graphics", "inject": "true", "class": "com.badlogic.gdx.graphics.VertexAttributes.ReadonlyIterable", "location": "CLASS_FIELD", "param": "iterator1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Array.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields iterable (line 45), predicateIterable (line 47) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields iterable (line 45), predicateIterable (line 47) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression iterator2 is @Nullable", "dereferenced expression iterator2 is @Nullable", "dereferenced expression iterator2 is @Nullable"], "jump": 3, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Array.ArrayIterable", "location": "CLASS_FIELD", "param": "iterator1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Array.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields iterable (line 45), predicateIterable (line 47) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields iterable (line 45), predicateIterable (line 47) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression iterator2 is @Nullable", "dereferenced expression iterator2 is @Nullable", "dereferenced expression iterator2 is @Nullable"], "jump": 3, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Array.ArrayIterable", "location": "CLASS_FIELD", "param": "iterator2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Queue.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field iterable (line 53) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field iterable (line 53) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression iterator2 is @Nullable", "dereferenced expression iterator2 is @Nullable", "dereferenced expression iterator2 is @Nullable"], "jump": 3, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Queue.QueueIterable", "location": "CLASS_FIELD", "param": "iterator1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/List.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field cullingArea (line 60) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression selectedDrawable is @Nullable", "dereferenced expression selectedDrawable is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields font (line 489), down (line 498), over (line 498), background (line 498) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields down (line 498), over (line 498), background (line 498) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression listStyle.selection is @Nullable"], "jump": 3, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.List.ListStyle", "location": "CLASS_FIELD", "param": "selection"}, {"method": "<T>getCell(T)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field rowDefaults (line 79) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 3, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Table", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/ParticleControllerFinalizerInfluencer.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field controllerChannel (line 37) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression scaleChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression positionChannel is @Nullable"], "jump": 3, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerFinalizerInfluencer", "location": "CLASS_FIELD", "param": "rotationChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "errors": ["unboxing of a @Nullable value", "unboxing of a @Nullable value", "unboxing of a @Nullable value", "unboxing of a @Nullable value", "unboxing of a @Nullable value"], "jump": 3, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "expandX"}, {"method": "findRegion(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field texture (line 65) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields name (line 556), splits (line 604), pads (line 609) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields name (line 556), splits (line 604), pads (line 609) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression region is @Nullable"], "jump": 3, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.TextureAtlas", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextTooltip.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'style.label' where @NonNull is required", "(Covered) passing @Nullable parameter 'style.label' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull field background (line 83) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'style.label' where @NonNull is required"], "jump": 3, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TextTooltip.TextTooltipStyle", "location": "CLASS_FIELD", "param": "label"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/compression/rangecoder/Decoder.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression Stream is @Nullable", "dereferenced expression Stream is @Nullable", "dereferenced expression Stream is @Nullable", "dereferenced expression Stream is @Nullable"], "jump": 3, "pkg": "com.badlogic.gdx.utils.compression.rangecoder", "inject": "true", "class": "com.badlogic.gdx.utils.compression.rangecoder.Decoder", "location": "CLASS_FIELD", "param": "Stream"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/net/NetJavaSocketImpl.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression socket is @Nullable", "dereferenced expression socket is @Nullable", "dereferenced expression socket is @Nullable", "dereferenced expression socket is @Nullable"], "jump": 3, "pkg": "com.badlogic.gdx.net", "inject": "true", "class": "com.badlogic.gdx.net.NetJavaSocketImpl", "location": "CLASS_FIELD", "param": "socket"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/environment/DirectionalShadowLight.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression fbo is @Nullable", "dereferenced expression fbo is @Nullable", "dereferenced expression fbo is @Nullable"], "jump": 3, "pkg": "com.badlogic.gdx.graphics.g3d.environment", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.environment.DirectionalShadowLight", "location": "CLASS_FIELD", "param": "fbo"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/ColorAction.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression color is @Nullable", "dereferenced expression color is @Nullable", "dereferenced expression color is @Nullable"], "jump": 3, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.actions.ColorAction", "location": "CLASS_FIELD", "param": "color"}, {"method": "first()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/Selection.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 3, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.utils.Selection", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/Animation.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression (animation = animations.get(i)).id is @Nullable", "dereferenced expression (animation = animations.get(i)).id is @Nullable", "dereferenced expression (animation = animations.get(i)).id is @Nullable", "dereferenced expression (animation = animations.get(i)).id is @Nullable"], "jump": 3, "pkg": "com.badlogic.gdx.graphics.g3d.model", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.Animation", "location": "CLASS_FIELD", "param": "id"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/LongMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 80), entries2 (line 80), values1 (line 82), values2 (line 82), keys1 (line 84), keys2 (line 84) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'map.zeroValue' where @NonNull is required"], "jump": 3, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.LongMap", "location": "CLASS_FIELD", "param": "zeroValue"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/ParticleControllerFinalizerInfluencer.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field controllerChannel (line 37) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression scaleChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression positionChannel is @Nullable"], "jump": 3, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerFinalizerInfluencer", "location": "CLASS_FIELD", "param": "positionChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "errors": ["unboxing of a @Nullable value", "unboxing of a @Nullable value", "unboxing of a @Nullable value", "unboxing of a @Nullable value", "unboxing of a @Nullable value"], "jump": 3, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "expandY"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/Mesh.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression instances is @Nullable", "dereferenced expression this.instances is @Nullable", "dereferenced expression this.instances is @Nullable", "dereferenced expression instances is @Nullable"], "jump": 3, "pkg": "com.badlogic.gdx.graphics", "inject": "true", "class": "com.badlogic.gdx.graphics.Mesh", "location": "CLASS_FIELD", "param": "instances"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields foundNode (line 67), rangeStart (line 69) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression style.plus is @Nullable", "dereferenced expression style.minus is @Nullable", "(Covered) initializer method does not guarantee @NonNull field parent (line 675) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields parent (line 675), actor (line 673) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plusOver (line 1040), minusOver (line 1040), over (line 1043), selection (line 1043), background (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plusOver (line 1040), minusOver (line 1040), over (line 1043), background (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 3, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree.TreeStyle", "location": "CLASS_FIELD", "param": "plus"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field mouseOverActor (line 98) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'focus.target' where @NonNull is required", "(Covered) passing @Nullable parameter 'focus.listenerActor' where @NonNull is required", "(Covered) passing @Nullable parameter 'focus.target' where @NonNull is required", "(Covered) passing @Nullable parameter 'focus.listenerActor' where @NonNull is required", "(Covered) passing @Nullable parameter 'focus.target' where @NonNull is required", "(Covered) passing @Nullable parameter 'focus.target' where @NonNull is required", "(Covered) passing @Nullable parameter 'focus.listenerActor' where @NonNull is required"], "jump": 3, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus", "location": "CLASS_FIELD", "param": "target"}, {"method": "hit(float,float,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Group.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) method returns @Nullable, but superclass method com.badlogic.gdx.scenes.scene2d.Actor.hit(float,float,boolean) returns @NonNull"], "jump": 3, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.Group", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AlphaAction.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression color is @Nullable", "dereferenced expression color is @Nullable", "dereferenced expression color is @Nullable"], "jump": 3, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.actions.AlphaAction", "location": "CLASS_FIELD", "param": "color"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/ParticleControllerFinalizerInfluencer.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field controllerChannel (line 37) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression scaleChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression positionChannel is @Nullable"], "jump": 3, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerFinalizerInfluencer", "location": "CLASS_FIELD", "param": "scaleChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/SortedIntList.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field iterator (line 33) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'c.n' where @NonNull is required", "dereferenced expression c.n is @Nullable", "(Covered) initializer method does not guarantee @NonNull field previousPosition (line 154) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 3, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.SortedIntList.Node", "location": "CLASS_FIELD", "param": "n"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/TimSort.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field a (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'c' where @NonNull is required", "(Covered) passing @Nullable parameter 'c' where @NonNull is required", "dereferenced expression c is @Nullable", "dereferenced expression c is @Nullable"], "jump": 3, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.TimSort", "location": "CLASS_FIELD", "param": "c"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/HorizontalGroup.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression rowSizes is @Nullable", "dereferenced expression rowSizes is @Nullable", "dereferenced expression rowSizes is @Nullable", "dereferenced expression rowSizes is @Nullable"], "jump": 3, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup", "location": "CLASS_FIELD", "param": "rowSizes"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 80), entries2 (line 80), values1 (line 82), values2 (line 82), keys1 (line 84), keys2 (line 84) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'map.zeroValue' where @NonNull is required"], "jump": 3, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.IntMap", "location": "CLASS_FIELD", "param": "zeroValue"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields foundNode (line 67), rangeStart (line 69) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression style.plus is @Nullable", "dereferenced expression style.minus is @Nullable", "(Covered) initializer method does not guarantee @NonNull field parent (line 675) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields parent (line 675), actor (line 673) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plusOver (line 1040), minusOver (line 1040), over (line 1043), selection (line 1043), background (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plusOver (line 1040), minusOver (line 1040), over (line 1043), background (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 3, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree.TreeStyle", "location": "CLASS_FIELD", "param": "minus"}, {"method": "obtain(java.lang.String,float,float,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController.AnimationListener)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/AnimationController.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields queued (line 161), previous (line 171) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields listener (line 74), animation (line 79) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'obtain(id, offset, duration, loopCount, speed, listener)' where @NonNull is required", "(Covered) passing @Nullable parameter 'obtain(id, offset, duration, loopCount, speed, listener)' where @NonNull is required", "(Covered) passing @Nullable parameter 'obtain(id, offset, duration, loopCount, speed, listener)' where @NonNull is required", "(Covered) passing @Nullable parameter 'obtain(id, offset, duration, loopCount, speed, listener)' where @NonNull is required"], "jump": 3, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.AnimationController", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/VertexAttributes.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field iterable (line 76) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression iterator2 is @Nullable", "dereferenced expression iterator2 is @Nullable", "dereferenced expression iterator2 is @Nullable"], "jump": 3, "pkg": "com.badlogic.gdx.graphics", "inject": "true", "class": "com.badlogic.gdx.graphics.VertexAttributes.ReadonlyIterable", "location": "CLASS_FIELD", "param": "iterator2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/renderers/ParticleControllerRenderer.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression batch is @Nullable", "(Covered) passing @Nullable parameter 'batch' where @NonNull is required", "(Covered) passing @Nullable parameter 'batch' where @NonNull is required", "(Covered) passing @Nullable parameter 'batch' where @NonNull is required"], "jump": 3, "pkg": "com.badlogic.gdx.graphics.g3d.particles.renderers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.renderers.ParticleControllerRenderer", "location": "CLASS_FIELD", "param": "batch"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntIntMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields values1 (line 81), values2 (line 81), keys1 (line 83), keys2 (line 83) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression entries2 is @Nullable", "dereferenced expression entries2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.IntIntMap", "location": "CLASS_FIELD", "param": "entries1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zeroValue (line 52), entries1 (line 79), entries2 (line 79), values1 (line 81), values2 (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression keys2 is @Nullable", "dereferenced expression keys2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.IntMap", "location": "CLASS_FIELD", "param": "keys1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/decals/DecalBatch.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression vertices is @Nullable", "dereferenced expression vertices is @Nullable", "(Covered) passing @Nullable parameter 'vertices' where @NonNull is required"], "jump": 2, "pkg": "com.badlogic.gdx.graphics.g3d.decals", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.decals.DecalBatch", "location": "CLASS_FIELD", "param": "vertices"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/LongMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zeroValue (line 52), entries1 (line 79), entries2 (line 79), keys1 (line 84), keys2 (line 84) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression values2 is @Nullable", "dereferenced expression values2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.LongMap", "location": "CLASS_FIELD", "param": "values1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "errors": ["unboxing of a @Nullable value", "unboxing of a @Nullable value", "unboxing of a @Nullable value", "unboxing of a @Nullable value"], "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "fillY"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 79), entries2 (line 79), keys1 (line 84), keys2 (line 84) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression values2 is @Nullable", "dereferenced expression values2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.IntFloatMap", "location": "CLASS_FIELD", "param": "values2"}, {"method": "loadModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.utils.TextureProvider,P)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/ModelLoader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 2, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.ModelLoader", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/TextureLoader.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression info.data is @Nullable", "(Covered) passing @Nullable parameter 'info.data' where @NonNull is required", "(Covered) passing @Nullable parameter 'info.data' where @NonNull is required"], "jump": 2, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.TextureLoader.TextureLoaderInfo", "location": "CLASS_FIELD", "param": "data"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zeroValue (line 52), values1 (line 82), values2 (line 82), keys1 (line 84), keys2 (line 84) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression entries2 is @Nullable", "dereferenced expression entries2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.IntMap", "location": "CLASS_FIELD", "param": "entries2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntIntMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 78), entries2 (line 78), values1 (line 80), values2 (line 80) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression keys2 is @Nullable", "dereferenced expression keys2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.IntIntMap", "location": "CLASS_FIELD", "param": "keys1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields values1 (line 78), values2 (line 78), keys1 (line 80), keys2 (line 80) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression entries2 is @Nullable", "dereferenced expression entries2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectIntMap", "location": "CLASS_FIELD", "param": "entries2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zeroValue (line 52), values1 (line 82), values2 (line 82), keys1 (line 84), keys2 (line 84) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression entries2 is @Nullable", "dereferenced expression entries2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.IntMap", "location": "CLASS_FIELD", "param": "entries1"}, {"method": "getNode(com.badlogic.gdx.utils.Array<com.badlogic.gdx.graphics.g3d.model.Node>,java.lang.String,boolean,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/Node.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 2, "pkg": "com.badlogic.gdx.graphics.g3d.model", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.Node", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntIntMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields values1 (line 81), values2 (line 81), keys1 (line 83), keys2 (line 83) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression entries2 is @Nullable", "dereferenced expression entries2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.IntIntMap", "location": "CLASS_FIELD", "param": "entries2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields values1 (line 78), values2 (line 78), keys1 (line 80), keys2 (line 80) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression entries2 is @Nullable", "dereferenced expression entries2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectIntMap", "location": "CLASS_FIELD", "param": "entries1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/ColorInfluencer.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 71) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression alphaInterpolationChannel is @Nullable", "dereferenced expression alphaInterpolationChannel is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.ColorInfluencer.Single", "location": "CLASS_FIELD", "param": "alphaInterpolationChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'style.titleFont' where @NonNull is required", "(Covered) passing @Nullable parameter 'style.titleFont' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull fields background (line 386), stageBackground (line 395) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field stageBackground (line 395) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field stageBackground (line 395) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Window.WindowStyle", "location": "CLASS_FIELD", "param": "titleFont"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 75), entries2 (line 75), keys1 (line 80), keys2 (line 80) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression values2 is @Nullable", "dereferenced expression values2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectFloatMap", "location": "CLASS_FIELD", "param": "values1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 75), entries2 (line 75), values1 (line 77), values2 (line 77) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression keys2 is @Nullable", "dereferenced expression keys2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectIntMap", "location": "CLASS_FIELD", "param": "keys2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zeroValue (line 52), entries1 (line 79), entries2 (line 79), values1 (line 81), values2 (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression keys2 is @Nullable", "dereferenced expression keys2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.IntMap", "location": "CLASS_FIELD", "param": "keys2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/LongMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zeroValue (line 52), entries1 (line 79), entries2 (line 79), keys1 (line 84), keys2 (line 84) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression values2 is @Nullable", "dereferenced expression values2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.LongMap", "location": "CLASS_FIELD", "param": "values2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'listener' where @NonNull is required", "(Covered) passing @Nullable parameter 'listener' where @NonNull is required"], "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction", "location": "CLASS_FIELD", "param": "listener"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/XmlReader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'current' where @NonNull is required", "dereferenced expression current is @Nullable", "dereferenced expression current is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.XmlReader", "location": "CLASS_FIELD", "param": "current"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 79), entries2 (line 79), values1 (line 81), values2 (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression keys2 is @Nullable", "dereferenced expression keys2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.IntFloatMap", "location": "CLASS_FIELD", "param": "keys1"}, {"method": "loadAsset()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ResourceData.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field resource (line 176) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field resources (line 70) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields filename (line 128), type (line 130) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'data.loadAsset()' where @NonNull is required", "(Covered) passing @Nullable parameter 'data.loadAsset()' where @NonNull is required", "(Covered) passing @Nullable parameter 'data.loadAsset()' where @NonNull is required"], "jump": 2, "pkg": "com.badlogic.gdx.graphics.g3d.particles", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.ResourceData.SaveData", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/CubemapLoader.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression info.data is @Nullable", "(Covered) passing @Nullable parameter 'info.data' where @NonNull is required", "(Covered) passing @Nullable parameter 'info.data' where @NonNull is required"], "jump": 2, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.CubemapLoader.CubemapLoaderInfo", "location": "CLASS_FIELD", "param": "data"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelMaterial.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression mat.textures is @Nullable", "dereferenced expression mat.textures is @Nullable", "dereferenced expression jsonMaterial.textures is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial", "location": "CLASS_FIELD", "param": "textures"}, {"method": "loadFromFile(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap.Format,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/TextureData.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'TextureData.Factory.loadFromFile(file, format, useMipMaps)' where @NonNull is required"], "jump": 2, "pkg": "com.badlogic.gdx.graphics", "inject": "true", "class": "com.badlogic.gdx.graphics.TextureData.Factory", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/CheckBox.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'style.checkboxOff' where @NonNull is required", "(Covered) passing @Nullable parameter 'checkbox' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull fields checkboxOnOver (line 112), checkboxOver (line 112), checkboxOnDisabled (line 112), checkboxOffDisabled (line 112) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields checkboxOnOver (line 112), checkboxOver (line 112), checkboxOnDisabled (line 112), checkboxOffDisabled (line 112) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.CheckBox.CheckBoxStyle", "location": "CLASS_FIELD", "param": "checkboxOn"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteCache.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression textures is @Nullable", "dereferenced expression textures is @Nullable", "(Covered) initializer method does not guarantee @NonNull field counts (line 960) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 2, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.SpriteCache.Cache", "location": "CLASS_FIELD", "param": "textures"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 75), entries2 (line 75), keys1 (line 80), keys2 (line 80) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression values2 is @Nullable", "dereferenced expression values2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectIntMap", "location": "CLASS_FIELD", "param": "values2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field passwordBuffer (line 136) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression style.background is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields font (line 1222), fontColor (line 1224), focusedFontColor (line 1226), disabledFontColor (line 1226), messageFont (line 1233), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 1224), focusedFontColor (line 1226), disabledFontColor (line 1226), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields focusedFontColor (line 1226), disabledFontColor (line 1226), messageFont (line 1233), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldStyle", "location": "CLASS_FIELD", "param": "focusedBackground"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields values1 (line 82), values2 (line 82), keys1 (line 84), keys2 (line 84) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression entries2 is @Nullable", "dereferenced expression entries2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.IntFloatMap", "location": "CLASS_FIELD", "param": "entries1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectLongMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 75), entries2 (line 75), values1 (line 77), values2 (line 77) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression keys2 is @Nullable", "dereferenced expression keys2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectLongMap", "location": "CLASS_FIELD", "param": "keys2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntIntMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 78), entries2 (line 78), values1 (line 80), values2 (line 80) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression keys2 is @Nullable", "dereferenced expression keys2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.IntIntMap", "location": "CLASS_FIELD", "param": "keys2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/ColorInfluencer.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field alphaInterpolationChannel (line 68) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression lifeChannel is @Nullable", "dereferenced expression lifeChannel is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.ColorInfluencer.Single", "location": "CLASS_FIELD", "param": "lifeChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ProgressBar.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields background (line 470), disabledBackground (line 470), knob (line 473), disabledKnob (line 473), knobBefore (line 476), disabledKnobBefore (line 476) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields disabledBackground (line 470), disabledKnob (line 473), knobBefore (line 476), disabledKnobBefore (line 476) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ProgressBar.ProgressBarStyle", "location": "CLASS_FIELD", "param": "knobAfter"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field mouseOverActor (line 98) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression focus.listener is @Nullable", "dereferenced expression focus.listener is @Nullable", "dereferenced expression focus.listener is @Nullable", "dereferenced expression focus.listener is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus", "location": "CLASS_FIELD", "param": "listener"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zeroValue (line 52), entries1 (line 79), entries2 (line 79), keys1 (line 84), keys2 (line 84) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression values2 is @Nullable", "dereferenced expression values2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.IntMap", "location": "CLASS_FIELD", "param": "values2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ProgressBar.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields background (line 470), disabledBackground (line 470), knobBefore (line 477), disabledKnobBefore (line 477), knobAfter (line 480), disabledKnobAfter (line 480) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields disabledBackground (line 470), knobBefore (line 477), disabledKnobBefore (line 477), knobAfter (line 480), disabledKnobAfter (line 480) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ProgressBar.ProgressBarStyle", "location": "CLASS_FIELD", "param": "disabledKnob"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectLongMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 75), entries2 (line 75), keys1 (line 80), keys2 (line 80) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression values2 is @Nullable", "dereferenced expression values2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectLongMap", "location": "CLASS_FIELD", "param": "values2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/VerticalGroup.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression columnSizes is @Nullable", "dereferenced expression columnSizes is @Nullable", "dereferenced expression columnSizes is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup", "location": "CLASS_FIELD", "param": "columnSizes"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ParticleController.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field particleChannels (line 75) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression emitter.name is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.graphics.g3d.particles", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.ParticleController", "location": "CLASS_FIELD", "param": "name"}, {"method": "set(T,com.badlogic.gdx.graphics.Texture.TextureFilter,com.badlogic.gdx.graphics.Texture.TextureFilter,com.badlogic.gdx.graphics.Texture.TextureWrap,com.badlogic.gdx.graphics.Texture.TextureWrap)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/TextureDescriptor.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field minFilter (line 29) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 2, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor", "location": "METHOD_PARAM", "param": "minFilter"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ProgressBar.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields background (line 470), disabledBackground (line 470), knob (line 473), disabledKnob (line 473), knobAfter (line 480), disabledKnobAfter (line 480) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields disabledBackground (line 470), disabledKnob (line 473), knobAfter (line 480), disabledKnobAfter (line 480) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ProgressBar.ProgressBarStyle", "location": "CLASS_FIELD", "param": "disabledKnobBefore"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/LongMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zeroValue (line 52), values1 (line 82), values2 (line 82), keys1 (line 84), keys2 (line 84) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression entries2 is @Nullable", "dereferenced expression entries2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.LongMap", "location": "CLASS_FIELD", "param": "entries1"}, {"method": "setMesh(com.badlogic.gdx.graphics.Mesh,com.badlogic.gdx.graphics.g3d.Model)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/values/MeshSpawnShapeValue.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field model (line 71) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) parameter model is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g3d.particles.values.MeshSpawnShapeValue.setMesh(com.badlogic.gdx.graphics.Mesh,com.badlogic.gdx.graphics.g3d.Model) is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.graphics.g3d.particles.values", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.values.MeshSpawnShapeValue", "location": "METHOD_PARAM", "param": "model"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/List.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field cullingArea (line 60) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression font is @Nullable", "dereferenced expression font is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields selection (line 496), down (line 498), over (line 498), background (line 498) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields down (line 498), over (line 498), background (line 498) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.List.ListStyle", "location": "CLASS_FIELD", "param": "font"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 79), entries2 (line 79), values1 (line 81), values2 (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression keys2 is @Nullable", "dereferenced expression keys2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.IntFloatMap", "location": "CLASS_FIELD", "param": "keys2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/FloatTextureData.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'buffer' where @NonNull is required", "(Covered) passing @Nullable parameter 'buffer' where @NonNull is required"], "jump": 2, "pkg": "com.badlogic.gdx.graphics.glutils", "inject": "true", "class": "com.badlogic.gdx.graphics.glutils.FloatTextureData", "location": "CLASS_FIELD", "param": "buffer"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/CheckBox.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'style.checkboxOff' where @NonNull is required", "(Covered) passing @Nullable parameter 'checkbox' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull fields checkboxOnOver (line 112), checkboxOver (line 112), checkboxOnDisabled (line 112), checkboxOffDisabled (line 112) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields checkboxOnOver (line 112), checkboxOver (line 112), checkboxOnDisabled (line 112), checkboxOffDisabled (line 112) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.CheckBox.CheckBoxStyle", "location": "CLASS_FIELD", "param": "checkboxOff"}, {"method": "setActor(com.badlogic.gdx.scenes.scene2d.Actor)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Action.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) @NonNull field actor not initialized", "(Covered) passing @Nullable parameter 'actor' where @NonNull is required", "(Covered) parameter actor is @NonNull, but parameter in superclass method com.badlogic.gdx.scenes.scene2d.Action.setActor(com.badlogic.gdx.scenes.scene2d.Actor) is @Nullable", "(Covered) parameter actor is @NonNull, but parameter in superclass method com.badlogic.gdx.scenes.scene2d.Action.setActor(com.badlogic.gdx.scenes.scene2d.Actor) is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.Action", "location": "METHOD_PARAM", "param": "actor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields values1 (line 78), values2 (line 78), keys1 (line 80), keys2 (line 80) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression entries2 is @Nullable", "dereferenced expression entries2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectFloatMap", "location": "CLASS_FIELD", "param": "entries2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ProgressBar.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields background (line 470), disabledBackground (line 470), knob (line 473), disabledKnob (line 473), knobAfter (line 480), disabledKnobAfter (line 480) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields disabledBackground (line 470), disabledKnob (line 473), knobAfter (line 480), disabledKnobAfter (line 480) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ProgressBar.ProgressBarStyle", "location": "CLASS_FIELD", "param": "knobBefore"}, {"method": "EventTrigger(com.badlogic.gdx.input.RemoteInput.TouchEvent,com.badlogic.gdx.input.RemoteInput.KeyEvent)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/input/RemoteInput.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field touchEvent (line 99) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'keyEvent' where @NonNull is required"], "jump": 2, "pkg": "com.badlogic.gdx.input", "inject": "true", "class": "com.badlogic.gdx.input.RemoteInput.EventTrigger", "location": "METHOD_PARAM", "param": "touchEvent"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 75), entries2 (line 75), values1 (line 77), values2 (line 77) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression keys2 is @Nullable", "dereferenced expression keys2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectIntMap", "location": "CLASS_FIELD", "param": "keys1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ProgressBar.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields knob (line 474), disabledKnob (line 474), knobBefore (line 477), disabledKnobBefore (line 477), knobAfter (line 480), disabledKnobAfter (line 480) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields disabledKnob (line 474), knobBefore (line 477), disabledKnobBefore (line 477), knobAfter (line 480), disabledKnobAfter (line 480) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ProgressBar.ProgressBarStyle", "location": "CLASS_FIELD", "param": "disabledBackground"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 75), entries2 (line 75), values1 (line 77), values2 (line 77) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression keys2 is @Nullable", "dereferenced expression keys2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectFloatMap", "location": "CLASS_FIELD", "param": "keys1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectLongMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields values1 (line 78), values2 (line 78), keys1 (line 80), keys2 (line 80) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression entries2 is @Nullable", "dereferenced expression entries2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectLongMap", "location": "CLASS_FIELD", "param": "entries1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/LongMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zeroValue (line 52), values1 (line 82), values2 (line 82), keys1 (line 84), keys2 (line 84) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression entries2 is @Nullable", "dereferenced expression entries2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.LongMap", "location": "CLASS_FIELD", "param": "entries2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectLongMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 75), entries2 (line 75), values1 (line 77), values2 (line 77) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression keys2 is @Nullable", "dereferenced expression keys2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectLongMap", "location": "CLASS_FIELD", "param": "keys1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ProgressBar.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields knob (line 474), disabledKnob (line 474), knobBefore (line 477), disabledKnobBefore (line 477), knobAfter (line 480), disabledKnobAfter (line 480) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields disabledKnob (line 474), knobBefore (line 477), disabledKnobBefore (line 477), knobAfter (line 480), disabledKnobAfter (line 480) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ProgressBar.ProgressBarStyle", "location": "CLASS_FIELD", "param": "background"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/LongMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zeroValue (line 52), entries1 (line 79), entries2 (line 79), values1 (line 81), values2 (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression keys2 is @Nullable", "dereferenced expression keys2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.LongMap", "location": "CLASS_FIELD", "param": "keys2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/LongMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zeroValue (line 52), entries1 (line 79), entries2 (line 79), values1 (line 81), values2 (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression keys2 is @Nullable", "dereferenced expression keys2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.LongMap", "location": "CLASS_FIELD", "param": "keys1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/RemoveListenerAction.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'listener' where @NonNull is required", "(Covered) passing @Nullable parameter 'listener' where @NonNull is required"], "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction", "location": "CLASS_FIELD", "param": "listener"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/shapebuilders/RenderableShapeBuilder.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'indices' where @NonNull is required", "dereferenced expression indices is @Nullable", "dereferenced expression indices is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.graphics.g3d.utils.shapebuilders", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.shapebuilders.RenderableShapeBuilder", "location": "CLASS_FIELD", "param": "indices"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 75), entries2 (line 75), values1 (line 77), values2 (line 77) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression keys2 is @Nullable", "dereferenced expression keys2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectFloatMap", "location": "CLASS_FIELD", "param": "keys2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/PooledLinkedList.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field curr (line 45) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.PooledLinkedList.Item", "location": "CLASS_FIELD", "param": "payload"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zeroValue (line 52), entries1 (line 79), entries2 (line 79), keys1 (line 84), keys2 (line 84) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression values2 is @Nullable", "dereferenced expression values2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.IntMap", "location": "CLASS_FIELD", "param": "values1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields values1 (line 78), values2 (line 78), keys1 (line 80), keys2 (line 80) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression entries2 is @Nullable", "dereferenced expression entries2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectFloatMap", "location": "CLASS_FIELD", "param": "entries1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 75), entries2 (line 75), keys1 (line 80), keys2 (line 80) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression values2 is @Nullable", "dereferenced expression values2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectIntMap", "location": "CLASS_FIELD", "param": "values1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field passwordBuffer (line 136) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression style.background is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields font (line 1222), fontColor (line 1224), focusedFontColor (line 1226), disabledFontColor (line 1226), messageFont (line 1233), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 1224), focusedFontColor (line 1226), disabledFontColor (line 1226), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields focusedFontColor (line 1226), disabledFontColor (line 1226), messageFont (line 1233), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldStyle", "location": "CLASS_FIELD", "param": "cursor"}, {"method": "random()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Array.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields iterable (line 45), predicateIterable (line 47) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields iterable (line 45), predicateIterable (line 47) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields iterator1 (line 813), iterator2 (line 813) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'models.random()' where @NonNull is required", "dereferenced expression templates.random() is @Nullable", "dereferenced expression region is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Array", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'attributes' where @NonNull is required", "dereferenced expression attributes is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.MeshBuilder", "location": "CLASS_FIELD", "param": "attributes"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Dialog.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields previousKeyboardFocus (line 58), previousScrollFocus (line 58) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields previousKeyboardFocus (line 58), previousScrollFocus (line 58) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields previousKeyboardFocus (line 58), previousScrollFocus (line 58) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'skin' where @NonNull is required", "(Covered) passing @Nullable parameter 'skin' where @NonNull is required"], "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Dialog", "location": "CLASS_FIELD", "param": "skin"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/DynamicsModifier.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 453) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 453) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 46), accellerationChannel (line 46) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 46), accellerationChannel (line 46) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field strengthChannel (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field strengthChannel (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression angularChannel is @Nullable", "(Covered) initializer method does not guarantee @NonNull field rotationalVelocity2dChannel (line 202) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field rotationalVelocity2dChannel (line 202) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 232), rotationalForceChannel (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 232), rotationalForceChannel (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression angularChannel is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields accelerationChannel (line 290), positionChannel (line 292) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields accelerationChannel (line 290), positionChannel (line 292) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field directionalVelocityChannel (line 335) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field directionalVelocityChannel (line 335) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression angularChannel is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields directionalVelocityChannel (line 374), positionChannel (line 374) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields directionalVelocityChannel (line 374), positionChannel (line 374) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression angularChannel is @Nullable", "(Covered) initializer method does not guarantee @NonNull field accelerationChannel (line 418) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field accelerationChannel (line 418) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 2, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier.Angular", "location": "CLASS_FIELD", "param": "angularChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/ModelBatch.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'camera' where @NonNull is required", "(Covered) passing @Nullable parameter 'camera' where @NonNull is required"], "jump": 2, "pkg": "com.badlogic.gdx.graphics.g3d", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.ModelBatch", "location": "CLASS_FIELD", "param": "camera"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 75), entries2 (line 75), keys1 (line 80), keys2 (line 80) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression values2 is @Nullable", "dereferenced expression values2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectFloatMap", "location": "CLASS_FIELD", "param": "values2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field passwordBuffer (line 136) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression style.background is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields font (line 1222), fontColor (line 1224), focusedFontColor (line 1226), disabledFontColor (line 1226), messageFont (line 1233), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 1224), focusedFontColor (line 1226), disabledFontColor (line 1226), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields focusedFontColor (line 1226), disabledFontColor (line 1226), messageFont (line 1233), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldStyle", "location": "CLASS_FIELD", "param": "disabledBackground"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntIntMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 78), entries2 (line 78), keys1 (line 83), keys2 (line 83) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression values2 is @Nullable", "dereferenced expression values2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.IntIntMap", "location": "CLASS_FIELD", "param": "values2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ProgressBar.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields background (line 470), disabledBackground (line 470), knobBefore (line 477), disabledKnobBefore (line 477), knobAfter (line 480), disabledKnobAfter (line 480) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields disabledBackground (line 470), knobBefore (line 477), disabledKnobBefore (line 477), knobAfter (line 480), disabledKnobAfter (line 480) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ProgressBar.ProgressBarStyle", "location": "CLASS_FIELD", "param": "knob"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field passwordBuffer (line 136) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression style.background is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields font (line 1222), fontColor (line 1224), focusedFontColor (line 1226), disabledFontColor (line 1226), messageFont (line 1233), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 1224), focusedFontColor (line 1226), disabledFontColor (line 1226), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields focusedFontColor (line 1226), disabledFontColor (line 1226), messageFont (line 1233), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldStyle", "location": "CLASS_FIELD", "param": "background"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/XmlReader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'current' where @NonNull is required", "dereferenced expression current is @Nullable", "dereferenced expression current is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.XmlReader", "location": "CLASS_FIELD", "param": "root"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields values1 (line 82), values2 (line 82), keys1 (line 84), keys2 (line 84) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression entries2 is @Nullable", "dereferenced expression entries2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.IntFloatMap", "location": "CLASS_FIELD", "param": "entries2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntIntMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 78), entries2 (line 78), keys1 (line 83), keys2 (line 83) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression values2 is @Nullable", "dereferenced expression values2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.IntIntMap", "location": "CLASS_FIELD", "param": "values1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectLongMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields values1 (line 78), values2 (line 78), keys1 (line 80), keys2 (line 80) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression entries2 is @Nullable", "dereferenced expression entries2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectLongMap", "location": "CLASS_FIELD", "param": "entries2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ProgressBar.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields background (line 470), disabledBackground (line 470), knob (line 473), disabledKnob (line 473), knobBefore (line 476), disabledKnobBefore (line 476) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields disabledBackground (line 470), disabledKnob (line 473), knobBefore (line 476), disabledKnobBefore (line 476) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ProgressBar.ProgressBarStyle", "location": "CLASS_FIELD", "param": "disabledKnobAfter"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/RegionInfluencer.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression regionChannel is @Nullable", "dereferenced expression regionChannel is @Nullable", "(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 124) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 124) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 124) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 124) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression regionChannel is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer", "location": "CLASS_FIELD", "param": "regionChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectLongMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 75), entries2 (line 75), keys1 (line 80), keys2 (line 80) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression values2 is @Nullable", "dereferenced expression values2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectLongMap", "location": "CLASS_FIELD", "param": "values1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/DelegateAction.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression action is @Nullable", "dereferenced expression action is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.actions.DelegateAction", "location": "CLASS_FIELD", "param": "action"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression table is @Nullable", "dereferenced expression table is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "table"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field passwordBuffer (line 136) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression style.background is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields font (line 1222), fontColor (line 1224), focusedFontColor (line 1226), disabledFontColor (line 1226), messageFont (line 1233), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 1224), focusedFontColor (line 1226), disabledFontColor (line 1226), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields focusedFontColor (line 1226), disabledFontColor (line 1226), messageFont (line 1233), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldStyle", "location": "CLASS_FIELD", "param": "selection"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "errors": ["unboxing of a @Nullable value", "unboxing of a @Nullable value", "unboxing of a @Nullable value", "unboxing of a @Nullable value"], "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "fillX"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntFloatMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 79), entries2 (line 79), keys1 (line 84), keys2 (line 84) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression values2 is @Nullable", "dereferenced expression values2 is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.IntFloatMap", "location": "CLASS_FIELD", "param": "values1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ParticleSorter.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression distances is @Nullable", "dereferenced expression distances is @Nullable", "dereferenced expression distances is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.graphics.g3d.particles", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.ParticleSorter.Distance", "location": "CLASS_FIELD", "param": "distances"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/ETC1TextureData.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field file (line 32) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression data is @Nullable", "(Covered) passing @Nullable parameter 'data' where @NonNull is required", "dereferenced expression data is @Nullable", "dereferenced expression data is @Nullable"], "jump": 2, "pkg": "com.badlogic.gdx.graphics.glutils", "inject": "true", "class": "com.badlogic.gdx.graphics.glutils.ETC1TextureData", "location": "CLASS_FIELD", "param": "data"}, {"method": "ButtonStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field buttonGroup (line 55) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields up (line 313), down (line 313), over (line 313), focused (line 313), disabled (line 313), checked (line 316), checkedOver (line 316), checkedDown (line 316), checkedFocused (line 316) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields down (line 313), over (line 313), focused (line 313), disabled (line 313), checkedOver (line 316), checkedDown (line 316), checkedFocused (line 316) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Button.ButtonStyle", "location": "METHOD_PARAM", "param": "down"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelMesh.java", "annotation": "javax.annotation.Nullable", "errors": ["enhanced-for expression modelMesh.parts is @Nullable", "enhanced-for expression modelMesh.parts is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelMesh", "location": "CLASS_FIELD", "param": "parts"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageTextButton.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields imageChecked (line 221), imageCheckedDown (line 221), imageCheckedOver (line 221) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageChecked (line 221), imageCheckedDown (line 221), imageCheckedOver (line 221) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageChecked (line 221), imageCheckedDown (line 221), imageCheckedOver (line 221) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton.ImageTextButtonStyle", "location": "CLASS_FIELD", "param": "imageUp"}, {"method": "BillboardParticleBatch(com.badlogic.gdx.graphics.g3d.particles.ParticleShader.AlignMode,boolean,int,com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute,com.badlogic.gdx.graphics.g3d.attributes.DepthTestAttribute)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/batches/BillboardParticleBatch.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field vertices (line 119) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field mode (line 112) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.particles.batches", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.batches.BillboardParticleBatch", "location": "METHOD_PARAM", "param": "blendingAttribute"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageTextButton.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields imageChecked (line 221), imageCheckedDown (line 221), imageCheckedOver (line 221) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageChecked (line 221), imageCheckedDown (line 221), imageCheckedOver (line 221) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageChecked (line 221), imageCheckedDown (line 221), imageCheckedOver (line 221) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton.ImageTextButtonStyle", "location": "CLASS_FIELD", "param": "imageDisabled"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/compression/rangecoder/Encoder.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression Stream is @Nullable", "dereferenced expression Stream is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.utils.compression.rangecoder", "inject": "true", "class": "com.badlogic.gdx.utils.compression.rangecoder.Encoder", "location": "CLASS_FIELD", "param": "Stream"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddAction.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'action' where @NonNull is required"], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.actions.AddAction", "location": "CLASS_FIELD", "param": "action"}, {"method": "setActor(T)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field actor (line 25) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Container", "location": "METHOD_PARAM", "param": "actor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field previousScrollFocus (line 474) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields font (line 640), overFontColor (line 644), disabledFontColor (line 644), scrollStyle (line 651), listStyle (line 653), backgroundOver (line 655), backgroundOpen (line 655), backgroundDisabled (line 655) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields overFontColor (line 644), disabledFontColor (line 644), backgroundOver (line 655), backgroundOpen (line 655), backgroundDisabled (line 655) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields overFontColor (line 644), disabledFontColor (line 644) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.SelectBox.SelectBoxStyle", "location": "CLASS_FIELD", "param": "background"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectSet.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression iterator2 is @Nullable", "dereferenced expression iterator2 is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectSet", "location": "CLASS_FIELD", "param": "iterator2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/BitmapFontLoader.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression data is @Nullable", "dereferenced expression data is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.BitmapFontLoader", "location": "CLASS_FIELD", "param": "data"}, {"method": "register(java.lang.String,com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Validator,com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/BaseShader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'validator' where @NonNull is required", "(Covered) passing @Nullable parameter 'validator' where @NonNull is required"], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.shaders", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.shaders.BaseShader", "location": "METHOD_PARAM", "param": "validator"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/NinePatchDrawable.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression patch is @Nullable", "dereferenced expression patch is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable", "location": "CLASS_FIELD", "param": "patch"}, {"method": "loadModelData(com.badlogic.gdx.files.FileHandle,P)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/ModelLoader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) parameter parameters is @NonNull, but parameter in superclass method com.badlogic.gdx.assets.loaders.ModelLoader.loadModelData(com.badlogic.gdx.files.FileHandle,P) is @Nullable", "(Covered) parameter parameters is @NonNull, but parameter in superclass method com.badlogic.gdx.assets.loaders.ModelLoader.loadModelData(com.badlogic.gdx.files.FileHandle,P) is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.ModelLoader", "location": "METHOD_PARAM", "param": "parameters"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/ColorInfluencer.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields alphaInterpolationChannel (line 68), lifeChannel (line 70) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression colorChannel is @Nullable", "dereferenced expression colorChannel is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.ColorInfluencer", "location": "CLASS_FIELD", "param": "colorChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageButton.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields imageChecked (line 158), imageCheckedDown (line 158), imageCheckedOver (line 158) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageChecked (line 158), imageCheckedDown (line 158), imageCheckedOver (line 158) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageCheckedDown (line 158), imageCheckedOver (line 158) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageButton.ImageButtonStyle", "location": "CLASS_FIELD", "param": "imageOver"}, {"method": "I18NBundleParameter(java.util.Locale,java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/I18NBundleLoader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field bundle (line 54) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.I18NBundleLoader.I18NBundleParameter", "location": "METHOD_PARAM", "param": "locale"}, {"method": "set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector2)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshPartBuilder.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'col' where @NonNull is required"], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder.VertexInfo", "location": "METHOD_PARAM", "param": "col"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/batches/PointSpriteParticleBatch.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter '(Texture) null' where @NonNull is required", "dereferenced expression vertices is @Nullable", "(Covered) passing @Nullable parameter 'vertices' where @NonNull is required"], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.particles.batches", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.batches.PointSpriteParticleBatch", "location": "CLASS_FIELD", "param": "vertices"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field name (line 107) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field name (line 107) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression color is @Nullable", "dereferenced expression color is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.ParticleEmitter.Particle", "location": "CLASS_FIELD", "param": "tint"}, {"method": "<A>setActor(A)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field actor (line 49) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "METHOD_PARAM", "param": "newActor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/PooledLinkedList.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field curr (line 45) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression p is @Nullable", "dereferenced expression p is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.PooledLinkedList.Item", "location": "CLASS_FIELD", "param": "prev"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextTooltip.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'style.background' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull field label (line 80) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TextTooltip.TextTooltipStyle", "location": "CLASS_FIELD", "param": "background"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelMeshPart.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression part.indices is @Nullable", "dereferenced expression part.indices is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart", "location": "CLASS_FIELD", "param": "indices"}, {"method": "addStaticTiles(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver,com.badlogic.gdx.maps.tiled.TiledMapTileSet,com.badlogic.gdx.utils.XmlReader.Element,com.badlogic.gdx.utils.Array<com.badlogic.gdx.utils.XmlReader.Element>,java.lang.String,int,int,int,int,int,java.lang.String,int,int,java.lang.String,int,int,com.badlogic.gdx.files.FileHandle)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/maps/tiled/BaseTmxMapLoader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) parameter image is @NonNull, but parameter in superclass method com.badlogic.gdx.maps.tiled.BaseTmxMapLoader.addStaticTiles(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver,com.badlogic.gdx.maps.tiled.TiledMapTileSet,com.badlogic.gdx.utils.XmlReader.Element,com.badlogic.gdx.utils.Array<com.badlogic.gdx.utils.XmlReader.Element>,java.lang.String,int,int,int,int,int,java.lang.String,int,int,java.lang.String,int,int,com.badlogic.gdx.files.FileHandle) is @Nullable", "(Covered) parameter image is @NonNull, but parameter in superclass method com.badlogic.gdx.maps.tiled.BaseTmxMapLoader.addStaticTiles(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.maps.ImageResolver,com.badlogic.gdx.maps.tiled.TiledMapTileSet,com.badlogic.gdx.utils.XmlReader.Element,com.badlogic.gdx.utils.Array<com.badlogic.gdx.utils.XmlReader.Element>,java.lang.String,int,int,int,int,int,java.lang.String,int,int,java.lang.String,int,int,com.badlogic.gdx.files.FileHandle) is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.maps.tiled", "inject": "true", "class": "com.badlogic.gdx.maps.tiled.BaseTmxMapLoader", "location": "METHOD_PARAM", "param": "image"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageTextButton.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields imageChecked (line 221), imageCheckedDown (line 221), imageCheckedOver (line 221) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageChecked (line 221), imageCheckedDown (line 221), imageCheckedOver (line 221) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageChecked (line 221), imageCheckedDown (line 221), imageCheckedOver (line 221) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton.ImageTextButtonStyle", "location": "CLASS_FIELD", "param": "imageOver"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/ParticleControllerFinalizerInfluencer.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields positionChannel (line 34), scaleChannel (line 34), rotationChannel (line 34) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression controllerChannel is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.ParticleControllerFinalizerInfluencer", "location": "CLASS_FIELD", "param": "controllerChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/NodeAnimation.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression nodeAnim.translation is @Nullable", "dereferenced expression nodeAnim.translation is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.model", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.NodeAnimation", "location": "CLASS_FIELD", "param": "translation"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageButton.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields imageChecked (line 158), imageCheckedDown (line 158), imageCheckedOver (line 158) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageChecked (line 158), imageCheckedDown (line 158), imageCheckedOver (line 158) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageCheckedDown (line 158), imageCheckedOver (line 158) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageButton.ImageButtonStyle", "location": "CLASS_FIELD", "param": "imageDisabled"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "errors": ["unboxing of a @Nullable value", "unboxing of a @Nullable value"], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "align"}, {"method": "getCell(int,int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileLayer.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'layer.getCell(col, row)' where @NonNull is required", "(Covered) passing @Nullable parameter 'layer.getCell(col, row)' where @NonNull is required", "(Covered) passing @Nullable parameter 'layer.getCell(col, row)' where @NonNull is required"], "jump": 1, "pkg": "com.badlogic.gdx.maps.tiled", "inject": "true", "class": "com.badlogic.gdx.maps.tiled.TiledMapTileLayer", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/DynamicsModifier.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 453) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 453) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 46), accellerationChannel (line 46) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 46), accellerationChannel (line 46) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field strengthChannel (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field strengthChannel (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field angularChannel (line 130) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field angularChannel (line 130) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field rotationalVelocity2dChannel (line 201) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field rotationalVelocity2dChannel (line 201) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 231), rotationalForceChannel (line 231) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 231), rotationalForceChannel (line 231) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field positionChannel (line 292) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field positionChannel (line 292) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression accelerationChannel is @Nullable", "(Covered) initializer method does not guarantee @NonNull field directionalVelocityChannel (line 335) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field directionalVelocityChannel (line 335) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields directionalVelocityChannel (line 374), positionChannel (line 374) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields directionalVelocityChannel (line 374), positionChannel (line 374) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field accelerationChannel (line 418) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field accelerationChannel (line 418) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier.CentripetalAcceleration", "location": "CLASS_FIELD", "param": "accelerationChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/PixmapPacker.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression node.leftChild is @Nullable", "dereferenced expression node.leftChild is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields splits (line 909), pads (line 911) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields splits (line 909), pads (line 911) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.PixmapPacker.GuillotineStrategy.Node", "location": "CLASS_FIELD", "param": "leftChild"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/NodeAnimation.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression nodeAnim.rotation is @Nullable", "dereferenced expression nodeAnim.rotation is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.model", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.NodeAnimation", "location": "CLASS_FIELD", "param": "rotation"}, {"method": "setStage(com.badlogic.gdx.scenes.scene2d.Stage)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) parameter stage is @NonNull, but parameter in superclass method com.badlogic.gdx.scenes.scene2d.Actor.setStage(com.badlogic.gdx.scenes.scene2d.Stage) is @Nullable", "(Covered) parameter stage is @NonNull, but parameter in superclass method com.badlogic.gdx.scenes.scene2d.Actor.setStage(com.badlogic.gdx.scenes.scene2d.Stage) is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.Actor", "location": "METHOD_PARAM", "param": "stage"}, {"method": "set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector2)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshPartBuilder.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'pos' where @NonNull is required"], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder.VertexInfo", "location": "METHOD_PARAM", "param": "pos"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/RemoveAction.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'action' where @NonNull is required"], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.actions.RemoveAction", "location": "CLASS_FIELD", "param": "action"}, {"method": "toJson(java.lang.Object,java.lang.Class,java.lang.Class)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'knownType' where @NonNull is required"], "jump": 1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Json", "location": "METHOD_PARAM", "param": "knownType"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/SpawnInfluencer.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field rotationChannel (line 41) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field rotationChannel (line 41) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field rotationChannel (line 41) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression positionChannel is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.SpawnInfluencer", "location": "CLASS_FIELD", "param": "positionChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageButton.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields imageChecked (line 158), imageCheckedDown (line 158), imageCheckedOver (line 158) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageChecked (line 158), imageCheckedDown (line 158), imageCheckedOver (line 158) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageCheckedDown (line 158), imageCheckedOver (line 158) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageButton.ImageButtonStyle", "location": "CLASS_FIELD", "param": "imageUp"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field passwordBuffer (line 136) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression fontColor is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields font (line 1222), focusedFontColor (line 1227), disabledFontColor (line 1227), background (line 1230), focusedBackground (line 1230), disabledBackground (line 1230), cursor (line 1230), selection (line 1230), messageFont (line 1233), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields focusedFontColor (line 1227), disabledFontColor (line 1227), focusedBackground (line 1230), disabledBackground (line 1230), messageFont (line 1233), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields focusedFontColor (line 1227), disabledFontColor (line 1227), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldStyle", "location": "CLASS_FIELD", "param": "fontColor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field rangeStart (line 70) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field parent (line 676) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields parent (line 676), actor (line 674) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plus (line 1038), minus (line 1038), plusOver (line 1040), minusOver (line 1040), over (line 1043), selection (line 1043), background (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plusOver (line 1040), minusOver (line 1040), over (line 1043), background (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree", "location": "CLASS_FIELD", "param": "foundNode"}, {"method": "register(java.lang.String,com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Validator,com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/BaseShader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'setter' where @NonNull is required", "(Covered) passing @Nullable parameter 'setter' where @NonNull is required"], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.shaders", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.shaders.BaseShader", "location": "METHOD_PARAM", "param": "setter"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelNodeAnimation.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression nodeAnim.translation is @Nullable", "dereferenced expression nodeAnim.translation is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation", "location": "CLASS_FIELD", "param": "translation"}, {"method": "toJson(java.lang.Object,java.lang.Class,java.lang.Class,com.badlogic.gdx.files.FileHandle)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'knownType' where @NonNull is required"], "jump": 1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Json", "location": "METHOD_PARAM", "param": "knownType"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageTextButton.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields imageChecked (line 221), imageCheckedDown (line 221), imageCheckedOver (line 221) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageChecked (line 221), imageCheckedDown (line 221), imageCheckedOver (line 221) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageChecked (line 221), imageCheckedDown (line 221), imageCheckedOver (line 221) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton.ImageTextButtonStyle", "location": "CLASS_FIELD", "param": "imageDown"}, {"method": "get(int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntMap.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression plugs.get(group) is @Nullable", "dereferenced expression plugs.get(group) is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields zeroValue (line 52), entries1 (line 79), entries2 (line 79), values1 (line 81), values2 (line 81), keys1 (line 83), keys2 (line 83) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.IntMap", "location": "METHOD_RETURN", "param": ""}, {"method": "Cubemap(com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/Cubemap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'negativeX == null ? null : new PixmapTextureData(negativeX, null, useMipMaps, false)' where @NonNull is required", "(Covered) passing @Nullable parameter 'positiveX' where @NonNull is required"], "jump": 1, "pkg": "com.badlogic.gdx.graphics", "inject": "true", "class": "com.badlogic.gdx.graphics.Cubemap", "location": "METHOD_PARAM", "param": "positiveX"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field buttonGroup (line 55) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields checked (line 317), checkedOver (line 317), checkedDown (line 317), checkedFocused (line 317) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields checkedOver (line 317), checkedDown (line 317), checkedFocused (line 317) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Button.ButtonStyle", "location": "CLASS_FIELD", "param": "over"}, {"method": "glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/GL20.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) parameter pixels is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.GL20.glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) is @Nullable", "(Covered) parameter pixels is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.GL20.glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.graphics", "inject": "true", "class": "com.badlogic.gdx.graphics.GL20", "location": "METHOD_PARAM", "param": "pixels"}, {"method": "TextureDescriptor(T,com.badlogic.gdx.graphics.Texture.TextureFilter,com.badlogic.gdx.graphics.Texture.TextureFilter,com.badlogic.gdx.graphics.Texture.TextureWrap,com.badlogic.gdx.graphics.Texture.TextureWrap)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/TextureDescriptor.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'minFilter' where @NonNull is required"], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.TextureDescriptor", "location": "METHOD_PARAM", "param": "minFilter"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/DynamicsModifier.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 453) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 453) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 46), accellerationChannel (line 46) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 46), accellerationChannel (line 46) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field strengthChannel (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field strengthChannel (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field angularChannel (line 130) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field angularChannel (line 130) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field rotationalVelocity2dChannel (line 201) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field rotationalVelocity2dChannel (line 201) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 231), rotationalForceChannel (line 231) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 231), rotationalForceChannel (line 231) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field accelerationChannel (line 289) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field accelerationChannel (line 289) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression positionChannel is @Nullable", "(Covered) initializer method does not guarantee @NonNull field directionalVelocityChannel (line 335) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field directionalVelocityChannel (line 335) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields directionalVelocityChannel (line 374), positionChannel (line 374) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields directionalVelocityChannel (line 374), positionChannel (line 374) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field accelerationChannel (line 418) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field accelerationChannel (line 418) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier.CentripetalAcceleration", "location": "CLASS_FIELD", "param": "positionChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/TextureLoader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 1, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.TextureLoader.TextureParameter", "location": "CLASS_FIELD", "param": "texture"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntSet.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression iterator2 is @Nullable", "dereferenced expression iterator2 is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.IntSet", "location": "CLASS_FIELD", "param": "iterator1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelNodeAnimation.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression nodeAnim.rotation is @Nullable", "dereferenced expression nodeAnim.rotation is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation", "location": "CLASS_FIELD", "param": "rotation"}, {"method": "bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/Mesh.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'locations' where @NonNull is required", "(Covered) passing @Nullable parameter 'locations' where @NonNull is required"], "jump": 1, "pkg": "com.badlogic.gdx.graphics", "inject": "true", "class": "com.badlogic.gdx.graphics.Mesh", "location": "METHOD_PARAM", "param": "locations"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/emitters/RegularEmitter.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression lifeChannel is @Nullable", "dereferenced expression lifeChannel is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.particles.emitters", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.emitters.RegularEmitter", "location": "CLASS_FIELD", "param": "lifeChannel"}, {"method": "getTileSet(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileSets.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 1, "pkg": "com.badlogic.gdx.maps.tiled", "inject": "true", "class": "com.badlogic.gdx.maps.tiled.TiledMapTileSets", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/CubemapLoader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 1, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.CubemapLoader.CubemapParameter", "location": "CLASS_FIELD", "param": "cubemap"}, {"method": "ImageButtonStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageButton.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields imageUp (line 154), imageDown (line 154), imageOver (line 154), imageDisabled (line 154), imageChecked (line 157), imageCheckedDown (line 157), imageCheckedOver (line 157) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageUp (line 154), imageDown (line 154), imageOver (line 154), imageDisabled (line 154), imageChecked (line 157), imageCheckedDown (line 157), imageCheckedOver (line 157) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageOver (line 154), imageDisabled (line 154), imageCheckedDown (line 157), imageCheckedOver (line 157) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'up' where @NonNull is required"], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageButton.ImageButtonStyle", "location": "METHOD_PARAM", "param": "up"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/PixmapPacker.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression node.rightChild is @Nullable", "dereferenced expression node.rightChild is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields splits (line 909), pads (line 911) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields splits (line 909), pads (line 911) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.PixmapPacker.GuillotineStrategy.Node", "location": "CLASS_FIELD", "param": "rightChild"}, {"method": "vertex(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector2)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression pos is @Nullable", "(Covered) passing @Nullable parameter 'info.hasNormal ? info.normal : null' where @NonNull is required"], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.MeshBuilder", "location": "METHOD_PARAM", "param": "pos"}, {"method": "setFirstWidget(com.badlogic.gdx.scenes.scene2d.Actor)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SplitPane.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field firstWidget (line 55) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field handle (line 453) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.SplitPane", "location": "METHOD_PARAM", "param": "widget"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageButton.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields imageChecked (line 158), imageCheckedDown (line 158), imageCheckedOver (line 158) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageChecked (line 158), imageCheckedDown (line 158), imageCheckedOver (line 158) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageCheckedDown (line 158), imageCheckedOver (line 158) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageButton.ImageButtonStyle", "location": "CLASS_FIELD", "param": "imageDown"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/PixmapPacker.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'rect.splits' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull field pads (line 911) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field pads (line 911) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.PixmapPacker.PixmapPackerRectangle", "location": "CLASS_FIELD", "param": "splits"}, {"method": "getElementType(int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/reflect/Field.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field elementType (line 1398) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.utils.reflect", "inject": "true", "class": "com.badlogic.gdx.utils.reflect.Field", "location": "METHOD_RETURN", "param": ""}, {"method": "toJson(java.lang.Object,java.lang.Class,java.lang.Class,java.io.Writer)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'knownType' where @NonNull is required"], "jump": 1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Json", "location": "METHOD_PARAM", "param": "knownType"}, {"method": "RemoteInput(int,com.badlogic.gdx.input.RemoteInput.RemoteInputListener)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/input/RemoteInput.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field listener (line 227) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.input", "inject": "true", "class": "com.badlogic.gdx.input.RemoteInput", "location": "METHOD_PARAM", "param": "listener"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/shapebuilders/RenderableShapeBuilder.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'vertices' where @NonNull is required", "dereferenced expression vertices is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.utils.shapebuilders", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.shapebuilders.RenderableShapeBuilder", "location": "CLASS_FIELD", "param": "vertices"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/renderers/ModelInstanceControllerRenderData.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression data.modelInstanceChannel is @Nullable", "dereferenced expression renderData.modelInstanceChannel is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.particles.renderers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.renderers.ModelInstanceControllerRenderData", "location": "CLASS_FIELD", "param": "modelInstanceChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'ellipsis' where @NonNull is required", "(Covered) passing @Nullable parameter 'ellipsis' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull fields font (line 432), fontColor (line 434), background (line 437) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field fontColor (line 434) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field background (line 437) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Label", "location": "CLASS_FIELD", "param": "ellipsis"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field buttonGroup (line 55) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields checked (line 317), checkedOver (line 317), checkedDown (line 317), checkedFocused (line 317) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields checkedOver (line 317), checkedDown (line 317), checkedFocused (line 317) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Button.ButtonStyle", "location": "CLASS_FIELD", "param": "down"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelMaterial.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression m.id is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial", "location": "CLASS_FIELD", "param": "id"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/PixmapPacker.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field splits (line 908) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field splits (line 908) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.PixmapPacker.PixmapPackerRectangle", "location": "CLASS_FIELD", "param": "pads"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelMeshPart.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression other.id is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelMeshPart", "location": "CLASS_FIELD", "param": "id"}, {"method": "begin(com.badlogic.gdx.graphics.Camera)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/ModelCache.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field camera (line 212) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.ModelCache", "location": "METHOD_PARAM", "param": "camera"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntSet.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression iterator2 is @Nullable", "dereferenced expression iterator2 is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.IntSet", "location": "CLASS_FIELD", "param": "iterator2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/SpawnInfluencer.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field positionChannel (line 38) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field positionChannel (line 38) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field positionChannel (line 38) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression rotationChannel is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.SpawnInfluencer", "location": "CLASS_FIELD", "param": "rotationChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field buttonGroup (line 55) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields checked (line 317), checkedOver (line 317), checkedDown (line 317), checkedFocused (line 317) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields checkedOver (line 317), checkedDown (line 317), checkedFocused (line 317) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Button.ButtonStyle", "location": "CLASS_FIELD", "param": "focused"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/ModelInfluencer.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression modelChannel is @Nullable", "dereferenced expression modelChannel is @Nullable", "dereferenced expression modelChannel is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.ModelInfluencer", "location": "CLASS_FIELD", "param": "modelChannel"}, {"method": "setSecondWidget(com.badlogic.gdx.scenes.scene2d.Actor)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SplitPane.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field secondWidget (line 55) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field handle (line 453) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.SplitPane", "location": "METHOD_PARAM", "param": "widget"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelNodeAnimation.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression nodeAnim.scaling is @Nullable", "dereferenced expression nodeAnim.scaling is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation", "location": "CLASS_FIELD", "param": "scaling"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/Gdx.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression Gdx.audio is @Nullable", "dereferenced expression Gdx.audio is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx", "inject": "true", "class": "com.badlogic.gdx.Gdx", "location": "CLASS_FIELD", "param": "audio"}, {"method": "set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.graphics.Color,com.badlogic.gdx.math.Vector2)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshPartBuilder.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'nor' where @NonNull is required"], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder.VertexInfo", "location": "METHOD_PARAM", "param": "nor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ResourceData.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field resource (line 176) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression resources is @Nullable", "dereferenced expression resources is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields filename (line 128), type (line 130) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.particles", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.ResourceData.SaveData", "location": "CLASS_FIELD", "param": "resources"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'style.background' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull fields titleFont (line 390), stageBackground (line 395) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field stageBackground (line 395) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field stageBackground (line 395) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Window.WindowStyle", "location": "CLASS_FIELD", "param": "background"}, {"method": "unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/Mesh.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'locations' where @NonNull is required", "(Covered) passing @Nullable parameter 'locations' where @NonNull is required"], "jump": 1, "pkg": "com.badlogic.gdx.graphics", "inject": "true", "class": "com.badlogic.gdx.graphics.Mesh", "location": "METHOD_PARAM", "param": "locations"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/NodeAnimation.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression nodeAnim.scaling is @Nullable", "dereferenced expression nodeAnim.scaling is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.model", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.NodeAnimation", "location": "CLASS_FIELD", "param": "scaling"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field buttonGroup (line 55) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields checked (line 317), checkedOver (line 317), checkedDown (line 317), checkedFocused (line 317) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields checkedOver (line 317), checkedDown (line 317), checkedFocused (line 317) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Button.ButtonStyle", "location": "CLASS_FIELD", "param": "up"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectSet.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression iterator2 is @Nullable", "dereferenced expression iterator2 is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectSet", "location": "CLASS_FIELD", "param": "iterator1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/SortedIntList.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'group.value' where @NonNull is required", "(Covered) passing @Nullable parameter 'group.value' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull field iterator (line 33) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field previousPosition (line 154) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.SortedIntList.Node", "location": "CLASS_FIELD", "param": "value"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/AnimationController.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields queued (line 162), previous (line 172) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field animation (line 80) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'anim.listener' where @NonNull is required"], "jump": 1, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.AnimationController.AnimationDesc", "location": "CLASS_FIELD", "param": "listener"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/PooledLinkedList.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field curr (line 45) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression tail is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.PooledLinkedList", "location": "CLASS_FIELD", "param": "tail"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/AssetLoadingTask.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields dependencies (line 56), depsFuture (line 58) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression loadFuture is @Nullable"], "jump": 1, "pkg": "com.badlogic.gdx.assets", "inject": "true", "class": "com.badlogic.gdx.assets.AssetLoadingTask", "location": "CLASS_FIELD", "param": "loadFuture"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field buttonGroup (line 55) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields checked (line 317), checkedOver (line 317), checkedDown (line 317), checkedFocused (line 317) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields checkedOver (line 317), checkedDown (line 317), checkedFocused (line 317) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Button.ButtonStyle", "location": "CLASS_FIELD", "param": "disabled"}, {"method": "findNode(com.badlogic.gdx.utils.Array<? extends com.badlogic.gdx.scenes.scene2d.ui.Tree.Node>,java.lang.Object)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields foundNode (line 67), rangeStart (line 69) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field parent (line 676) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields parent (line 676), actor (line 674) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plus (line 1038), minus (line 1038), plusOver (line 1040), minusOver (line 1040), over (line 1043), selection (line 1043), background (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plusOver (line 1040), minusOver (line 1040), over (line 1043), background (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree", "location": "METHOD_RETURN", "param": ""}, {"method": "TiledMapImageLayer(com.badlogic.gdx.graphics.g2d.TextureRegion,float,float)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapImageLayer.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field region (line 26) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 1, "pkg": "com.badlogic.gdx.maps.tiled", "inject": "true", "class": "com.badlogic.gdx.maps.tiled.TiledMapImageLayer", "location": "METHOD_PARAM", "param": "region"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field previousScrollFocus (line 474) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields font (line 640), overFontColor (line 644), disabledFontColor (line 644), background (line 647), scrollStyle (line 650), listStyle (line 652) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields overFontColor (line 644), disabledFontColor (line 644) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields overFontColor (line 644), disabledFontColor (line 644) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.SelectBox.SelectBoxStyle", "location": "CLASS_FIELD", "param": "backgroundOver"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/renderers/ParticleControllerControllerRenderer.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression controllerChannel is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.particles.renderers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.renderers.ParticleControllerControllerRenderer", "location": "CLASS_FIELD", "param": "controllerChannel"}, {"method": "ScrollPane(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.scenes.scene2d.ui.ScrollPane.ScrollPaneStyle)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'widget' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull fields background (line 1234), corner (line 1234), hScroll (line 1237), hScrollKnob (line 1237), vScroll (line 1240), vScrollKnob (line 1240) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field corner (line 1234) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ScrollPane", "location": "METHOD_PARAM", "param": "widget"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields backgroundOver (line 281), backgroundDown (line 281), knobOver (line 284), knobDown (line 284), knobAfterOver (line 291), knobAfterDown (line 291) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields backgroundOver (line 281), backgroundDown (line 281), knobOver (line 284), knobDown (line 284), knobAfterOver (line 291), knobAfterDown (line 291) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Slider.SliderStyle", "location": "CLASS_FIELD", "param": "knobBeforeOver"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/Net.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field httpMethod (line 211) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx", "inject": "true", "class": "com.badlogic.gdx.Net.HttpRequest", "location": "CLASS_FIELD", "param": "url"}, {"method": "getMaterial(java.lang.String,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/Model.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.Model", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field buttonGroup (line 55) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields up (line 313), down (line 313), over (line 313), focused (line 313), disabled (line 313) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields over (line 313), focused (line 313), disabled (line 313) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Button.ButtonStyle", "location": "CLASS_FIELD", "param": "checked"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/NodePart.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression e.key.invBoneBindTransforms is @Nullable", "(Covered) initializer method does not guarantee @NonNull field bones (line 57) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.model", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.NodePart", "location": "CLASS_FIELD", "param": "invBoneBindTransforms"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageTextButton.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields imageUp (line 217), imageDown (line 217), imageOver (line 217), imageDisabled (line 217) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageUp (line 217), imageDown (line 217), imageOver (line 217), imageDisabled (line 217) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageUp (line 217), imageDown (line 217), imageOver (line 217), imageDisabled (line 217) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton.ImageTextButtonStyle", "location": "CLASS_FIELD", "param": "imageCheckedDown"}, {"method": "getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ParticleEffectLoader.ParticleEffectParameter)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/ParticleEffectLoader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) method returns @Nullable, but superclass method com.badlogic.gdx.assets.loaders.AssetLoader.getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,P) returns @NonNull"], "jump": 0, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.ParticleEffectLoader", "location": "METHOD_RETURN", "param": ""}, {"method": "<T>add(T)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field rowDefaults (line 79) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Table", "location": "METHOD_PARAM", "param": "actor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field passwordBuffer (line 136) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields font (line 1222), fontColor (line 1224), focusedFontColor (line 1226), disabledFontColor (line 1226), background (line 1229), focusedBackground (line 1229), disabledBackground (line 1229), cursor (line 1229), selection (line 1229), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 1224), focusedFontColor (line 1226), disabledFontColor (line 1226), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields focusedFontColor (line 1226), disabledFontColor (line 1226), focusedBackground (line 1229), disabledBackground (line 1229), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldStyle", "location": "CLASS_FIELD", "param": "messageFont"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Array.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field predicateIterable (line 48) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field predicateIterable (line 48) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields iterator1 (line 813), iterator2 (line 813) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Array", "location": "CLASS_FIELD", "param": "iterable"}, {"method": "getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.MusicLoader.MusicParameter)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/MusicLoader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field music (line 35) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) method returns @Nullable, but superclass method com.badlogic.gdx.assets.loaders.AssetLoader.getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,P) returns @NonNull"], "jump": 0, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.MusicLoader", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields background (line 1234), corner (line 1234), hScroll (line 1237), hScrollKnob (line 1237) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field corner (line 1234) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ScrollPane.ScrollPaneStyle", "location": "CLASS_FIELD", "param": "vScrollKnob"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelMesh.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression modelMesh.vertices is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelMesh", "location": "CLASS_FIELD", "param": "vertices"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'mouseOverActor' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.Stage", "location": "CLASS_FIELD", "param": "mouseOverActor"}, {"method": "startObject(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonReader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.JsonReader", "location": "METHOD_PARAM", "param": "name"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/FileTextureData.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.graphics.glutils", "inject": "true", "class": "com.badlogic.gdx.graphics.glutils.FileTextureData", "location": "CLASS_FIELD", "param": "pixmap"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/math/Polygon.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.math", "inject": "true", "class": "com.badlogic.gdx.math.Polygon", "location": "CLASS_FIELD", "param": "worldVertices"}, {"method": "put(K,V)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 77), entries2 (line 77), values1 (line 79), values2 (line 79), keys1 (line 81), keys2 (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) parameter value is @NonNull, but parameter in superclass method com.badlogic.gdx.utils.ObjectMap.put(K,V) is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectMap", "location": "METHOD_PARAM", "param": "value"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field buttonGroup (line 55) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields up (line 313), down (line 313), over (line 313), focused (line 313), disabled (line 313) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields over (line 313), focused (line 313), disabled (line 313) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Button.ButtonStyle", "location": "CLASS_FIELD", "param": "checkedFocused"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteCache.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields textures (line 958), counts (line 960) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.SpriteCache", "location": "CLASS_FIELD", "param": "customShader"}, {"method": "getSplits(com.badlogic.gdx.graphics.Pixmap)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/PixmapPacker.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields splits (line 909), pads (line 911) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields splits (line 909), pads (line 911) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.PixmapPacker", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/FocusListener.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent", "location": "CLASS_FIELD", "param": "relatedActor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextButton.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields font (line 161), fontColor (line 163), downFontColor (line 163), overFontColor (line 163), focusedFontColor (line 163), disabledFontColor (line 163) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 163), downFontColor (line 163), overFontColor (line 163), focusedFontColor (line 163), disabledFontColor (line 163) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 163), downFontColor (line 163), overFontColor (line 163), focusedFontColor (line 163), disabledFontColor (line 163) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TextButton.TextButtonStyle", "location": "CLASS_FIELD", "param": "checkedFocusedFontColor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Touchpad.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field background (line 272) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Touchpad.TouchpadStyle", "location": "CLASS_FIELD", "param": "knob"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextButton.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields font (line 161), fontColor (line 163), downFontColor (line 163), overFontColor (line 163), focusedFontColor (line 163), disabledFontColor (line 163) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 163), downFontColor (line 163), overFontColor (line 163), focusedFontColor (line 163), disabledFontColor (line 163) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 163), downFontColor (line 163), overFontColor (line 163), focusedFontColor (line 163), disabledFontColor (line 163) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TextButton.TextButtonStyle", "location": "CLASS_FIELD", "param": "checkedOverFontColor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/RunnableAction.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression runnable is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.actions.RunnableAction", "location": "CLASS_FIELD", "param": "runnable"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field texture (line 65) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields name (line 556), splits (line 604), pads (line 609) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields name (line 556), splits (line 604), pads (line 609) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.TextureAtlas.TextureAtlasData.Region", "location": "CLASS_FIELD", "param": "pads"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/renderers/ModelInstanceControllerRenderData.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression renderData.scaleChannel is @Nullable", "dereferenced expression renderData.rotationChannel is @Nullable", "dereferenced expression renderData.colorChannel is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.particles.renderers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.renderers.ModelInstanceControllerRenderData", "location": "CLASS_FIELD", "param": "scaleChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields background (line 1234), corner (line 1234), vScroll (line 1241), vScrollKnob (line 1241) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field corner (line 1234) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ScrollPane.ScrollPaneStyle", "location": "CLASS_FIELD", "param": "hScroll"}, {"method": "newInstance(java.lang.Object...)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/reflect/Constructor.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.utils.reflect", "inject": "true", "class": "com.badlogic.gdx.utils.reflect.Constructor", "location": "METHOD_PARAM", "param": "args"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelAnimation.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelAnimation", "location": "CLASS_FIELD", "param": "id"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/Net.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field httpMethod (line 211) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx", "inject": "true", "class": "com.badlogic.gdx.Net.HttpRequest", "location": "CLASS_FIELD", "param": "contentStream"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field foundNode (line 67) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression rangeStart is @Nullable", "(Covered) initializer method does not guarantee @NonNull field parent (line 676) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields parent (line 676), actor (line 674) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plus (line 1038), minus (line 1038), plusOver (line 1040), minusOver (line 1040), over (line 1043), selection (line 1043), background (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plusOver (line 1040), minusOver (line 1040), over (line 1043), background (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree", "location": "CLASS_FIELD", "param": "rangeStart"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/batches/BillboardParticleBatch.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field vertices (line 120) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'cfg.mode' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.particles.batches", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.batches.BillboardParticleBatch.Config", "location": "CLASS_FIELD", "param": "mode"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextButton.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields font (line 161), fontColor (line 163), downFontColor (line 163), overFontColor (line 163), focusedFontColor (line 163), disabledFontColor (line 163) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 163), downFontColor (line 163), overFontColor (line 163), focusedFontColor (line 163), disabledFontColor (line 163) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 163), downFontColor (line 163), overFontColor (line 163), focusedFontColor (line 163), disabledFontColor (line 163) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TextButton.TextButtonStyle", "location": "CLASS_FIELD", "param": "checkedFontColor"}, {"method": "obtain(com.badlogic.gdx.utils.SortedIntList.Node<E>,com.badlogic.gdx.utils.SortedIntList.Node<E>,E,int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/SortedIntList.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field iterator (line 33) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field previousPosition (line 154) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.SortedIntList.NodePool", "location": "METHOD_PARAM", "param": "p"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/compression/lz/InWindow.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression _stream is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.utils.compression.lz", "inject": "true", "class": "com.badlogic.gdx.utils.compression.lz.InWindow", "location": "CLASS_FIELD", "param": "_stream"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/Gdx.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression Gdx.net is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx", "inject": "true", "class": "com.badlogic.gdx.Gdx", "location": "CLASS_FIELD", "param": "net"}, {"method": "newParticle(com.badlogic.gdx.graphics.g2d.Sprite)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field name (line 107) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field name (line 107) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field tint (line 1319) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.ParticleEmitter", "location": "METHOD_PARAM", "param": "sprite"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields background (line 1234), corner (line 1234), hScroll (line 1237), hScrollKnob (line 1237) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field corner (line 1234) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ScrollPane.ScrollPaneStyle", "location": "CLASS_FIELD", "param": "vScroll"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields backgroundOver (line 281), backgroundDown (line 281), knobOver (line 284), knobDown (line 284), knobBeforeOver (line 287), knobBeforeDown (line 287) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields backgroundOver (line 281), backgroundDown (line 281), knobOver (line 284), knobDown (line 284), knobBeforeOver (line 287), knobBeforeDown (line 287) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Slider.SliderStyle", "location": "CLASS_FIELD", "param": "knobAfterDown"}, {"method": "Image(com.badlogic.gdx.scenes.scene2d.utils.Drawable)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Image.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'drawable' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Image", "location": "METHOD_PARAM", "param": "drawable"}, {"method": "load(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.TextureAtlas,java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEffect.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'atlasPrefix' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.ParticleEffect", "location": "METHOD_PARAM", "param": "atlasPrefix"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields backgroundOver (line 281), backgroundDown (line 281), knobOver (line 284), knobDown (line 284), knobBeforeOver (line 287), knobBeforeDown (line 287) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields backgroundOver (line 281), backgroundDown (line 281), knobOver (line 284), knobDown (line 284), knobBeforeOver (line 287), knobBeforeDown (line 287) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Slider.SliderStyle", "location": "CLASS_FIELD", "param": "knobAfterOver"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/ParticleEffectLoader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'param.atlasPrefix' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.ParticleEffectLoader.ParticleEffectParameter", "location": "CLASS_FIELD", "param": "atlasPrefix"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields knobOver (line 285), knobDown (line 285), knobBeforeOver (line 288), knobBeforeDown (line 288), knobAfterOver (line 291), knobAfterDown (line 291) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields knobOver (line 285), knobDown (line 285), knobBeforeOver (line 288), knobBeforeDown (line 288), knobAfterOver (line 291), knobAfterDown (line 291) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Slider.SliderStyle", "location": "CLASS_FIELD", "param": "backgroundDown"}, {"method": "pack(java.lang.String,com.badlogic.gdx.graphics.Pixmap)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/PixmapPacker.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields splits (line 908), pads (line 910) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields splits (line 908), pads (line 910) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.PixmapPacker", "location": "METHOD_PARAM", "param": "name"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/DynamicsModifier.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 453) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 453) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 46), accellerationChannel (line 46) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 46), accellerationChannel (line 46) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field strengthChannel (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field strengthChannel (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field angularChannel (line 130) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field angularChannel (line 130) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field rotationalVelocity2dChannel (line 201) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field rotationalVelocity2dChannel (line 201) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 231), rotationalForceChannel (line 231) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 231), rotationalForceChannel (line 231) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields accelerationChannel (line 289), positionChannel (line 291) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields accelerationChannel (line 289), positionChannel (line 291) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field directionalVelocityChannel (line 334) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field directionalVelocityChannel (line 334) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression directionalVelocityChannel is @Nullable", "dereferenced expression positionChannel is @Nullable", "(Covered) initializer method does not guarantee @NonNull field accelerationChannel (line 418) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field accelerationChannel (line 418) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier.TangentialAcceleration", "location": "CLASS_FIELD", "param": "directionalVelocityChannel"}, {"method": "value(java.lang.Object)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonWriter.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'value' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.JsonWriter", "location": "METHOD_PARAM", "param": "value"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields backgroundOver (line 281), backgroundDown (line 281), knobBeforeOver (line 288), knobBeforeDown (line 288), knobAfterOver (line 291), knobAfterDown (line 291) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields backgroundOver (line 281), backgroundDown (line 281), knobBeforeOver (line 288), knobBeforeDown (line 288), knobAfterOver (line 291), knobAfterDown (line 291) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Slider.SliderStyle", "location": "CLASS_FIELD", "param": "knobDown"}, {"method": "hit(float,float,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) method returns @Nullable, but superclass method com.badlogic.gdx.scenes.scene2d.ui.Table.hit(float,float,boolean) returns @NonNull", "(Covered) initializer method does not guarantee @NonNull fields background (line 387), titleFont (line 390), stageBackground (line 395) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field stageBackground (line 395) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field stageBackground (line 395) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Window", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field rowDefaults (line 80) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'Table.columnWeightedWidth' where @NonNull is required", "(Covered) passing @Nullable parameter 'Table.rowWeightedHeight' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Table", "location": "CLASS_FIELD", "param": "columnWeightedWidth"}, {"method": "ModelInstance(com.badlogic.gdx.graphics.g3d.Model,java.lang.String...)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/ModelInstance.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field userData (line 80) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field userData (line 80) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field userData (line 80) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field userData (line 80) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter '(String[]) null' where @NonNull is required", "(Covered) passing @Nullable parameter '(String[]) null' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.ModelInstance", "location": "METHOD_PARAM", "param": "rootNodeIds"}, {"method": "ObjLoader(com.badlogic.gdx.assets.loaders.FileHandleResolver)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/loader/ObjLoader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'resolver' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.loader", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.loader.ObjLoader", "location": "METHOD_PARAM", "param": "resolver"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields foundNode (line 67), rangeStart (line 69) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field parent (line 675) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields parent (line 675), actor (line 673) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plus (line 1037), minus (line 1037), plusOver (line 1039), minusOver (line 1039) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plusOver (line 1039), minusOver (line 1039) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree.TreeStyle", "location": "CLASS_FIELD", "param": "selection"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "defaults"}, {"method": "ModelInstance(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.math.Matrix4,java.lang.String...)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/ModelInstance.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field userData (line 80) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field userData (line 80) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field userData (line 80) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field userData (line 80) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter '(String[]) null' where @NonNull is required", "(Covered) passing @Nullable parameter '(String[]) null' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.ModelInstance", "location": "METHOD_PARAM", "param": "rootNodeIds"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 75), entries2 (line 75), values1 (line 77), values2 (line 77), keys1 (line 79), keys2 (line 79) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'entry.key' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectIntMap.Entry", "location": "CLASS_FIELD", "param": "key"}, {"method": "set(long,java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.JsonValue", "location": "METHOD_PARAM", "param": "stringValue"}, {"method": "set(double,java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields stringValue (line 50), child (line 61) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields stringValue (line 50), child (line 61) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields stringValue (line 50), child (line 61) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields stringValue (line 50), child (line 61) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields stringValue (line 50), child (line 61) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields stringValue (line 50), child (line 61) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields stringValue (line 50), child (line 61) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.JsonValue", "location": "METHOD_PARAM", "param": "stringValue"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields backgroundOver (line 281), backgroundDown (line 281), knobBeforeOver (line 288), knobBeforeDown (line 288), knobAfterOver (line 291), knobAfterDown (line 291) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields backgroundOver (line 281), backgroundDown (line 281), knobBeforeOver (line 288), knobBeforeDown (line 288), knobAfterOver (line 291), knobAfterDown (line 291) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Slider.SliderStyle", "location": "CLASS_FIELD", "param": "knobOver"}, {"method": "applyAnimation(com.badlogic.gdx.utils.ObjectMap<com.badlogic.gdx.graphics.g3d.model.Node,com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController.Transform>,com.badlogic.gdx.utils.Pool<com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController.Transform>,float,com.badlogic.gdx.graphics.g3d.model.Animation,float)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/BaseAnimationController.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.BaseAnimationController", "location": "METHOD_PARAM", "param": "out"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelNode.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelNode", "location": "CLASS_FIELD", "param": "id"}, {"method": "getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.CubemapLoader.CubemapParameter)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/CubemapLoader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) method returns @Nullable, but superclass method com.badlogic.gdx.assets.loaders.AssetLoader.getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,P) returns @NonNull"], "jump": 0, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.CubemapLoader", "location": "METHOD_RETURN", "param": ""}, {"method": "get(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/maps/MapObjects.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'get(name)' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.maps", "inject": "true", "class": "com.badlogic.gdx.maps.MapObjects", "location": "METHOD_RETURN", "param": ""}, {"method": "button(java.lang.String,java.lang.Object)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Dialog.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields previousKeyboardFocus (line 57), previousScrollFocus (line 57) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields previousKeyboardFocus (line 57), previousScrollFocus (line 57) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields previousKeyboardFocus (line 57), previousScrollFocus (line 57), skin (line 50) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'object' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Dialog", "location": "METHOD_PARAM", "param": "object"}, {"method": "Table(com.badlogic.gdx.scenes.scene2d.ui.Skin)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields rowDefaults (line 79), skin (line 108) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Table", "location": "METHOD_PARAM", "param": "skin"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/renderers/PointSpriteControllerRenderData.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression regionChannel is @Nullable", "dereferenced expression colorChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression scaleChannel is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.particles.renderers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.renderers.PointSpriteControllerRenderData", "location": "CLASS_FIELD", "param": "colorChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/NodePart.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field invBoneBindTransforms (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.model", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.NodePart", "location": "CLASS_FIELD", "param": "bones"}, {"method": "getAnimation(java.lang.String,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/Model.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.Model", "location": "METHOD_RETURN", "param": ""}, {"method": "AssetDescriptor(java.lang.String,java.lang.Class<T>,com.badlogic.gdx.assets.AssetLoaderParameters<T>)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/AssetDescriptor.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field file (line 39) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.assets", "inject": "true", "class": "com.badlogic.gdx.assets.AssetDescriptor", "location": "METHOD_PARAM", "param": "params"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageButton.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields imageUp (line 154), imageDown (line 154), imageOver (line 154), imageDisabled (line 154) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageUp (line 154), imageDown (line 154), imageOver (line 154), imageDisabled (line 154) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageOver (line 154), imageDisabled (line 154) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageButton.ImageButtonStyle", "location": "CLASS_FIELD", "param": "imageCheckedDown"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields foundNode (line 67), rangeStart (line 69) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field parent (line 675) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields parent (line 675), actor (line 673) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plus (line 1037), minus (line 1037), plusOver (line 1039), minusOver (line 1039) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plusOver (line 1039), minusOver (line 1039) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree.TreeStyle", "location": "CLASS_FIELD", "param": "background"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field rowDefaults (line 79) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'debugRect.color' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Table.DebugRect", "location": "CLASS_FIELD", "param": "color"}, {"method": "register(com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Uniform,com.badlogic.gdx.graphics.g3d.shaders.BaseShader.Setter)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/BaseShader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'setter' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.shaders", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.shaders.BaseShader", "location": "METHOD_PARAM", "param": "setter"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/renderers/ModelInstanceControllerRenderData.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression renderData.scaleChannel is @Nullable", "dereferenced expression renderData.rotationChannel is @Nullable", "dereferenced expression renderData.colorChannel is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.particles.renderers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.renderers.ModelInstanceControllerRenderData", "location": "CLASS_FIELD", "param": "rotationChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields foundNode (line 67), rangeStart (line 69) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field parent (line 675) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields parent (line 675), actor (line 673) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plus (line 1037), minus (line 1037), over (line 1043), selection (line 1043), background (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields over (line 1043), background (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree.TreeStyle", "location": "CLASS_FIELD", "param": "minusOver"}, {"method": "getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.I18NBundleLoader.I18NBundleParameter)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/I18NBundleLoader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field bundle (line 54) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) method returns @Nullable, but superclass method com.badlogic.gdx.assets.loaders.AssetLoader.getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,P) returns @NonNull"], "jump": 0, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.I18NBundleLoader", "location": "METHOD_RETURN", "param": ""}, {"method": "hit(float,float,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field rowDefaults (line 79) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) method returns @Nullable, but superclass method com.badlogic.gdx.scenes.scene2d.Group.hit(float,float,boolean) returns @NonNull"], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Table", "location": "METHOD_RETURN", "param": ""}, {"method": "getAnimation(java.lang.String,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/ModelInstance.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field userData (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field userData (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field userData (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field userData (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter '(String[]) null' where @NonNull is required", "(Covered) passing @Nullable parameter '(String[]) null' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.ModelInstance", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/maps/tiled/tiles/AnimatedTiledMapTile.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field properties (line 41) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field properties (line 41) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.maps.tiled.tiles", "inject": "true", "class": "com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile", "location": "CLASS_FIELD", "param": "objects"}, {"method": "PolygonSpriteBatch(int,com.badlogic.gdx.graphics.glutils.ShaderProgram)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSpriteBatch.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'defaultShader' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch", "location": "METHOD_PARAM", "param": "defaultShader"}, {"method": "setVertexTransform(com.badlogic.gdx.math.Matrix4)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'transform' where @NonNull is required", "(Covered) passing @Nullable parameter 'transform' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.MeshBuilder", "location": "METHOD_PARAM", "param": "transform"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field buttonGroup (line 55) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields up (line 313), down (line 313), over (line 313), focused (line 313), disabled (line 313) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields over (line 313), focused (line 313), disabled (line 313) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Button.ButtonStyle", "location": "CLASS_FIELD", "param": "checkedDown"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextButton.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields font (line 161), fontColor (line 163), downFontColor (line 163), overFontColor (line 163), focusedFontColor (line 163), disabledFontColor (line 163) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 163), downFontColor (line 163), overFontColor (line 163), focusedFontColor (line 163), disabledFontColor (line 163) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 163), downFontColor (line 163), overFontColor (line 163), focusedFontColor (line 163), disabledFontColor (line 163) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TextButton.TextButtonStyle", "location": "CLASS_FIELD", "param": "checkedDownFontColor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression current is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.JsonValue.JsonIterator", "location": "CLASS_FIELD", "param": "current"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field passwordBuffer (line 136) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields font (line 1222), fontColor (line 1224), background (line 1230), focusedBackground (line 1230), disabledBackground (line 1230), cursor (line 1230), selection (line 1230), messageFont (line 1233), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 1224), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields focusedBackground (line 1230), disabledBackground (line 1230), messageFont (line 1233), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldStyle", "location": "CLASS_FIELD", "param": "focusedFontColor"}, {"method": "TextureMapObject(com.badlogic.gdx.graphics.g2d.TextureRegion)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/maps/objects/TextureMapObject.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.maps.objects", "inject": "true", "class": "com.badlogic.gdx.maps.objects.TextureMapObject", "location": "METHOD_PARAM", "param": "textureRegion"}, {"method": "glTexImage3D(int,int,int,int,int,int,int,int,int,java.nio.Buffer)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/GL30.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) parameter pixels is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.GL30.glTexImage3D(int,int,int,int,int,int,int,int,int,java.nio.Buffer) is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.graphics", "inject": "true", "class": "com.badlogic.gdx.graphics.GL30", "location": "METHOD_PARAM", "param": "pixels"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Event.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.Event", "location": "CLASS_FIELD", "param": "targetActor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/AssetLoadingTask.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields dependencies (line 56), loadFuture (line 61) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.assets", "inject": "true", "class": "com.badlogic.gdx.assets.AssetLoadingTask", "location": "CLASS_FIELD", "param": "depsFuture"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'renderable' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.shaders", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.shaders.DefaultShader", "location": "CLASS_FIELD", "param": "renderable"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'rowDefaults' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Table", "location": "CLASS_FIELD", "param": "rowDefaults"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/ColorInfluencer.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression colorChannel is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields alphaInterpolationChannel (line 69), lifeChannel (line 71) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.ColorInfluencer.Random", "location": "CLASS_FIELD", "param": "colorChannel"}, {"method": "loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.CubemapLoader.CubemapParameter)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/CubemapLoader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) method returns @Nullable, but superclass method com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader.loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,P) returns @NonNull"], "jump": 0, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.CubemapLoader", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/MusicLoader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.MusicLoader", "location": "CLASS_FIELD", "param": "music"}, {"method": "getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g2d.PolygonRegionLoader.PolygonRegionParameters)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/PolygonRegionLoader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) method returns @Nullable, but superclass method com.badlogic.gdx.assets.loaders.AssetLoader.getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,P) returns @NonNull"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.PolygonRegionLoader", "location": "METHOD_RETURN", "param": ""}, {"method": "getDeclaredConstructor(java.lang.Class,java.lang.Class...)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/reflect/ClassReflection.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.utils.reflect", "inject": "true", "class": "com.badlogic.gdx.utils.reflect.ClassReflection", "location": "METHOD_PARAM", "param": "parameterTypes"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/SoundLoader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.SoundLoader", "location": "CLASS_FIELD", "param": "sound"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFont.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData", "location": "CLASS_FIELD", "param": "fontFile"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/renderers/PointSpriteControllerRenderData.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression regionChannel is @Nullable", "dereferenced expression colorChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression scaleChannel is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.particles.renderers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.renderers.PointSpriteControllerRenderData", "location": "CLASS_FIELD", "param": "scaleChannel"}, {"method": "setScrollFocus(com.badlogic.gdx.scenes.scene2d.Actor)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field mouseOverActor (line 98) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'actor' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.Stage", "location": "METHOD_PARAM", "param": "actor"}, {"method": "setAtlasName(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/RegionInfluencer.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields regionChannel (line 225), atlasName (line 227) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 124) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 124) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 124) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 124) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer", "location": "METHOD_PARAM", "param": "atlasName"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields backgroundOver (line 281), backgroundDown (line 281), knobOver (line 284), knobDown (line 284), knobAfterOver (line 291), knobAfterDown (line 291) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields backgroundOver (line 281), backgroundDown (line 281), knobOver (line 284), knobDown (line 284), knobAfterOver (line 291), knobAfterDown (line 291) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Slider.SliderStyle", "location": "CLASS_FIELD", "param": "knobBeforeDown"}, {"method": "bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/VertexBufferObjectWithVAO.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'locations' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.glutils", "inject": "true", "class": "com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO", "location": "METHOD_PARAM", "param": "locations"}, {"method": "CpuSpriteBatch(int,com.badlogic.gdx.graphics.glutils.ShaderProgram)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/CpuSpriteBatch.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'defaultShader' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.CpuSpriteBatch", "location": "METHOD_PARAM", "param": "defaultShader"}, {"method": "loadFromFile(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap.Format,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/TextureData.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.graphics", "inject": "true", "class": "com.badlogic.gdx.graphics.TextureData.Factory", "location": "METHOD_PARAM", "param": "format"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.graphics.glutils", "inject": "true", "class": "com.badlogic.gdx.graphics.glutils.ShapeRenderer", "location": "CLASS_FIELD", "param": "shapeType"}, {"method": "attribute(java.lang.String,java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/XmlReader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.XmlReader", "location": "METHOD_PARAM", "param": "name"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/compression/lz/OutWindow.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression _stream is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.utils.compression.lz", "inject": "true", "class": "com.badlogic.gdx.utils.compression.lz.OutWindow", "location": "CLASS_FIELD", "param": "_stream"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSpriteBatch.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression lastTexture is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch", "location": "CLASS_FIELD", "param": "lastTexture"}, {"method": "getConstructor(java.lang.Class,java.lang.Class...)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/reflect/ClassReflection.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.utils.reflect", "inject": "true", "class": "com.badlogic.gdx.utils.reflect.ClassReflection", "location": "METHOD_PARAM", "param": "parameterTypes"}, {"method": "findKey(java.lang.Object,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 77), entries2 (line 77), values1 (line 79), values2 (line 79), keys1 (line 81), keys2 (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectMap", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/DynamicsModifier.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 453) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 453) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression accellerationChannel is @Nullable", "(Covered) initializer method does not guarantee @NonNull field strengthChannel (line 82) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field strengthChannel (line 82) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field angularChannel (line 131) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field angularChannel (line 131) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field rotationalVelocity2dChannel (line 202) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field rotationalVelocity2dChannel (line 202) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 232), rotationalForceChannel (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 232), rotationalForceChannel (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields accelerationChannel (line 290), positionChannel (line 292) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields accelerationChannel (line 290), positionChannel (line 292) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field directionalVelocityChannel (line 335) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field directionalVelocityChannel (line 335) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields directionalVelocityChannel (line 374), positionChannel (line 374) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields directionalVelocityChannel (line 374), positionChannel (line 374) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field accelerationChannel (line 418) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field accelerationChannel (line 418) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier.FaceDirection", "location": "CLASS_FIELD", "param": "rotationChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Event.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.Event", "location": "CLASS_FIELD", "param": "listenerActor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Event.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.Event", "location": "CLASS_FIELD", "param": "stage"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field texture (line 65) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields name (line 556), splits (line 604), pads (line 609) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields name (line 556), splits (line 604), pads (line 609) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.TextureAtlas.TextureAtlasData.Region", "location": "CLASS_FIELD", "param": "name"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/DragAndDrop.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields dragSource (line 41), dragActor (line 46), target (line 50) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop", "location": "CLASS_FIELD", "param": "payload"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/maps/tiled/tiles/StaticTiledMapTile.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field properties (line 35) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field properties (line 35) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.maps.tiled.tiles", "inject": "true", "class": "com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile", "location": "CLASS_FIELD", "param": "objects"}, {"method": "append(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/StringBuilder.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'str' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.StringBuilder", "location": "METHOD_PARAM", "param": "str"}, {"method": "getGroupShader(int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/decals/SimpleOrthoGroupStrategy.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) method returns @Nullable, but superclass method com.badlogic.gdx.graphics.g3d.decals.GroupStrategy.getGroupShader(int) returns @NonNull"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.decals", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.decals.SimpleOrthoGroupStrategy", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/maps/tiled/tiles/AnimatedTiledMapTile.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field objects (line 44) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field objects (line 44) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.maps.tiled.tiles", "inject": "true", "class": "com.badlogic.gdx.maps.tiled.tiles.AnimatedTiledMapTile", "location": "CLASS_FIELD", "param": "properties"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/Net.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field httpMethod (line 211) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx", "inject": "true", "class": "com.badlogic.gdx.Net.HttpRequest", "location": "CLASS_FIELD", "param": "content"}, {"method": "hit(float,float,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) method returns @Nullable, but superclass method com.badlogic.gdx.scenes.scene2d.Group.hit(float,float,boolean) returns @NonNull", "(Covered) initializer method does not guarantee @NonNull fields background (line 1235), corner (line 1235), hScroll (line 1238), hScrollKnob (line 1238), vScroll (line 1241), vScrollKnob (line 1241) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field corner (line 1235) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ScrollPane", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ParticleSorter.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.particles", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.ParticleSorter.None", "location": "CLASS_FIELD", "param": "indices"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/DragAndDrop.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields dragSource (line 41), target (line 50) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop", "location": "CLASS_FIELD", "param": "dragActor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/DynamicsModifier.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 453) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 453) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 46), accellerationChannel (line 46) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 46), accellerationChannel (line 46) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field strengthChannel (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field strengthChannel (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field angularChannel (line 130) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field angularChannel (line 130) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field rotationalVelocity2dChannel (line 201) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field rotationalVelocity2dChannel (line 201) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 231), rotationalForceChannel (line 231) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 231), rotationalForceChannel (line 231) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields accelerationChannel (line 289), positionChannel (line 291) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields accelerationChannel (line 289), positionChannel (line 291) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field directionalVelocityChannel (line 334) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field directionalVelocityChannel (line 334) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression directionalVelocityChannel is @Nullable", "dereferenced expression positionChannel is @Nullable", "(Covered) initializer method does not guarantee @NonNull field accelerationChannel (line 418) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field accelerationChannel (line 418) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier.TangentialAcceleration", "location": "CLASS_FIELD", "param": "positionChannel"}, {"method": "toJson(java.lang.Object,java.lang.Class,java.lang.Class,java.io.Writer)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'elementType' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Json", "location": "METHOD_PARAM", "param": "elementType"}, {"method": "setActor(com.badlogic.gdx.scenes.scene2d.Actor)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields background (line 1234), corner (line 1234), hScroll (line 1237), hScrollKnob (line 1237), vScroll (line 1240), vScrollKnob (line 1240) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field corner (line 1234) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ScrollPane", "location": "METHOD_PARAM", "param": "actor"}, {"method": "button(com.badlogic.gdx.scenes.scene2d.ui.Button,java.lang.Object)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Dialog.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields previousKeyboardFocus (line 57), previousScrollFocus (line 57) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields previousKeyboardFocus (line 57), previousScrollFocus (line 57) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields previousKeyboardFocus (line 57), previousScrollFocus (line 57), skin (line 50) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'object' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Dialog", "location": "METHOD_PARAM", "param": "object"}, {"method": "getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.ShaderProgramLoader.ShaderProgramParameter)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/ShaderProgramLoader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) method returns @Nullable, but superclass method com.badlogic.gdx.assets.loaders.AssetLoader.getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,P) returns @NonNull"], "jump": 0, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.ShaderProgramLoader", "location": "METHOD_RETURN", "param": ""}, {"method": "getAttributeAlias(long)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/Attribute.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.Attribute", "location": "METHOD_RETURN", "param": ""}, {"method": "FacedCubemapData(com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/FacedCubemapData.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter '(TextureData) null' where @NonNull is required", "(Covered) passing @Nullable parameter 'negativeX == null ? null : new PixmapTextureData(negativeX, null, useMipMaps, false)' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.glutils", "inject": "true", "class": "com.badlogic.gdx.graphics.glutils.FacedCubemapData", "location": "METHOD_PARAM", "param": "positiveX"}, {"method": "AssetDescriptor(com.badlogic.gdx.files.FileHandle,java.lang.Class<T>,com.badlogic.gdx.assets.AssetLoaderParameters<T>)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/AssetDescriptor.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field file (line 39) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.assets", "inject": "true", "class": "com.badlogic.gdx.assets.AssetDescriptor", "location": "METHOD_PARAM", "param": "params"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression widget is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields background (line 1235), corner (line 1235), hScroll (line 1238), hScrollKnob (line 1238), vScroll (line 1241), vScrollKnob (line 1241) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field corner (line 1235) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ScrollPane", "location": "CLASS_FIELD", "param": "widget"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageButton.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields imageUp (line 154), imageDown (line 154), imageOver (line 154), imageDisabled (line 154) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageUp (line 154), imageDown (line 154), imageOver (line 154), imageDisabled (line 154) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageOver (line 154), imageDisabled (line 154) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageButton.ImageButtonStyle", "location": "CLASS_FIELD", "param": "imageCheckedOver"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/SortedIntList.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field iterator (line 33) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field previousPosition (line 154) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression previousPosition.p is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.SortedIntList.Node", "location": "CLASS_FIELD", "param": "p"}, {"method": "Tooltip(T,com.badlogic.gdx.scenes.scene2d.ui.TooltipManager)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tooltip.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'contents' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Tooltip", "location": "METHOD_PARAM", "param": "contents"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field passwordBuffer (line 136) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields font (line 1222), fontColor (line 1224), focusedFontColor (line 1226), disabledFontColor (line 1226), background (line 1229), focusedBackground (line 1229), disabledBackground (line 1229), cursor (line 1229), selection (line 1229), messageFont (line 1232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 1224), focusedFontColor (line 1226), disabledFontColor (line 1226) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields focusedFontColor (line 1226), disabledFontColor (line 1226), focusedBackground (line 1229), disabledBackground (line 1229), messageFont (line 1232) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldStyle", "location": "CLASS_FIELD", "param": "messageFontColor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields background (line 1234), corner (line 1234), vScroll (line 1241), vScrollKnob (line 1241) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field corner (line 1234) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ScrollPane.ScrollPaneStyle", "location": "CLASS_FIELD", "param": "hScrollKnob"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TooltipManager.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TooltipManager", "location": "CLASS_FIELD", "param": "instance"}, {"method": "createDiffuse(com.badlogic.gdx.graphics.Texture)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/attributes/TextureAttribute.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.attributes", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.attributes.TextureAttribute", "location": "METHOD_PARAM", "param": "texture"}, {"method": "<T>load(java.lang.String,java.lang.Class<T>,com.badlogic.gdx.assets.AssetLoaderParameters<T>)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/AssetManager.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'parameter' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.assets", "inject": "true", "class": "com.badlogic.gdx.assets.AssetManager", "location": "METHOD_PARAM", "param": "parameter"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelNodePart.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression nodePart.bones is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart", "location": "CLASS_FIELD", "param": "bones"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field texture (line 65) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields name (line 555), pads (line 609) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields name (line 555), pads (line 609) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion", "location": "CLASS_FIELD", "param": "splits"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field texture (line 65) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields name (line 555), splits (line 603) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields name (line 555), splits (line 603) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion", "location": "CLASS_FIELD", "param": "pads"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/renderers/ModelInstanceControllerRenderData.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression renderData.scaleChannel is @Nullable", "dereferenced expression renderData.rotationChannel is @Nullable", "dereferenced expression renderData.colorChannel is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.particles.renderers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.renderers.ModelInstanceControllerRenderData", "location": "CLASS_FIELD", "param": "colorChannel"}, {"method": "cancelTouchFocusExcept(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field mouseOverActor (line 98) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.Stage", "location": "METHOD_PARAM", "param": "exceptListener"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field rowDefaults (line 80) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'Table.columnWeightedWidth' where @NonNull is required", "(Covered) passing @Nullable parameter 'Table.rowWeightedHeight' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Table", "location": "CLASS_FIELD", "param": "rowWeightedHeight"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field texture (line 65) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'region.page' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull fields name (line 556), splits (line 604), pads (line 609) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields name (line 556), splits (line 604), pads (line 609) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.TextureAtlas.TextureAtlasData.Region", "location": "CLASS_FIELD", "param": "page"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ResourceData.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field resources (line 70) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields filename (line 127), type (line 129) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'resource' where @NonNull is required", "dereferenced expression effectData.resource is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.particles", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.ResourceData", "location": "CLASS_FIELD", "param": "resource"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field previousScrollFocus (line 474) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields font (line 640), overFontColor (line 644), disabledFontColor (line 644), background (line 647), scrollStyle (line 650), listStyle (line 652) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields overFontColor (line 644), disabledFontColor (line 644) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields overFontColor (line 644), disabledFontColor (line 644) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.SelectBox.SelectBoxStyle", "location": "CLASS_FIELD", "param": "backgroundDisabled"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/DynamicsModifier.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 453) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 453) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression accellerationChannel is @Nullable", "(Covered) initializer method does not guarantee @NonNull field strengthChannel (line 82) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field strengthChannel (line 82) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field angularChannel (line 131) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field angularChannel (line 131) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field rotationalVelocity2dChannel (line 202) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field rotationalVelocity2dChannel (line 202) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 232), rotationalForceChannel (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 232), rotationalForceChannel (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields accelerationChannel (line 290), positionChannel (line 292) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields accelerationChannel (line 290), positionChannel (line 292) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field directionalVelocityChannel (line 335) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field directionalVelocityChannel (line 335) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields directionalVelocityChannel (line 374), positionChannel (line 374) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields directionalVelocityChannel (line 374), positionChannel (line 374) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field accelerationChannel (line 418) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field accelerationChannel (line 418) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier.FaceDirection", "location": "CLASS_FIELD", "param": "accellerationChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/AssetLoadingTask.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields depsFuture (line 59), loadFuture (line 61) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.assets", "inject": "true", "class": "com.badlogic.gdx.assets.AssetLoadingTask", "location": "CLASS_FIELD", "param": "dependencies"}, {"method": "get(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/maps/MapLayers.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'get(name)' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.maps", "inject": "true", "class": "com.badlogic.gdx.maps.MapLayers", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Slider.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields knobOver (line 285), knobDown (line 285), knobBeforeOver (line 288), knobBeforeDown (line 288), knobAfterOver (line 291), knobAfterDown (line 291) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields knobOver (line 285), knobDown (line 285), knobBeforeOver (line 288), knobBeforeDown (line 288), knobAfterOver (line 291), knobAfterDown (line 291) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Slider.SliderStyle", "location": "CLASS_FIELD", "param": "backgroundOver"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Action.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.Action", "location": "CLASS_FIELD", "param": "actor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageTextButton.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields imageUp (line 217), imageDown (line 217), imageOver (line 217), imageDisabled (line 217) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageUp (line 217), imageDown (line 217), imageOver (line 217), imageDisabled (line 217) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageUp (line 217), imageDown (line 217), imageOver (line 217), imageDisabled (line 217) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton.ImageTextButtonStyle", "location": "CLASS_FIELD", "param": "imageCheckedOver"}, {"method": "G3dModelLoader(com.badlogic.gdx.utils.BaseJsonReader,com.badlogic.gdx.assets.loaders.FileHandleResolver)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/loader/G3dModelLoader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'resolver' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.loader", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.loader.G3dModelLoader", "location": "METHOD_PARAM", "param": "resolver"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Array.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field iterable (line 45) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field iterable (line 45) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields iterator1 (line 813), iterator2 (line 813) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Array", "location": "CLASS_FIELD", "param": "predicateIterable"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/DragAndDrop.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields dragActor (line 46), target (line 50) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop", "location": "CLASS_FIELD", "param": "dragSource"}, {"method": "getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.PixmapLoader.PixmapParameter)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/PixmapLoader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field pixmap (line 38) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) method returns @Nullable, but superclass method com.badlogic.gdx.assets.loaders.AssetLoader.getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,P) returns @NonNull"], "jump": 0, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.PixmapLoader", "location": "METHOD_RETURN", "param": ""}, {"method": "getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.SoundLoader.SoundParameter)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/SoundLoader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field sound (line 35) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) method returns @Nullable, but superclass method com.badlogic.gdx.assets.loaders.AssetLoader.getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,P) returns @NonNull"], "jump": 0, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.SoundLoader", "location": "METHOD_RETURN", "param": ""}, {"method": "get(K,V)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ArrayMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 46), entries2 (line 46), values1 (line 48), values2 (line 48), keys1 (line 50), keys2 (line 50) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields entries1 (line 46), entries2 (line 46), values1 (line 48), values2 (line 48), keys1 (line 50), keys2 (line 50) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ArrayMap", "location": "METHOD_PARAM", "param": "defaultValue"}, {"method": "toJson(java.lang.Object,java.lang.Class,java.lang.Class,com.badlogic.gdx.files.FileHandle)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'elementType' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Json", "location": "METHOD_PARAM", "param": "elementType"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/InputEvent.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.InputEvent", "location": "CLASS_FIELD", "param": "relatedActor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'entry.key' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull fields entries1 (line 75), entries2 (line 75), values1 (line 77), values2 (line 77), keys1 (line 79), keys2 (line 79) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectFloatMap.Entry", "location": "CLASS_FIELD", "param": "key"}, {"method": "setRegion(com.badlogic.gdx.graphics.g2d.TextureRegion)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/TextureRegion.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression region is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.TextureRegion", "location": "METHOD_PARAM", "param": "region"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Group.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.Group", "location": "CLASS_FIELD", "param": "cullingArea"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/renderers/PointSpriteControllerRenderData.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression regionChannel is @Nullable", "dereferenced expression colorChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression scaleChannel is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.particles.renderers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.renderers.PointSpriteControllerRenderData", "location": "CLASS_FIELD", "param": "regionChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/maps/objects/TextureMapObject.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.maps.objects", "inject": "true", "class": "com.badlogic.gdx.maps.objects.TextureMapObject", "location": "CLASS_FIELD", "param": "textureRegion"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/NinePatch.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.NinePatch", "location": "CLASS_FIELD", "param": "texture"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/DefaultRenderableSorter.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression camera is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.DefaultRenderableSorter", "location": "CLASS_FIELD", "param": "camera"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field previousScrollFocus (line 474) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields font (line 640), overFontColor (line 644), disabledFontColor (line 644), background (line 647), scrollStyle (line 650), listStyle (line 652) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields overFontColor (line 644), disabledFontColor (line 644) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields overFontColor (line 644), disabledFontColor (line 644) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.SelectBox.SelectBoxStyle", "location": "CLASS_FIELD", "param": "backgroundOpen"}, {"method": "loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureLoader.TextureParameter)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/TextureLoader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) method returns @Nullable, but superclass method com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader.loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,P) returns @NonNull"], "jump": 0, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.TextureLoader", "location": "METHOD_RETURN", "param": ""}, {"method": "set(int,T)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Array.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields iterable (line 45), predicateIterable (line 47) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields iterable (line 45), predicateIterable (line 47) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields iterator1 (line 812), iterator2 (line 812) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) parameter value is @NonNull, but parameter in superclass method com.badlogic.gdx.utils.Array.set(int,T) is @Nullable", "(Covered) parameter value is @NonNull, but parameter in superclass method com.badlogic.gdx.utils.Array.set(int,T) is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Array", "location": "METHOD_PARAM", "param": "value"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/Input.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression keyNames is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx", "inject": "true", "class": "com.badlogic.gdx.Input.Keys", "location": "CLASS_FIELD", "param": "keyNames"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/PooledLinkedList.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field curr (line 45) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression n is @Nullable", "dereferenced expression n is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.PooledLinkedList.Item", "location": "CLASS_FIELD", "param": "next"}, {"method": "getSide()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/FrameBufferCubemap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'getSide()' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.glutils", "inject": "true", "class": "com.badlogic.gdx.graphics.glutils.FrameBufferCubemap", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/net/NetJavaServerSocketImpl.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression server is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.net", "inject": "true", "class": "com.badlogic.gdx.net.NetJavaServerSocketImpl", "location": "CLASS_FIELD", "param": "server"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/ModelBuilder.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression model is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.ModelBuilder", "location": "CLASS_FIELD", "param": "model"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageButton.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields imageUp (line 154), imageDown (line 154), imageOver (line 154), imageDisabled (line 154) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageUp (line 154), imageDown (line 154), imageOver (line 154), imageDisabled (line 154) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageOver (line 154), imageDisabled (line 154) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageButton.ImageButtonStyle", "location": "CLASS_FIELD", "param": "imageChecked"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields foundNode (line 67), rangeStart (line 69) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field parent (line 675) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields parent (line 675), actor (line 673) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plus (line 1037), minus (line 1037), plusOver (line 1039), minusOver (line 1039) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plusOver (line 1039), minusOver (line 1039) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree.TreeStyle", "location": "CLASS_FIELD", "param": "over"}, {"method": "pack(java.lang.String,com.badlogic.gdx.graphics.Pixmap)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/PixmapPacker.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields splits (line 909), pads (line 911) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields splits (line 909), pads (line 911) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.PixmapPacker", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/input/RemoteInput.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.input", "inject": "true", "class": "com.badlogic.gdx.input.RemoteInput", "location": "CLASS_FIELD", "param": "processor"}, {"method": "toJson(java.lang.Object,java.lang.Class,java.lang.Class)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'elementType' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Json", "location": "METHOD_PARAM", "param": "elementType"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field buttonGroup (line 55) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields up (line 313), down (line 313), over (line 313), focused (line 313), disabled (line 313) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields over (line 313), focused (line 313), disabled (line 313) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Button.ButtonStyle", "location": "CLASS_FIELD", "param": "checkedOver"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/List.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields font (line 490), selection (line 496), down (line 498), over (line 498), background (line 498) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields down (line 498), over (line 498), background (line 498) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.List", "location": "CLASS_FIELD", "param": "cullingArea"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/renderers/PointSpriteControllerRenderData.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression regionChannel is @Nullable", "dereferenced expression colorChannel is @Nullable", "dereferenced expression rotationChannel is @Nullable", "dereferenced expression scaleChannel is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.particles.renderers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.renderers.PointSpriteControllerRenderData", "location": "CLASS_FIELD", "param": "rotationChannel"}, {"method": "findConstructor(java.lang.Class<T>)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ReflectionPool.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter '(Class[]) null' where @NonNull is required", "(Covered) passing @Nullable parameter '(Class[]) null' where @NonNull is required", "(Covered) passing @Nullable parameter '(Object[]) null' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ReflectionPool", "location": "METHOD_RETURN", "param": ""}, {"method": "SkinParameter(java.lang.String,com.badlogic.gdx.utils.ObjectMap<java.lang.String,java.lang.Object>)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.SkinLoader.SkinParameter", "location": "METHOD_PARAM", "param": "textureAtlasPath"}, {"method": "get(K,V)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 77), entries2 (line 77), values1 (line 79), values2 (line 79), keys1 (line 81), keys2 (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectMap", "location": "METHOD_PARAM", "param": "defaultValue"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields foundNode (line 67), rangeStart (line 69) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field parent (line 675) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields parent (line 675), actor (line 673) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plus (line 1037), minus (line 1037), over (line 1043), selection (line 1043), background (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields over (line 1043), background (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree.TreeStyle", "location": "CLASS_FIELD", "param": "plusOver"}, {"method": "getMaterial(java.lang.String,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/ModelInstance.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field userData (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field userData (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field userData (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field userData (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter '(String[]) null' where @NonNull is required", "(Covered) passing @Nullable parameter '(String[]) null' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.ModelInstance", "location": "METHOD_RETURN", "param": ""}, {"method": "<T>readValue(java.lang.String,java.lang.Class<T>,T,com.badlogic.gdx.utils.JsonValue)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Json", "location": "METHOD_PARAM", "param": "defaultValue"}, {"method": "ModelInstance(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.math.Matrix4,com.badlogic.gdx.utils.Array<java.lang.String>)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/ModelInstance.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field userData (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field userData (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field userData (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field userData (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter '(String[]) null' where @NonNull is required", "(Covered) passing @Nullable parameter 'transform' where @NonNull is required", "(Covered) passing @Nullable parameter '(String[]) null' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.ModelInstance", "location": "METHOD_PARAM", "param": "transform"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field texture (line 65) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields name (line 556), splits (line 604), pads (line 609) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields name (line 556), splits (line 604), pads (line 609) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.TextureAtlas.TextureAtlasData.Region", "location": "CLASS_FIELD", "param": "splits"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Touchpad.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field knob (line 276) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Touchpad.TouchpadStyle", "location": "CLASS_FIELD", "param": "background"}, {"method": "SkinParameter(java.lang.String,com.badlogic.gdx.utils.ObjectMap<java.lang.String,java.lang.Object>)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/SkinLoader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.SkinLoader.SkinParameter", "location": "METHOD_PARAM", "param": "resources"}, {"method": "overlapConvexPolygons(com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Polygon,com.badlogic.gdx.math.Intersector.MinimumTranslationVector)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/math/Intersector.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'mtv' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.math", "inject": "true", "class": "com.badlogic.gdx.math.Intersector", "location": "METHOD_PARAM", "param": "mtv"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/AssetDescriptor.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.assets", "inject": "true", "class": "com.badlogic.gdx.assets.AssetDescriptor", "location": "CLASS_FIELD", "param": "file"}, {"method": "insert(com.badlogic.gdx.graphics.g2d.PixmapPacker.GuillotineStrategy.Node,com.badlogic.gdx.math.Rectangle)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/PixmapPacker.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression node is @Nullable", "dereferenced expression node is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields splits (line 909), pads (line 911) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields splits (line 909), pads (line 911) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.PixmapPacker.GuillotineStrategy", "location": "METHOD_RETURN", "param": ""}, {"method": "getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.assets.loaders.TextureLoader.TextureParameter)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/TextureLoader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) method returns @Nullable, but superclass method com.badlogic.gdx.assets.loaders.AssetLoader.getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,P) returns @NonNull"], "jump": 0, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.TextureLoader", "location": "METHOD_RETURN", "param": ""}, {"method": "I18NBundleParameter(java.util.Locale,java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/I18NBundleLoader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field bundle (line 54) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.I18NBundleLoader.I18NBundleParameter", "location": "METHOD_PARAM", "param": "encoding"}, {"method": "getTile(int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/maps/tiled/TiledMapTileSets.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'tile' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.maps.tiled", "inject": "true", "class": "com.badlogic.gdx.maps.tiled.TiledMapTileSets", "location": "METHOD_RETURN", "param": ""}, {"method": "animate(java.lang.String,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController.AnimationListener,float)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/AnimationController.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields queued (line 161), previous (line 171) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields listener (line 74), animation (line 79) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'listener' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.AnimationController", "location": "METHOD_PARAM", "param": "listener"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/CameraInputController.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression controller is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.CameraInputController.CameraGestureListener", "location": "CLASS_FIELD", "param": "controller"}, {"method": "put(K,V)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 77), entries2 (line 77), values1 (line 79), values2 (line 79), keys1 (line 81), keys2 (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectMap", "location": "METHOD_RETURN", "param": ""}, {"method": "writeString(java.lang.String,boolean,java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/files/FileHandle.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields file (line 61), type (line 63) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'charset' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.files", "inject": "true", "class": "com.badlogic.gdx.files.FileHandle", "location": "METHOD_PARAM", "param": "charset"}, {"method": "startArray(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonReader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.JsonReader", "location": "METHOD_PARAM", "param": "name"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field passwordBuffer (line 136) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields font (line 1222), fontColor (line 1224), background (line 1230), focusedBackground (line 1230), disabledBackground (line 1230), cursor (line 1230), selection (line 1230), messageFont (line 1233), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 1224), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields focusedBackground (line 1230), disabledBackground (line 1230), messageFont (line 1233), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldStyle", "location": "CLASS_FIELD", "param": "disabledFontColor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelMesh.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression other.id is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelMesh", "location": "CLASS_FIELD", "param": "id"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelNodeAnimation.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'nanim.nodeId' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelNodeAnimation", "location": "CLASS_FIELD", "param": "nodeId"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/PooledLinkedList.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields iter (line 43), curr (line 45) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.PooledLinkedList", "location": "CLASS_FIELD", "param": "head"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ParticleShader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'renderable' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.particles", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.ParticleShader", "location": "CLASS_FIELD", "param": "renderable"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelNode.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression jsonNode.children is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelNode", "location": "CLASS_FIELD", "param": "children"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelMesh.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'modelMesh.attributes' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelMesh", "location": "CLASS_FIELD", "param": "attributes"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelNode.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression jsonNode.parts is @Nullable"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelNode", "location": "CLASS_FIELD", "param": "parts"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Timer.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Timer.TimerThread", "location": "CLASS_FIELD", "param": "instance"}, {"method": "ModelInstance(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.math.Matrix4,java.lang.String...)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/ModelInstance.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field userData (line 80) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field userData (line 80) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field userData (line 80) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field userData (line 80) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter '(String[]) null' where @NonNull is required", "(Covered) passing @Nullable parameter '(String[]) null' where @NonNull is required"], "jump": 0, "pkg": "com.badlogic.gdx.graphics.g3d", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.ModelInstance", "location": "METHOD_PARAM", "param": "transform"}, {"method": "loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,P)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/ModelLoader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) method returns @Nullable, but superclass method com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader.loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,P) returns @NonNull"], "jump": 0, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.ModelLoader", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageTextButton.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields imageUp (line 217), imageDown (line 217), imageOver (line 217), imageDisabled (line 217) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageUp (line 217), imageDown (line 217), imageOver (line 217), imageDisabled (line 217) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields imageUp (line 217), imageDown (line 217), imageOver (line 217), imageDisabled (line 217) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton.ImageTextButtonStyle", "location": "CLASS_FIELD", "param": "imageChecked"}, {"method": "setTypeName(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Json", "location": "METHOD_PARAM", "param": "typeName"}, {"method": "put(K,V)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/OrderedMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) method returns @Nullable, but superclass method com.badlogic.gdx.utils.ObjectMap.put(K,V) returns @NonNull"], "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.OrderedMap", "location": "METHOD_RETURN", "param": ""}, {"method": "ButtonStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field buttonGroup (line 55) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields up (line 313), down (line 313), over (line 313), focused (line 313), disabled (line 313), checked (line 316), checkedOver (line 316), checkedDown (line 316), checkedFocused (line 316) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields over (line 313), focused (line 313), disabled (line 313), checked (line 316), checkedOver (line 316), checkedDown (line 316), checkedFocused (line 316) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Button.ButtonStyle", "location": "METHOD_PARAM", "param": "checked"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ParticleSystem.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.particles", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.ParticleSystem", "location": "CLASS_FIELD", "param": "instance"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelData.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelData", "location": "CLASS_FIELD", "param": "id"}, {"method": "unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/InstanceBufferObjectSubData.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.glutils", "inject": "true", "class": "com.badlogic.gdx.graphics.glutils.InstanceBufferObjectSubData", "location": "METHOD_PARAM", "param": "locations"}, {"method": "scaleBy(float,float,float,com.badlogic.gdx.math.Interpolation)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/Actions.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'interpolation' where @NonNull is required"], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.actions.Actions", "location": "METHOD_PARAM", "param": "interpolation"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ButtonGroup.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression lastChecked is @Nullable"], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup", "location": "CLASS_FIELD", "param": "lastChecked"}, {"method": "put(int,V)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zeroValue (line 52), entries1 (line 79), entries2 (line 79), values1 (line 81), values2 (line 81), keys1 (line 83), keys2 (line 83) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.IntMap", "location": "METHOD_RETURN", "param": ""}, {"method": "<T,P>setLoader(java.lang.Class<T>,java.lang.String,com.badlogic.gdx.assets.loaders.AssetLoader<T,P>)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/AssetManager.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.assets", "inject": "true", "class": "com.badlogic.gdx.assets.AssetManager", "location": "METHOD_PARAM", "param": "suffix"}, {"method": "dragStop(com.badlogic.gdx.scenes.scene2d.InputEvent,float,float,int,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Payload,com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Target)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/DragAndDrop.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields dragSource (line 41), dragActor (line 45), target (line 49) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop.Source", "location": "METHOD_PARAM", "param": "target"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/RegionInfluencer.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field regionChannel (line 225) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 124) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 124) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 124) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 124) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer", "location": "CLASS_FIELD", "param": "atlasName"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.shaders", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.shaders.DefaultShader.Config", "location": "CLASS_FIELD", "param": "fragmentShader"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/TextureAtlasLoader.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression data is @Nullable"], "jump": -1, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.TextureAtlasLoader", "location": "CLASS_FIELD", "param": "data"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/decals/Decal.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.decals", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.decals.Decal", "location": "CLASS_FIELD", "param": "transformationOffset"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/ShaderProgramLoader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.ShaderProgramLoader.ShaderProgramParameter", "location": "CLASS_FIELD", "param": "prependVertexCode"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Action.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.Action", "location": "CLASS_FIELD", "param": "pool"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteCache.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields textures (line 958), counts (line 960) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.SpriteCache", "location": "CLASS_FIELD", "param": "currentCache"}, {"method": "getRect(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/PixmapPacker.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields splits (line 909), pads (line 911) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields splits (line 909), pads (line 911) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.PixmapPacker", "location": "METHOD_RETURN", "param": ""}, {"method": "<T>getLoader(java.lang.Class<T>,java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/AssetManager.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.assets", "inject": "true", "class": "com.badlogic.gdx.assets.AssetManager", "location": "METHOD_PARAM", "param": "fileName"}, {"method": "getFallbackLocale(java.util.Locale)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/I18NBundle.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.I18NBundle", "location": "METHOD_RETURN", "param": ""}, {"method": "getPads(com.badlogic.gdx.graphics.Pixmap,int[])", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/PixmapPacker.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields splits (line 909), pads (line 911) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields splits (line 909), pads (line 911) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.PixmapPacker", "location": "METHOD_RETURN", "param": ""}, {"method": "getLastSelected()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/Selection.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.utils.Selection", "location": "METHOD_RETURN", "param": ""}, {"method": "NetJavaServerSocketImpl(com.badlogic.gdx.Net.Protocol,java.lang.String,int,com.badlogic.gdx.net.ServerSocketHints)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/net/NetJavaServerSocketImpl.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.net", "inject": "true", "class": "com.badlogic.gdx.net.NetJavaServerSocketImpl", "location": "METHOD_PARAM", "param": "hostname"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelNodePart.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart", "location": "CLASS_FIELD", "param": "meshPartId"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Select.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Select", "location": "CLASS_FIELD", "param": "quickSelect"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/ShaderProgramLoader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.ShaderProgramLoader.ShaderProgramParameter", "location": "CLASS_FIELD", "param": "prependFragmentCode"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/CheckBox.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields checkboxOn (line 109), checkboxOff (line 109) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.CheckBox.CheckBoxStyle", "location": "CLASS_FIELD", "param": "checkboxOffDisabled"}, {"method": "poll()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/AtomicQueue.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.AtomicQueue", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEmitter.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field tint (line 1320) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.ParticleEmitter", "location": "CLASS_FIELD", "param": "name"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ParticleChannels.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.particles", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.ParticleChannels.ColorInitializer", "location": "CLASS_FIELD", "param": "instance"}, {"method": "get(T)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectSet.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields iterator1 (line 73), iterator2 (line 73) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectSet", "location": "METHOD_RETURN", "param": ""}, {"method": "createSprite(java.lang.String,int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field texture (line 65) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields name (line 556), splits (line 604), pads (line 609) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields name (line 556), splits (line 604), pads (line 609) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.TextureAtlas", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelNodeKeyframe.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelNodeKeyframe", "location": "CLASS_FIELD", "param": "value"}, {"method": "writer(boolean,java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/files/FileHandle.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields file (line 61), type (line 63) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.files", "inject": "true", "class": "com.badlogic.gdx.files.FileHandle", "location": "METHOD_PARAM", "param": "charset"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/math/Polyline.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.math", "inject": "true", "class": "com.badlogic.gdx.math.Polyline", "location": "CLASS_FIELD", "param": "worldVertices"}, {"method": "extendBoundingBox(com.badlogic.gdx.math.collision.BoundingBox,int,int,com.badlogic.gdx.math.Matrix4)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/Mesh.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics", "inject": "true", "class": "com.badlogic.gdx.graphics.Mesh", "location": "METHOD_PARAM", "param": "transform"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field previousScrollFocus (line 474) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields font (line 640), background (line 648), scrollStyle (line 651), listStyle (line 653), backgroundOver (line 655), backgroundOpen (line 655), backgroundDisabled (line 655) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields backgroundOver (line 655), backgroundOpen (line 655), backgroundDisabled (line 655) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.SelectBox.SelectBoxStyle", "location": "CLASS_FIELD", "param": "overFontColor"}, {"method": "getMessage()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/SerializationException.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.SerializationException", "location": "METHOD_RETURN", "param": ""}, {"method": "loadBundleChain(com.badlogic.gdx.files.FileHandle,java.lang.String,java.util.List<java.util.Locale>,int,com.badlogic.gdx.utils.I18NBundle)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/I18NBundle.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.I18NBundle", "location": "METHOD_PARAM", "param": "baseBundle"}, {"method": "hit(float,float,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) method returns @Nullable, but superclass method com.badlogic.gdx.scenes.scene2d.Group.hit(float,float,boolean) returns @NonNull"], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Container", "location": "METHOD_RETURN", "param": ""}, {"method": "find(java.lang.Object)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field atlas (line 66) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field atlas (line 66) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Skin", "location": "METHOD_RETURN", "param": ""}, {"method": "unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/VertexBufferObjectSubData.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.glutils", "inject": "true", "class": "com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData", "location": "METHOD_PARAM", "param": "locations"}, {"method": "getKey(V,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ArrayMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 46), entries2 (line 46), values1 (line 48), values2 (line 48), keys1 (line 50), keys2 (line 50) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields entries1 (line 46), entries2 (line 46), values1 (line 48), values2 (line 48), keys1 (line 50), keys2 (line 50) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ArrayMap", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/SortedIntList.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field previousPosition (line 155) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.SortedIntList", "location": "CLASS_FIELD", "param": "iterator"}, {"method": "peekScissors()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ScissorStack.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.utils.ScissorStack", "location": "METHOD_RETURN", "param": ""}, {"method": "number(java.lang.String,long,java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonReader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.JsonReader", "location": "METHOD_PARAM", "param": "name"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TooltipManager.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TooltipManager", "location": "CLASS_FIELD", "param": "files"}, {"method": "set(java.lang.String,com.badlogic.gdx.graphics.Mesh,int,int,int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/MeshPart.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.model", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.MeshPart", "location": "METHOD_PARAM", "param": "mesh"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelMaterial.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial", "location": "CLASS_FIELD", "param": "specular"}, {"method": "PolygonSpriteBatch(int,int,com.badlogic.gdx.graphics.glutils.ShaderProgram)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/PolygonSpriteBatch.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.PolygonSpriteBatch", "location": "METHOD_PARAM", "param": "defaultShader"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "files"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/Environment.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.Environment", "location": "CLASS_FIELD", "param": "shadowMap"}, {"method": "newPixmap(int,int,int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/Gdx2DPixmap.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.Gdx2DPixmap", "location": "METHOD_RETURN", "param": ""}, {"method": "getSelectedValue()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields foundNode (line 67), rangeStart (line 69) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field parent (line 676) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields parent (line 676), actor (line 674) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plus (line 1038), minus (line 1038), plusOver (line 1040), minusOver (line 1040), over (line 1043), selection (line 1043), background (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plusOver (line 1040), minusOver (line 1040), over (line 1043), background (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/TextFormatter.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.TextFormatter", "location": "CLASS_FIELD", "param": "messageFormat"}, {"method": "<T>optional(java.lang.String,java.lang.Class<T>)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field atlas (line 66) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field atlas (line 66) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Skin", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFont.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field fontFile (line 545) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph", "location": "CLASS_FIELD", "param": "kerning"}, {"method": "moveBy(float,float,float,com.badlogic.gdx.math.Interpolation)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/Actions.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'interpolation' where @NonNull is required"], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.actions.Actions", "location": "METHOD_PARAM", "param": "interpolation"}, {"method": "writeValue(java.lang.String,java.lang.Object,java.lang.Class)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'knownType' where @NonNull is required"], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Json", "location": "METHOD_PARAM", "param": "knownType"}, {"method": "createSprite(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field texture (line 65) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields name (line 556), splits (line 604), pads (line 609) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields name (line 556), splits (line 604), pads (line 609) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.TextureAtlas", "location": "METHOD_RETURN", "param": ""}, {"method": "toString(int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/Input.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx", "inject": "true", "class": "com.badlogic.gdx.Input.Keys", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/AnimationController.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field queued (line 161) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields listener (line 74), animation (line 79) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.AnimationController", "location": "CLASS_FIELD", "param": "previous"}, {"method": "Code(java.io.InputStream,java.io.OutputStream,long,long,com.badlogic.gdx.utils.compression.ICodeProgress)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/compression/lzma/Encoder.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils.compression.lzma", "inject": "true", "class": "com.badlogic.gdx.utils.compression.lzma.Encoder", "location": "METHOD_PARAM", "param": "progress"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields hScroll (line 1238), hScrollKnob (line 1238), vScroll (line 1241), vScrollKnob (line 1241) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ScrollPane.ScrollPaneStyle", "location": "CLASS_FIELD", "param": "background"}, {"method": "unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/InstanceBufferObject.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.glutils", "inject": "true", "class": "com.badlogic.gdx.graphics.glutils.InstanceBufferObject", "location": "METHOD_PARAM", "param": "locations"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelNodePart.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart", "location": "CLASS_FIELD", "param": "uvMapping"}, {"method": "setOverNode(N)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields foundNode (line 67), rangeStart (line 69) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field parent (line 675) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields parent (line 675), actor (line 673) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plus (line 1037), minus (line 1037), plusOver (line 1039), minusOver (line 1039), over (line 1042), selection (line 1042), background (line 1042) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plusOver (line 1039), minusOver (line 1039), over (line 1042), background (line 1042) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree", "location": "METHOD_PARAM", "param": "overNode"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/maps/tiled/tiles/StaticTiledMapTile.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field objects (line 38) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.maps.tiled.tiles", "inject": "true", "class": "com.badlogic.gdx.maps.tiled.tiles.StaticTiledMapTile", "location": "CLASS_FIELD", "param": "properties"}, {"method": "sizeTo(float,float,float,com.badlogic.gdx.math.Interpolation)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/Actions.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'interpolation' where @NonNull is required"], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.actions.Actions", "location": "METHOD_PARAM", "param": "interpolation"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelMaterial.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial", "location": "CLASS_FIELD", "param": "diffuse"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ParticleShader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.particles", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.ParticleShader.Config", "location": "CLASS_FIELD", "param": "fragmentShader"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/Renderable.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression renderable.shader is @Nullable", "dereferenced expression currentShader is @Nullable", "dereferenced expression currentShader is @Nullable"], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.Renderable", "location": "CLASS_FIELD", "param": "shader"}, {"method": "bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/VertexArray.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.glutils", "inject": "true", "class": "com.badlogic.gdx.graphics.glutils.VertexArray", "location": "METHOD_PARAM", "param": "locations"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression style.stageBackground is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields background (line 386), titleFont (line 389) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Window.WindowStyle", "location": "CLASS_FIELD", "param": "stageBackground"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Skin", "location": "CLASS_FIELD", "param": "atlas"}, {"method": "<T>addChannel(com.badlogic.gdx.graphics.g3d.particles.ParallelArray.ChannelDescriptor,com.badlogic.gdx.graphics.g3d.particles.ParallelArray.ChannelInitializer<T>)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ParallelArray.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.particles", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.ParallelArray", "location": "METHOD_PARAM", "param": "initializer"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/compression/Lzma.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils.compression", "inject": "true", "class": "com.badlogic.gdx.utils.compression.Lzma.CommandLine", "location": "CLASS_FIELD", "param": "InFile"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DepthShader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.shaders", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.shaders.DepthShader", "location": "CLASS_FIELD", "param": "defaultVertexShader"}, {"method": "getRegions(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field atlas (line 66) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field atlas (line 66) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Skin", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Sort.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Sort", "location": "CLASS_FIELD", "param": "instance"}, {"method": "getData(int,int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/KTXTextureData.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field compressedData (line 64) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.graphics.glutils", "inject": "true", "class": "com.badlogic.gdx.graphics.glutils.KTXTextureData", "location": "METHOD_RETURN", "param": ""}, {"method": "<T>findActor(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Group.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.Group", "location": "METHOD_RETURN", "param": ""}, {"method": "findRegion(java.lang.String,int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field texture (line 65) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields name (line 556), splits (line 604), pads (line 609) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields name (line 556), splits (line 604), pads (line 609) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.TextureAtlas", "location": "METHOD_RETURN", "param": ""}, {"method": "encode(java.lang.String,java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/net/HttpParametersUtils.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.net", "inject": "true", "class": "com.badlogic.gdx.net.HttpParametersUtils", "location": "METHOD_PARAM", "param": "content"}, {"method": "getChild(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.JsonValue", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/Renderable.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.Renderable", "location": "CLASS_FIELD", "param": "bones"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/DynamicsModifier.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 453) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 453) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 46), accellerationChannel (line 46) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 46), accellerationChannel (line 46) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field strengthChannel (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field strengthChannel (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field angularChannel (line 130) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field angularChannel (line 130) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field rotationalVelocity2dChannel (line 201) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field rotationalVelocity2dChannel (line 201) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 231), rotationalForceChannel (line 231) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 231), rotationalForceChannel (line 231) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields accelerationChannel (line 289), positionChannel (line 291) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields accelerationChannel (line 289), positionChannel (line 291) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression directionalVelocityChannel is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields directionalVelocityChannel (line 374), positionChannel (line 374) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields directionalVelocityChannel (line 374), positionChannel (line 374) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field accelerationChannel (line 418) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field accelerationChannel (line 418) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier.PolarAcceleration", "location": "CLASS_FIELD", "param": "directionalVelocityChannel"}, {"method": "next()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Predicate.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Predicate.PredicateIterator", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields hScroll (line 1238), hScrollKnob (line 1238), vScroll (line 1241), vScrollKnob (line 1241) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ScrollPane.ScrollPaneStyle", "location": "CLASS_FIELD", "param": "corner"}, {"method": "getPressedItem()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/List.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field cullingArea (line 60) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields font (line 490), selection (line 496), down (line 498), over (line 498), background (line 498) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields down (line 498), over (line 498), background (line 498) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.List", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/SharedLibraryLoader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.SharedLibraryLoader", "location": "CLASS_FIELD", "param": "nativesJar"}, {"method": "<T>find(com.badlogic.gdx.utils.Array<?>,java.lang.Class<T>)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ParticleEffectLoader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.particles", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.ParticleEffectLoader", "location": "METHOD_RETURN", "param": ""}, {"method": "loadBundleChain(com.badlogic.gdx.files.FileHandle,java.lang.String,java.util.List<java.util.Locale>,int,com.badlogic.gdx.utils.I18NBundle)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/I18NBundle.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.I18NBundle", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/ShaderProgramLoader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.ShaderProgramLoader.ShaderProgramParameter", "location": "CLASS_FIELD", "param": "fragmentFile"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteBatch.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression lastTexture is @Nullable"], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.SpriteBatch", "location": "CLASS_FIELD", "param": "lastTexture"}, {"method": "copy(boolean,boolean,int[])", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/Mesh.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics", "inject": "true", "class": "com.badlogic.gdx.graphics.Mesh", "location": "METHOD_PARAM", "param": "usage"}, {"method": "remove(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.JsonValue", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field previousScrollFocus (line 474) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields font (line 640), background (line 648), scrollStyle (line 651), listStyle (line 653), backgroundOver (line 655), backgroundOpen (line 655), backgroundDisabled (line 655) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields backgroundOver (line 655), backgroundOpen (line 655), backgroundDisabled (line 655) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.SelectBox.SelectBoxStyle", "location": "CLASS_FIELD", "param": "disabledFontColor"}, {"method": "rotateTo(float,float,com.badlogic.gdx.math.Interpolation)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/Actions.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'interpolation' where @NonNull is required"], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.actions.Actions", "location": "METHOD_PARAM", "param": "interpolation"}, {"method": "scaleTo(float,float,float,com.badlogic.gdx.math.Interpolation)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/Actions.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'interpolation' where @NonNull is required"], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.actions.Actions", "location": "METHOD_PARAM", "param": "interpolation"}, {"method": "rotateBy(float,float,com.badlogic.gdx.math.Interpolation)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/Actions.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'interpolation' where @NonNull is required"], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.actions.Actions", "location": "METHOD_PARAM", "param": "interpolation"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ParticleChannels.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.particles", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.ParticleChannels.TextureRegionInitializer", "location": "CLASS_FIELD", "param": "instance"}, {"method": "getChecked()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ButtonGroup.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field lastChecked (line 41) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field lastChecked (line 41) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.ButtonGroup", "location": "METHOD_RETURN", "param": ""}, {"method": "setAnimation(java.lang.String,int,float,com.badlogic.gdx.graphics.g3d.utils.AnimationController.AnimationListener)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/AnimationController.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields queued (line 161), previous (line 171) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields listener (line 74), animation (line 79) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'listener' where @NonNull is required"], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.AnimationController", "location": "METHOD_PARAM", "param": "listener"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.shaders", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.shaders.DefaultShader", "location": "CLASS_FIELD", "param": "defaultFragmentShader"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/CubemapLoader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.CubemapLoader.CubemapParameter", "location": "CLASS_FIELD", "param": "cubemapData"}, {"method": "findKey(long)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectLongMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 75), entries2 (line 75), values1 (line 77), values2 (line 77), keys1 (line 79), keys2 (line 79) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectLongMap", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/DynamicsModifier.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 453) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 453) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 46), accellerationChannel (line 46) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 46), accellerationChannel (line 46) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field strengthChannel (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field strengthChannel (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field angularChannel (line 130) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field angularChannel (line 130) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field rotationalVelocity2dChannel (line 201) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field rotationalVelocity2dChannel (line 201) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression rotationalForceChannel is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields accelerationChannel (line 290), positionChannel (line 292) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields accelerationChannel (line 290), positionChannel (line 292) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field directionalVelocityChannel (line 335) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field directionalVelocityChannel (line 335) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields directionalVelocityChannel (line 374), positionChannel (line 374) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields directionalVelocityChannel (line 374), positionChannel (line 374) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field accelerationChannel (line 418) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field accelerationChannel (line 418) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier.Rotational3D", "location": "CLASS_FIELD", "param": "rotationalForceChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields foundNode (line 67), rangeStart (line 69) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field actor (line 673) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plus (line 1038), minus (line 1038), plusOver (line 1040), minusOver (line 1040), over (line 1043), selection (line 1043), background (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plusOver (line 1040), minusOver (line 1040), over (line 1043), background (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree.Node", "location": "CLASS_FIELD", "param": "parent"}, {"method": "createAnimatedTile(com.badlogic.gdx.maps.tiled.TiledMapTileSet,com.badlogic.gdx.maps.tiled.TiledMapTile,com.badlogic.gdx.utils.XmlReader.Element,int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/maps/tiled/BaseTmxMapLoader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.maps.tiled", "inject": "true", "class": "com.badlogic.gdx.maps.tiled.BaseTmxMapLoader", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelTexture.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelTexture", "location": "CLASS_FIELD", "param": "uvScaling"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/TextureLoader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.TextureLoader.TextureParameter", "location": "CLASS_FIELD", "param": "format"}, {"method": "get(int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/SortedIntList.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field iterator (line 33) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field previousPosition (line 155) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.SortedIntList", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelNodePart.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelNodePart", "location": "CLASS_FIELD", "param": "materialId"}, {"method": "loadBundle(com.badlogic.gdx.files.FileHandle,java.lang.String,java.util.Locale)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/I18NBundle.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.I18NBundle", "location": "METHOD_RETURN", "param": ""}, {"method": "moveTo(float,float,float,com.badlogic.gdx.math.Interpolation)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/Actions.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'interpolation' where @NonNull is required"], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.actions.Actions", "location": "METHOD_PARAM", "param": "interpolation"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/CubemapLoader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.CubemapLoader.CubemapLoaderInfo", "location": "CLASS_FIELD", "param": "filename"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ParticleChannels.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.particles", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.ParticleChannels.Rotation2dInitializer", "location": "CLASS_FIELD", "param": "instance"}, {"method": "findKey(float,float)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 75), entries2 (line 75), values1 (line 77), values2 (line 77), keys1 (line 79), keys2 (line 79) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectFloatMap", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/BitmapFontLoader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field data (line 49) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.BitmapFontLoader.BitmapFontParameter", "location": "CLASS_FIELD", "param": "bitmapFontData"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/CheckBox.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields checkboxOn (line 109), checkboxOff (line 109) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.CheckBox.CheckBoxStyle", "location": "CLASS_FIELD", "param": "checkboxOnOver"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ParticleShader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.particles", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.ParticleShader", "location": "CLASS_FIELD", "param": "defaultVertexShader"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/ETC1TextureData.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field data (line 35) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.graphics.glutils", "inject": "true", "class": "com.badlogic.gdx.graphics.glutils.ETC1TextureData", "location": "CLASS_FIELD", "param": "file"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonReader.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression current is @Nullable"], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.JsonReader", "location": "CLASS_FIELD", "param": "root"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/CubemapLoader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.CubemapLoader.CubemapParameter", "location": "CLASS_FIELD", "param": "format"}, {"method": "previous()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/PooledLinkedList.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field curr (line 44) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.PooledLinkedList", "location": "METHOD_RETURN", "param": ""}, {"method": "readString()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/DataInput.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.DataInput", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ParticleChannels.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.particles", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.ParticleChannels.Rotation3dInitializer", "location": "CLASS_FIELD", "param": "instance"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/DefaultTextureBinder.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression unitsLRU is @Nullable", "dereferenced expression unitsLRU is @Nullable"], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.DefaultTextureBinder", "location": "CLASS_FIELD", "param": "unitsLRU"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/VertexAttributes.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields iterator1 (line 294), iterator2 (line 294) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.graphics", "inject": "true", "class": "com.badlogic.gdx.graphics.VertexAttributes", "location": "CLASS_FIELD", "param": "iterable"}, {"method": "bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/VertexBufferObject.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.glutils", "inject": "true", "class": "com.badlogic.gdx.graphics.glutils.VertexBufferObject", "location": "METHOD_PARAM", "param": "locations"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Timer.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression thread is @Nullable", "(Covered) initializer method does not guarantee @NonNull field instance (line 316) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Timer", "location": "CLASS_FIELD", "param": "thread"}, {"method": "bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/InstanceBufferObjectSubData.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.glutils", "inject": "true", "class": "com.badlogic.gdx.graphics.glutils.InstanceBufferObjectSubData", "location": "METHOD_PARAM", "param": "locations"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelMaterial.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial", "location": "CLASS_FIELD", "param": "ambient"}, {"method": "DepthShaderProvider(com.badlogic.gdx.graphics.g3d.shaders.DepthShader.Config)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/DepthShaderProvider.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.DepthShaderProvider", "location": "METHOD_PARAM", "param": "config"}, {"method": "sizeBy(float,float,float,com.badlogic.gdx.math.Interpolation)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/Actions.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'interpolation' where @NonNull is required"], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.actions.Actions", "location": "METHOD_PARAM", "param": "interpolation"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/ModelBuilder.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression node is @Nullable"], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.ModelBuilder", "location": "CLASS_FIELD", "param": "node"}, {"method": "getGlyph(char)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFont.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field fontFile (line 544) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/List.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field cullingArea (line 60) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields font (line 489), selection (line 495) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.List.ListStyle", "location": "CLASS_FIELD", "param": "over"}, {"method": "findKey(int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 75), entries2 (line 75), values1 (line 77), values2 (line 77), keys1 (line 79), keys2 (line 79) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectIntMap", "location": "METHOD_RETURN", "param": ""}, {"method": "<T>getAnnotation(java.lang.Class<T>)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/reflect/Annotation.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils.reflect", "inject": "true", "class": "com.badlogic.gdx.utils.reflect.Annotation", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/DragAndDrop.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields dragSource (line 41), dragActor (line 45) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression target is @Nullable"], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop", "location": "CLASS_FIELD", "param": "target"}, {"method": "color(com.badlogic.gdx.graphics.Color,float,com.badlogic.gdx.math.Interpolation)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/Actions.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'interpolation' where @NonNull is required"], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.actions.Actions", "location": "METHOD_PARAM", "param": "interpolation"}, {"method": "bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/InstanceBufferObject.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.glutils", "inject": "true", "class": "com.badlogic.gdx.graphics.glutils.InstanceBufferObject", "location": "METHOD_PARAM", "param": "locations"}, {"method": "getItemAt(float)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/List.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field cullingArea (line 60) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields font (line 490), selection (line 496), down (line 498), over (line 498), background (line 498) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields down (line 498), over (line 498), background (line 498) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.List", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/Node.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.model", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.Node", "location": "CLASS_FIELD", "param": "parent"}, {"method": "BlendingAttribute(com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/attributes/BlendingAttribute.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.attributes", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.attributes.BlendingAttribute", "location": "METHOD_PARAM", "param": "copyFrom"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelMaterial.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial", "location": "CLASS_FIELD", "param": "emissive"}, {"method": "removeLast()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/PooledLinkedList.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field curr (line 44) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.PooledLinkedList", "location": "METHOD_RETURN", "param": ""}, {"method": "bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/VertexBufferObjectSubData.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.glutils", "inject": "true", "class": "com.badlogic.gdx.graphics.glutils.VertexBufferObjectSubData", "location": "METHOD_PARAM", "param": "locations"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonReader.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression current is @Nullable"], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.JsonReader", "location": "CLASS_FIELD", "param": "current"}, {"method": "findKey(float)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectFloatMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 75), entries2 (line 75), values1 (line 77), values2 (line 77), keys1 (line 79), keys2 (line 79) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectFloatMap", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/math/ConvexHull.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.math", "inject": "true", "class": "com.badlogic.gdx.math.ConvexHull", "location": "CLASS_FIELD", "param": "sortedPoints"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Predicate.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Predicate.PredicateIterable", "location": "CLASS_FIELD", "param": "iterator"}, {"method": "createPatch(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field texture (line 65) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields name (line 556), splits (line 604), pads (line 609) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields name (line 556), splits (line 604), pads (line 609) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.TextureAtlas", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.MeshBuilder", "location": "CLASS_FIELD", "param": "indicesMap"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ParticleShader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.particles", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.ParticleShader", "location": "CLASS_FIELD", "param": "defaultFragmentShader"}, {"method": "findEmitter(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEffect.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.ParticleEffect", "location": "METHOD_RETURN", "param": ""}, {"method": "BitmapFont(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData,com.badlogic.gdx.graphics.g2d.TextureRegion,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFont.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field fontFile (line 544) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.BitmapFont", "location": "METHOD_PARAM", "param": "region"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/ParticleEffectLoader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.ParticleEffectLoader.ParticleEffectParameter", "location": "CLASS_FIELD", "param": "imagesDir"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/AssetLoaderParameters.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.assets", "inject": "true", "class": "com.badlogic.gdx.assets.AssetLoaderParameters", "location": "CLASS_FIELD", "param": "loadedCallback"}, {"method": "remove(int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zeroValue (line 52), entries1 (line 79), entries2 (line 79), values1 (line 81), values2 (line 81), keys1 (line 83), keys2 (line 83) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.IntMap", "location": "METHOD_RETURN", "param": ""}, {"method": "getExtractedFile(java.lang.String,java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/SharedLibraryLoader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field nativesJar (line 77) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.SharedLibraryLoader", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelMaterial.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial", "location": "CLASS_FIELD", "param": "type"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/ShaderProgramLoader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.ShaderProgramLoader.ShaderProgramParameter", "location": "CLASS_FIELD", "param": "vertexFile"}, {"method": "next()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/PooledLinkedList.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field curr (line 44) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.PooledLinkedList", "location": "METHOD_RETURN", "param": ""}, {"method": "number(java.lang.String,double,java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonReader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.JsonReader", "location": "METHOD_PARAM", "param": "name"}, {"method": "removeKey(K)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ArrayMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 46), entries2 (line 46), values1 (line 48), values2 (line 48), keys1 (line 50), keys2 (line 50) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields entries1 (line 46), entries2 (line 46), values1 (line 48), values2 (line 48), keys1 (line 50), keys2 (line 50) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ArrayMap", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/DynamicsModifier.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 453) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 453) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 46), accellerationChannel (line 46) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 46), accellerationChannel (line 46) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field strengthChannel (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field strengthChannel (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field angularChannel (line 130) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field angularChannel (line 130) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field rotationalVelocity2dChannel (line 201) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field rotationalVelocity2dChannel (line 201) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression rotationalForceChannel is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields accelerationChannel (line 290), positionChannel (line 292) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields accelerationChannel (line 290), positionChannel (line 292) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field directionalVelocityChannel (line 335) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field directionalVelocityChannel (line 335) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields directionalVelocityChannel (line 374), positionChannel (line 374) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields directionalVelocityChannel (line 374), positionChannel (line 374) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field accelerationChannel (line 418) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field accelerationChannel (line 418) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier.Rotational3D", "location": "CLASS_FIELD", "param": "rotationChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ParticleShader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.particles", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.ParticleShader.Config", "location": "CLASS_FIELD", "param": "vertexShader"}, {"method": "loadModelData(com.badlogic.gdx.files.FileHandle,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/loader/ObjLoader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.loader", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.loader.ObjLoader", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelTexture.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelTexture", "location": "CLASS_FIELD", "param": "uvTranslation"}, {"method": "wrap(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData,com.badlogic.gdx.graphics.g2d.GlyphLayout.GlyphRun,int,int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/GlyphLayout.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.GlyphLayout", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/math/DelaunayTriangulator.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.math", "inject": "true", "class": "com.badlogic.gdx.math.DelaunayTriangulator", "location": "CLASS_FIELD", "param": "sortedPoints"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteBatch.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.SpriteBatch", "location": "CLASS_FIELD", "param": "customShader"}, {"method": "unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/VertexArray.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.glutils", "inject": "true", "class": "com.badlogic.gdx.graphics.glutils.VertexArray", "location": "METHOD_PARAM", "param": "locations"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/ParticleEffectLoader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.ParticleEffectLoader.ParticleEffectParameter", "location": "CLASS_FIELD", "param": "atlasFile"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectLongMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 75), entries2 (line 75), values1 (line 77), values2 (line 77), keys1 (line 79), keys2 (line 79) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.ObjectLongMap.Entry", "location": "CLASS_FIELD", "param": "key"}, {"method": "newPixmap(java.io.InputStream,int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/Gdx2DPixmap.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.Gdx2DPixmap", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/compression/lzma/Encoder.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils.compression.lzma", "inject": "true", "class": "com.badlogic.gdx.utils.compression.lzma.Encoder", "location": "CLASS_FIELD", "param": "_inStream"}, {"method": "setKeyboardFocus(com.badlogic.gdx.scenes.scene2d.Actor)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field mouseOverActor (line 98) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'actor' where @NonNull is required"], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.Stage", "location": "METHOD_PARAM", "param": "actor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/compression/Lzma.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils.compression", "inject": "true", "class": "com.badlogic.gdx.utils.compression.Lzma.CommandLine", "location": "CLASS_FIELD", "param": "OutFile"}, {"method": "<T>firstAscendant(java.lang.Class<T>)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.Actor", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields name (line 556), splits (line 604), pads (line 609) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields name (line 556), splits (line 604), pads (line 609) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.TextureAtlas.TextureAtlasData.Page", "location": "CLASS_FIELD", "param": "texture"}, {"method": "string(java.lang.String,java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonReader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.JsonReader", "location": "METHOD_PARAM", "param": "name"}, {"method": "moveToAligned(float,float,int,float,com.badlogic.gdx.math.Interpolation)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/Actions.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'interpolation' where @NonNull is required"], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.actions.Actions", "location": "METHOD_PARAM", "param": "interpolation"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/BitmapFontLoader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field data (line 49) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.BitmapFontLoader.BitmapFontParameter", "location": "CLASS_FIELD", "param": "atlasName"}, {"method": "getTree()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields foundNode (line 67), rangeStart (line 69) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field parent (line 675) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields parent (line 675), actor (line 673) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plus (line 1038), minus (line 1038), plusOver (line 1040), minusOver (line 1040), over (line 1043), selection (line 1043), background (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plusOver (line 1040), minusOver (line 1040), over (line 1043), background (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree.Node", "location": "METHOD_RETURN", "param": ""}, {"method": "loadFile(java.lang.String,java.lang.String,java.io.File)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/SharedLibraryLoader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field nativesJar (line 77) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.SharedLibraryLoader", "location": "METHOD_RETURN", "param": ""}, {"method": "BitmapFont(com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData,com.badlogic.gdx.utils.Array<com.badlogic.gdx.graphics.g2d.TextureRegion>,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFont.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field fontFile (line 544) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.BitmapFont", "location": "METHOD_PARAM", "param": "pageRegions"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/Cubemap.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics", "inject": "true", "class": "com.badlogic.gdx.graphics.Cubemap", "location": "CLASS_FIELD", "param": "assetManager"}, {"method": "ModelBatch(com.badlogic.gdx.graphics.g3d.utils.RenderContext,com.badlogic.gdx.graphics.g3d.utils.ShaderProvider,com.badlogic.gdx.graphics.g3d.utils.RenderableSorter)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/ModelBatch.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.ModelBatch", "location": "METHOD_PARAM", "param": "sorter"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields font (line 431), background (line 437) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field background (line 437) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Label.LabelStyle", "location": "CLASS_FIELD", "param": "fontColor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonWriter.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.JsonWriter", "location": "CLASS_FIELD", "param": "current"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/CheckBox.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields checkboxOn (line 109), checkboxOff (line 109) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.CheckBox.CheckBoxStyle", "location": "CLASS_FIELD", "param": "checkboxOver"}, {"method": "getPage(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/PixmapPacker.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields splits (line 909), pads (line 911) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields splits (line 909), pads (line 911) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.PixmapPacker", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/DynamicsModifier.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 453) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 453) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 46), accellerationChannel (line 46) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 46), accellerationChannel (line 46) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field strengthChannel (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field strengthChannel (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field angularChannel (line 130) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field angularChannel (line 130) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression rotationalVelocity2dChannel is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 232), rotationalForceChannel (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 232), rotationalForceChannel (line 232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields accelerationChannel (line 290), positionChannel (line 292) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields accelerationChannel (line 290), positionChannel (line 292) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field directionalVelocityChannel (line 335) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field directionalVelocityChannel (line 335) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields directionalVelocityChannel (line 374), positionChannel (line 374) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields directionalVelocityChannel (line 374), positionChannel (line 374) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field accelerationChannel (line 418) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field accelerationChannel (line 418) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier.Rotational2D", "location": "CLASS_FIELD", "param": "rotationalVelocity2dChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/Net.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx", "inject": "true", "class": "com.badlogic.gdx.Net.HttpRequest", "location": "CLASS_FIELD", "param": "httpMethod"}, {"method": "ModelBatch(com.badlogic.gdx.graphics.g3d.utils.RenderContext,com.badlogic.gdx.graphics.g3d.utils.ShaderProvider,com.badlogic.gdx.graphics.g3d.utils.RenderableSorter)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/ModelBatch.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.ModelBatch", "location": "METHOD_PARAM", "param": "shaderProvider"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/CheckBox.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields checkboxOn (line 109), checkboxOff (line 109) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.CheckBox.CheckBoxStyle", "location": "CLASS_FIELD", "param": "checkboxOnDisabled"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ParticleChannels.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.particles", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.ParticleChannels.ScaleInitializer", "location": "CLASS_FIELD", "param": "instance"}, {"method": "insert(int,E)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/SortedIntList.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field iterator (line 33) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field previousPosition (line 155) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.SortedIntList", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.shaders", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.shaders.DefaultShader", "location": "CLASS_FIELD", "param": "defaultVertexShader"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelTexture.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelTexture", "location": "CLASS_FIELD", "param": "id"}, {"method": "get()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/async/AsyncResult.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils.async", "inject": "true", "class": "com.badlogic.gdx.utils.async.AsyncResult", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field atlas (line 66) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field atlas (line 66) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Skin.TintedDrawable", "location": "CLASS_FIELD", "param": "color"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression jsonMap.child is @Nullable"], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.JsonValue", "location": "CLASS_FIELD", "param": "child"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields font (line 431), fontColor (line 433) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field fontColor (line 433) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Label.LabelStyle", "location": "CLASS_FIELD", "param": "background"}, {"method": "unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/VertexBufferObject.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.glutils", "inject": "true", "class": "com.badlogic.gdx.graphics.glutils.VertexBufferObject", "location": "METHOD_PARAM", "param": "locations"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/TextureLoader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.TextureLoader.TextureLoaderInfo", "location": "CLASS_FIELD", "param": "filename"}, {"method": "loadEmitterImages(com.badlogic.gdx.graphics.g2d.TextureAtlas,java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/ParticleEffect.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.ParticleEffect", "location": "METHOD_PARAM", "param": "atlasPrefix"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DepthShader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.shaders", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.shaders.DepthShader", "location": "CLASS_FIELD", "param": "defaultFragmentShader"}, {"method": "entity(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/XmlReader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.XmlReader", "location": "METHOD_RETURN", "param": ""}, {"method": "getDeclaredAnnotation(java.lang.Class,java.lang.Class<? extends java.lang.annotation.Annotation>)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/reflect/ClassReflection.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils.reflect", "inject": "true", "class": "com.badlogic.gdx.utils.reflect.ClassReflection", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/Texture.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics", "inject": "true", "class": "com.badlogic.gdx.graphics.Texture", "location": "CLASS_FIELD", "param": "assetManager"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/PixmapPacker.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields splits (line 909), pads (line 911) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields splits (line 909), pads (line 911) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.PixmapPacker.GuillotineStrategy", "location": "CLASS_FIELD", "param": "comparator"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/UBJsonWriter.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.UBJsonWriter", "location": "CLASS_FIELD", "param": "current"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelMaterial.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelMaterial", "location": "CLASS_FIELD", "param": "reflection"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/AnimationController.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field previous (line 172) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields listener (line 74), animation (line 79) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.AnimationController", "location": "CLASS_FIELD", "param": "queued"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/DynamicsModifier.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 453) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field lifeChannel (line 453) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 46), accellerationChannel (line 46) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 46), accellerationChannel (line 46) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field strengthChannel (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field strengthChannel (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field angularChannel (line 130) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field angularChannel (line 130) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field rotationalVelocity2dChannel (line 201) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field rotationalVelocity2dChannel (line 201) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 231), rotationalForceChannel (line 231) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields rotationChannel (line 231), rotationalForceChannel (line 231) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields accelerationChannel (line 289), positionChannel (line 291) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields accelerationChannel (line 289), positionChannel (line 291) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field directionalVelocityChannel (line 334) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field directionalVelocityChannel (line 334) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields directionalVelocityChannel (line 373), positionChannel (line 373) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields directionalVelocityChannel (line 373), positionChannel (line 373) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression accelerationChannel is @Nullable"], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.DynamicsModifier.BrownianAcceleration", "location": "CLASS_FIELD", "param": "accelerationChannel"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/PixmapPacker.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields splits (line 909), pads (line 911) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields splits (line 909), pads (line 911) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.PixmapPacker.SkylineStrategy", "location": "CLASS_FIELD", "param": "comparator"}, {"method": "<T>getLoader(java.lang.Class<T>,java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/AssetManager.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.assets", "inject": "true", "class": "com.badlogic.gdx.assets.AssetManager", "location": "METHOD_RETURN", "param": ""}, {"method": "getOverItem()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/List.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field cullingArea (line 60) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields font (line 490), selection (line 496), down (line 498), over (line 498), background (line 498) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields down (line 498), over (line 498), background (line 498) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.List", "location": "METHOD_RETURN", "param": ""}, {"method": "getOverValue()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields foundNode (line 67), rangeStart (line 69) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field parent (line 676) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields parent (line 676), actor (line 674) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plus (line 1038), minus (line 1038), plusOver (line 1040), minusOver (line 1040), over (line 1043), selection (line 1043), background (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plusOver (line 1040), minusOver (line 1040), over (line 1043), background (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree", "location": "METHOD_RETURN", "param": ""}, {"method": "DefaultShaderProvider(com.badlogic.gdx.graphics.g3d.shaders.DefaultShader.Config)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/DefaultShaderProvider.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.DefaultShaderProvider", "location": "METHOD_PARAM", "param": "config"}, {"method": "findMethod(java.lang.Class,java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field atlas (line 66) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field atlas (line 66) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Skin", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field atlas (line 66) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field atlas (line 66) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Skin.TintedDrawable", "location": "CLASS_FIELD", "param": "name"}, {"method": "findNextTextField(com.badlogic.gdx.utils.Array<com.badlogic.gdx.scenes.scene2d.Actor>,com.badlogic.gdx.scenes.scene2d.ui.TextField,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field passwordBuffer (line 136) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields font (line 1222), fontColor (line 1224), focusedFontColor (line 1226), disabledFontColor (line 1226), background (line 1229), focusedBackground (line 1229), disabledBackground (line 1229), cursor (line 1229), selection (line 1229), messageFont (line 1232), messageFontColor (line 1235) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 1224), focusedFontColor (line 1226), disabledFontColor (line 1226), messageFontColor (line 1235) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields focusedFontColor (line 1226), disabledFontColor (line 1226), focusedBackground (line 1229), disabledBackground (line 1229), messageFont (line 1232), messageFontColor (line 1235) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField", "location": "METHOD_PARAM", "param": "best"}, {"method": "ModelBatch(com.badlogic.gdx.graphics.g3d.utils.RenderContext,com.badlogic.gdx.graphics.g3d.utils.ShaderProvider,com.badlogic.gdx.graphics.g3d.utils.RenderableSorter)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/ModelBatch.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.ModelBatch", "location": "METHOD_PARAM", "param": "context"}, {"method": "put(long,V)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/LongMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zeroValue (line 52), entries1 (line 79), entries2 (line 79), values1 (line 81), values2 (line 81), keys1 (line 83), keys2 (line 83) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.LongMap", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/TextureLoader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.TextureLoader.TextureParameter", "location": "CLASS_FIELD", "param": "textureData"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/LongMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'entry.value' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull fields zeroValue (line 52), entries1 (line 79), entries2 (line 79), values1 (line 81), values2 (line 81), keys1 (line 83), keys2 (line 83) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.LongMap.Entry", "location": "CLASS_FIELD", "param": "value"}, {"method": "remove(int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.JsonValue", "location": "METHOD_RETURN", "param": ""}, {"method": "findController(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ParticleEffect.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.particles", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.ParticleEffect", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/List.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field cullingArea (line 60) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields font (line 489), selection (line 495) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.List.ListStyle", "location": "CLASS_FIELD", "param": "background"}, {"method": "getAnnotation(java.lang.Class,java.lang.Class<? extends java.lang.annotation.Annotation>)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/reflect/ClassReflection.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils.reflect", "inject": "true", "class": "com.badlogic.gdx.utils.reflect.ClassReflection", "location": "METHOD_RETURN", "param": ""}, {"method": "set(com.badlogic.gdx.graphics.g2d.Sprite)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/Sprite.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.Sprite", "location": "METHOD_PARAM", "param": "sprite"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/KTXTextureData.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression compressedData is @Nullable"], "jump": -1, "pkg": "com.badlogic.gdx.graphics.glutils", "inject": "true", "class": "com.badlogic.gdx.graphics.glutils.KTXTextureData", "location": "CLASS_FIELD", "param": "compressedData"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelNode.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelNode", "location": "CLASS_FIELD", "param": "meshId"}, {"method": "<K>findInfluencer(java.lang.Class<K>)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ParticleController.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields name (line 52), particleChannels (line 74) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.particles", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.ParticleController", "location": "METHOD_RETURN", "param": ""}, {"method": "readString(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/files/FileHandle.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields file (line 61), type (line 63) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.files", "inject": "true", "class": "com.badlogic.gdx.files.FileHandle", "location": "METHOD_PARAM", "param": "charset"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/DefaultShader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.shaders", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.shaders.DefaultShader.Config", "location": "CLASS_FIELD", "param": "vertexShader"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/List.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field cullingArea (line 60) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields font (line 489), selection (line 495) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.List.ListStyle", "location": "CLASS_FIELD", "param": "down"}, {"method": "setColor(com.badlogic.gdx.graphics.Color)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter '!(hasColor = (color != null)) ? Color.WHITE : color' where @NonNull is required"], "jump": -1, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.MeshBuilder", "location": "METHOD_PARAM", "param": "color"}, {"method": "loadModel(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.g3d.utils.TextureProvider,P)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/ModelLoader.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'parameters' where @NonNull is required"], "jump": -1, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.ModelLoader", "location": "METHOD_PARAM", "param": "parameters"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Select.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Select", "location": "CLASS_FIELD", "param": "instance"}, {"method": "Texture(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap.Format,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/Texture.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics", "inject": "true", "class": "com.badlogic.gdx.graphics.Texture", "location": "METHOD_PARAM", "param": "format"}, {"method": "ShapeRenderer(int,com.badlogic.gdx.graphics.glutils.ShaderProgram)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.glutils", "inject": "true", "class": "com.badlogic.gdx.graphics.glutils.ShapeRenderer", "location": "METHOD_PARAM", "param": "defaultShader"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'entry.value' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull fields zeroValue (line 52), entries1 (line 79), entries2 (line 79), values1 (line 81), values2 (line 81), keys1 (line 83), keys2 (line 83) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.IntMap.Entry", "location": "CLASS_FIELD", "param": "value"}, {"method": "<T>readValue(java.lang.String,java.lang.Class<T>,com.badlogic.gdx.utils.JsonValue)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'type' where @NonNull is required"], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Json", "location": "METHOD_PARAM", "param": "type"}, {"method": "SerializationException(java.lang.String,java.lang.Throwable)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/SerializationException.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.SerializationException", "location": "METHOD_PARAM", "param": "cause"}, {"method": "unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/VertexBufferObjectWithVAO.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -1, "pkg": "com.badlogic.gdx.graphics.glutils", "inject": "true", "class": "com.badlogic.gdx.graphics.glutils.VertexBufferObjectWithVAO", "location": "METHOD_PARAM", "param": "locations"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields font (line 1223), fontColor (line 1225), focusedFontColor (line 1227), disabledFontColor (line 1227), background (line 1230), focusedBackground (line 1230), disabledBackground (line 1230), cursor (line 1230), selection (line 1230), messageFont (line 1233), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 1225), focusedFontColor (line 1227), disabledFontColor (line 1227), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields focusedFontColor (line 1227), disabledFontColor (line 1227), focusedBackground (line 1230), disabledBackground (line 1230), messageFont (line 1233), messageFontColor (line 1236) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField", "location": "CLASS_FIELD", "param": "passwordBuffer"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.MeshBuilder", "location": "CLASS_FIELD", "param": "part"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelNode.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelNode", "location": "CLASS_FIELD", "param": "rotation"}, {"method": "hit(float,float,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.Actor", "location": "METHOD_RETURN", "param": ""}, {"method": "add(T)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Array.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields iterable (line 45), predicateIterable (line 47) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields iterable (line 45), predicateIterable (line 47) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields iterator1 (line 812), iterator2 (line 812) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Array", "location": "METHOD_PARAM", "param": "value"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Queue.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields iterator1 (line 559), iterator2 (line 559) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Queue", "location": "CLASS_FIELD", "param": "iterable"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/OrderedSet.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression iterator2 is @Nullable", "dereferenced expression iterator2 is @Nullable"], "jump": -2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.OrderedSet", "location": "CLASS_FIELD", "param": "iterator2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/values/UnweightedMeshSpawnShapeValue.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.graphics.g3d.particles.values", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.values.UnweightedMeshSpawnShapeValue", "location": "CLASS_FIELD", "param": "indices"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Predicate.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Predicate.PredicateIterator", "location": "CLASS_FIELD", "param": "next"}, {"method": "writeField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Json", "location": "METHOD_PARAM", "param": "elementType"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'previousScrollFocus' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull fields font (line 641), overFontColor (line 645), disabledFontColor (line 645), background (line 648), scrollStyle (line 651), listStyle (line 653), backgroundOver (line 655), backgroundOpen (line 655), backgroundDisabled (line 655) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields overFontColor (line 645), disabledFontColor (line 645), backgroundOver (line 655), backgroundOpen (line 655), backgroundDisabled (line 655) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields overFontColor (line 645), disabledFontColor (line 645) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.SelectBox.SelectBoxList", "location": "CLASS_FIELD", "param": "previousScrollFocus"}, {"method": "getDeclaredAnnotation(java.lang.Class<? extends java.lang.annotation.Annotation>)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/reflect/Field.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.utils.reflect", "inject": "true", "class": "com.badlogic.gdx.utils.reflect.Field", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields up (line 314), down (line 314), over (line 314), focused (line 314), disabled (line 314), checked (line 317), checkedOver (line 317), checkedDown (line 317), checkedFocused (line 317) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields over (line 314), focused (line 314), disabled (line 314), checkedOver (line 317), checkedDown (line 317), checkedFocused (line 317) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Button", "location": "CLASS_FIELD", "param": "buttonGroup"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/ParticleShader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.graphics.g3d.particles", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.ParticleShader", "location": "CLASS_FIELD", "param": "currentMaterial"}, {"method": "setText(com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.CharSequence,int,int,com.badlogic.gdx.graphics.Color,float,int,boolean,java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/GlyphLayout.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.GlyphLayout", "location": "METHOD_PARAM", "param": "truncate"}, {"method": "setParent(com.badlogic.gdx.scenes.scene2d.Group)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.Actor", "location": "METHOD_PARAM", "param": "parent"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelNode.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelNode", "location": "CLASS_FIELD", "param": "translation"}, {"method": "writeObjectStart(java.lang.Class,java.lang.Class)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Json", "location": "METHOD_PARAM", "param": "knownType"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "errors": ["unboxing of a @Nullable value", "unboxing of a @Nullable value"], "jump": -2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "uniformX"}, {"method": "SpriteBatch(int,com.badlogic.gdx.graphics.glutils.ShaderProgram)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/SpriteBatch.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.SpriteBatch", "location": "METHOD_PARAM", "param": "defaultShader"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/TemporalAction.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.actions.TemporalAction", "location": "CLASS_FIELD", "param": "interpolation"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/model/data/ModelNode.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.graphics.g3d.model.data", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.model.data.ModelNode", "location": "CLASS_FIELD", "param": "scale"}, {"method": "ModelInstance(com.badlogic.gdx.graphics.g3d.Model,com.badlogic.gdx.math.Matrix4,java.lang.String,boolean,boolean,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/ModelInstance.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field userData (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field userData (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field userData (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field userData (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter '(String[]) null' where @NonNull is required", "(Covered) passing @Nullable parameter 'transform' where @NonNull is required", "(Covered) passing @Nullable parameter '(String[]) null' where @NonNull is required"], "jump": -2, "pkg": "com.badlogic.gdx.graphics.g3d", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.ModelInstance", "location": "METHOD_PARAM", "param": "transform"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/I18NBundle.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.I18NBundle", "location": "CLASS_FIELD", "param": "parent"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "errors": ["unboxing of a @Nullable value", "unboxing of a @Nullable value"], "jump": -2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "uniformY"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/XmlWriter.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.XmlWriter", "location": "CLASS_FIELD", "param": "currentElement"}, {"method": "getDefaultValues(java.lang.Class)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Json", "location": "METHOD_RETURN", "param": ""}, {"method": "get(long)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/LongMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zeroValue (line 52), entries1 (line 79), entries2 (line 79), values1 (line 81), values2 (line 81), keys1 (line 83), keys2 (line 83) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.LongMap", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/SortedIntList.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field iterator (line 33) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.SortedIntList.Iterator", "location": "CLASS_FIELD", "param": "previousPosition"}, {"method": "remove(long)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/LongMap.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zeroValue (line 52), entries1 (line 79), entries2 (line 79), values1 (line 81), values2 (line 81), keys1 (line 83), keys2 (line 83) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.LongMap", "location": "METHOD_RETURN", "param": ""}, {"method": "getDeclaredAnnotation(java.lang.Class<? extends java.lang.annotation.Annotation>)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/reflect/Method.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.utils.reflect", "inject": "true", "class": "com.badlogic.gdx.utils.reflect.Method", "location": "METHOD_RETURN", "param": ""}, {"method": "hit(float,float,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Touchpad.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) method returns @Nullable, but superclass method com.badlogic.gdx.scenes.scene2d.Actor.hit(float,float,boolean) returns @NonNull", "(Covered) initializer method does not guarantee @NonNull fields background (line 273), knob (line 276) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Touchpad", "location": "METHOD_RETURN", "param": ""}, {"method": "getGlyphs(com.badlogic.gdx.graphics.g2d.GlyphLayout.GlyphRun,java.lang.CharSequence,int,int,com.badlogic.gdx.graphics.g2d.BitmapFont.Glyph)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFont.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field fontFile (line 544) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -2, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData", "location": "METHOD_PARAM", "param": "lastGlyph"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/shaders/BaseShader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.graphics.g3d.shaders", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.shaders.BaseShader", "location": "CLASS_FIELD", "param": "currentMesh"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/CubemapLoader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.CubemapLoader.CubemapLoaderInfo", "location": "CLASS_FIELD", "param": "cubemap"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TooltipManager.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TooltipManager", "location": "CLASS_FIELD", "param": "showTooltip"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/PooledLinkedList.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.PooledLinkedList", "location": "CLASS_FIELD", "param": "curr"}, {"method": "setUVRange(com.badlogic.gdx.graphics.g2d.TextureRegion)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshBuilder.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.MeshBuilder", "location": "METHOD_PARAM", "param": "region"}, {"method": "copyStreamToString(java.io.InputStream,int,java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/StreamUtils.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.StreamUtils", "location": "METHOD_PARAM", "param": "charset"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/TextureLoader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.TextureLoader.TextureLoaderInfo", "location": "CLASS_FIELD", "param": "texture"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ArraySelection.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.utils.ArraySelection", "location": "CLASS_FIELD", "param": "rangeStart"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/I18NBundleLoader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.I18NBundleLoader", "location": "CLASS_FIELD", "param": "bundle"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/PixmapLoader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "class": "com.badlogic.gdx.assets.loaders.PixmapLoader", "location": "CLASS_FIELD", "param": "pixmap"}, {"method": "getChildByNameRecursive(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/XmlReader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.XmlReader.Element", "location": "METHOD_RETURN", "param": ""}, {"method": "localToAscendantCoordinates(com.badlogic.gdx.scenes.scene2d.Actor,com.badlogic.gdx.math.Vector2)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.Actor", "location": "METHOD_PARAM", "param": "ascendant"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/OrderedSet.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression iterator2 is @Nullable", "dereferenced expression iterator2 is @Nullable"], "jump": -2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.OrderedSet", "location": "CLASS_FIELD", "param": "iterator1"}, {"method": "addText(java.lang.CharSequence,float,float,int,int,float,int,boolean,java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'truncate' where @NonNull is required"], "jump": -2, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "class": "com.badlogic.gdx.graphics.g2d.BitmapFontCache", "location": "METHOD_PARAM", "param": "truncate"}, {"method": "readField(java.lang.Object,java.lang.String,java.lang.String,java.lang.Class,com.badlogic.gdx.utils.JsonValue)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Json", "location": "METHOD_PARAM", "param": "elementType"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/Renderable.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -3, "pkg": "com.badlogic.gdx.graphics.g3d", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.Renderable", "location": "CLASS_FIELD", "param": "userData"}, {"method": "setPool(com.badlogic.gdx.utils.Pool)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Action.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) @NonNull field pool not initialized"], "jump": -3, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.Action", "location": "METHOD_PARAM", "param": "pool"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/ModelInstance.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter '(String[]) null' where @NonNull is required", "(Covered) passing @Nullable parameter '(String[]) null' where @NonNull is required"], "jump": -3, "pkg": "com.badlogic.gdx.graphics.g3d", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.ModelInstance", "location": "CLASS_FIELD", "param": "userData"}, {"method": "alpha(float,float,com.badlogic.gdx.math.Interpolation)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/Actions.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'interpolation' where @NonNull is required"], "jump": -3, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.actions.Actions", "location": "METHOD_PARAM", "param": "interpolation"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/particles/influencers/RegionInfluencer.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field regionChannel (line 226) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression lifeChannel is @Nullable"], "jump": -3, "pkg": "com.badlogic.gdx.graphics.g3d.particles.influencers", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.particles.influencers.RegionInfluencer.Animated", "location": "CLASS_FIELD", "param": "lifeChannel"}, {"method": "calculateRadius(float,float,float,int,int,com.badlogic.gdx.math.Matrix4)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/Mesh.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'transform' where @NonNull is required"], "jump": -3, "pkg": "com.badlogic.gdx.graphics", "inject": "true", "class": "com.badlogic.gdx.graphics.Mesh", "location": "METHOD_PARAM", "param": "transform"}, {"method": "bool(java.lang.String,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonReader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -3, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.JsonReader", "location": "METHOD_PARAM", "param": "name"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/SnapshotArray.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -3, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.SnapshotArray", "location": "CLASS_FIELD", "param": "snapshot"}, {"method": "glBufferData(int,int,java.nio.Buffer,int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/GL20.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) parameter data is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.GL20.glBufferData(int,int,java.nio.Buffer,int) is @Nullable", "(Covered) parameter data is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.GL20.glBufferData(int,int,java.nio.Buffer,int) is @Nullable"], "jump": -3, "pkg": "com.badlogic.gdx.graphics", "inject": "true", "class": "com.badlogic.gdx.graphics.GL20", "location": "METHOD_PARAM", "param": "data"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/SnapshotArray.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -3, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.SnapshotArray", "location": "CLASS_FIELD", "param": "recycled"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/Renderable.java", "annotation": "javax.annotation.Nullable", "errors": ["dereferenced expression renderable.environment is @Nullable"], "jump": -3, "pkg": "com.badlogic.gdx.graphics.g3d", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.Renderable", "location": "CLASS_FIELD", "param": "environment"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SplitPane.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field handle (line 454) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -4, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.SplitPane", "location": "CLASS_FIELD", "param": "firstWidget"}, {"method": "set(com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder.VertexInfo)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g3d/utils/MeshPartBuilder.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -4, "pkg": "com.badlogic.gdx.graphics.g3d.utils", "inject": "true", "class": "com.badlogic.gdx.graphics.g3d.utils.MeshPartBuilder.VertexInfo", "location": "METHOD_PARAM", "param": "other"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextArea.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -4, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.TextArea", "location": "CLASS_FIELD", "param": "lastText"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Timer.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field instance (line 316) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -4, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Timer.Task", "location": "CLASS_FIELD", "param": "timer"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Dialog.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field skin (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'previousKeyboardFocus' where @NonNull is required", "(Covered) passing @Nullable parameter 'previousScrollFocus' where @NonNull is required"], "jump": -4, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Dialog", "location": "CLASS_FIELD", "param": "previousScrollFocus"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SplitPane.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field handle (line 454) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -4, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.SplitPane", "location": "CLASS_FIELD", "param": "secondWidget"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Dialog.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field skin (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'previousKeyboardFocus' where @NonNull is required", "(Covered) passing @Nullable parameter 'previousScrollFocus' where @NonNull is required"], "jump": -4, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.ui.Dialog", "location": "CLASS_FIELD", "param": "previousKeyboardFocus"}, {"method": "check(com.badlogic.gdx.graphics.glutils.ShapeRenderer.ShapeType,com.badlogic.gdx.graphics.glutils.ShapeRenderer.ShapeType,int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -5, "pkg": "com.badlogic.gdx.graphics.glutils", "inject": "true", "class": "com.badlogic.gdx.graphics.glutils.ShapeRenderer", "location": "METHOD_PARAM", "param": "other"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/Selection.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -5, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "inject": "true", "class": "com.badlogic.gdx.scenes.scene2d.utils.Selection", "location": "CLASS_FIELD", "param": "lastSelected"}, {"method": "intersectSegments(float,float,float,float,float,float,float,float,com.badlogic.gdx.math.Vector2)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/math/Intersector.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -5, "pkg": "com.badlogic.gdx.math", "inject": "true", "class": "com.badlogic.gdx.math.Intersector", "location": "METHOD_PARAM", "param": "intersection"}, {"method": "get(java.lang.String,java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/XmlReader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -6, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.XmlReader.Element", "location": "METHOD_PARAM", "param": "defaultValue"}, {"method": "writeValue(java.lang.Object,java.lang.Class,java.lang.Class)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'elementType' where @NonNull is required", "(Covered) passing @Nullable parameter 'elementType' where @NonNull is required", "(Covered) passing @Nullable parameter 'elementType' where @NonNull is required", "(Covered) passing @Nullable parameter 'elementType' where @NonNull is required", "(Covered) passing @Nullable parameter 'elementType' where @NonNull is required", "(Covered) passing @Nullable parameter 'elementType' where @NonNull is required", "(Covered) passing @Nullable parameter 'elementType' where @NonNull is required", "(Covered) passing @Nullable parameter 'elementType' where @NonNull is required", "(Covered) passing @Nullable parameter 'elementType' where @NonNull is required", "(Covered) passing @Nullable parameter 'elementType' where @NonNull is required"], "jump": -6, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Json", "location": "METHOD_PARAM", "param": "elementType"}, {"method": "<T>readValue(java.lang.Class<T>,java.lang.Class,com.badlogic.gdx.utils.JsonValue)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) passing @Nullable parameter 'elementType' where @NonNull is required", "(Covered) passing @Nullable parameter 'elementType' where @NonNull is required", "(Covered) passing @Nullable parameter 'elementType' where @NonNull is required", "(Covered) passing @Nullable parameter 'elementType' where @NonNull is required", "(Covered) passing @Nullable parameter 'elementType' where @NonNull is required", "(Covered) passing @Nullable parameter 'elementType' where @NonNull is required", "(Covered) passing @Nullable parameter 'elementType' where @NonNull is required", "(Covered) passing @Nullable parameter 'elementType' where @NonNull is required", "(Covered) passing @Nullable parameter 'elementType' where @NonNull is required", "(Covered) parameter elementType is @NonNull, but parameter in superclass method com.badlogic.gdx.utils.Json.<T>readValue(java.lang.Class<T>,java.lang.Class,com.badlogic.gdx.utils.JsonValue) is @Nullable"], "jump": -10, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.Json", "location": "METHOD_PARAM", "param": "elementType"}, {"method": "getString(java.lang.String,java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "errors": ["(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field child (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "jump": -11, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.JsonValue", "location": "METHOD_PARAM", "param": "defaultValue"}, {"method": "closeQuietly(java.io.Closeable)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/StreamUtils.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -16, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.StreamUtils", "location": "METHOD_PARAM", "param": "c"}, {"method": "getAttribute(java.lang.String,java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/XmlReader.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -22, "pkg": "com.badlogic.gdx.utils", "inject": "true", "class": "com.badlogic.gdx.utils.XmlReader.Element", "location": "METHOD_PARAM", "param": "defaultValue"}, {"method": "PixmapTextureData(com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap.Format,boolean,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/PixmapTextureData.java", "annotation": "javax.annotation.Nullable", "errors": [], "jump": -27, "pkg": "com.badlogic.gdx.graphics.glutils", "inject": "true", "class": "com.badlogic.gdx.graphics.glutils.PixmapTextureData", "location": "METHOD_PARAM", "param": "format"}, {"method": "<T>get(T)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "jump": 51, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": ["dereferenced expression shaders.get(Gdx.app) is @Nullable", "dereferenced expression shaders.get(app) is @Nullable", "dereferenced expression shaders.get(Gdx.app) is @Nullable", "dereferenced expression assets.get(type) is @Nullable", "dereferenced expression assetRef is @Nullable", "dereferenced expression assets.get(type) is @Nullable", "dereferenced expression assetsByType.get(fileName) is @Nullable", "dereferenced expression assetsByType is @Nullable", "dereferenced expression assetsByType.get(fileName) is @Nullable", "dereferenced expression assets.get(type) is @Nullable", "dereferenced expression assetRef is @Nullable", "dereferenced expression assets.get(type) is @Nullable", "dereferenced expression assetRef is @Nullable", "dereferenced expression assets.get(type) is @Nullable", "dereferenced expression assetRef is @Nullable", "dereferenced expression assets.get(type).get(fileName) is @Nullable", "dereferenced expression assets.get(type) is @Nullable", "dereferenced expression assets.get(type).get(fileName) is @Nullable", "dereferenced expression assets.get(type) is @Nullable", "dereferenced expression assets.get(type) is @Nullable", "dereferenced expression assetRef is @Nullable", "(Covered) passing @Nullable parameter 'pageToTexture.get(region.page)' where @NonNull is required", "dereferenced expression metadata is @Nullable", "dereferenced expression metadata is @Nullable", "dereferenced expression metadata is @Nullable", "dereferenced expression metadata is @Nullable", "dereferenced expression typeResources is @Nullable", "(Covered) passing @Nullable parameter 'map.get((T) key)' where @NonNull is required", "(Covered) passing @Nullable parameter 'values.get(actor)' where @NonNull is required", "dereferenced expression rect is @Nullable", "dereferenced expression rect is @Nullable", "dereferenced expression texture is @Nullable", "(Covered) passing @Nullable parameter 'images.get(name)' where @NonNull is required"], "class": "com.badlogic.gdx.utils.ObjectMap", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "jump": 43, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'a' where @NonNull is required", "(Covered) passing @Nullable parameter 'c.actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'c.actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'c.actor' where @NonNull is required", "(Covered) passing @Nullable parameter 'c.actor' where @NonNull is required"], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "actor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "jump": 27, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": ["dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable", "dereferenced expression writer is @Nullable"], "class": "com.badlogic.gdx.utils.Json", "location": "CLASS_FIELD", "param": "writer"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Action.java", "annotation": "javax.annotation.Nullable", "jump": 24, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.Action", "location": "CLASS_FIELD", "param": "target"}, {"method": "<T>readValue(java.lang.Class<T>,java.lang.Class,com.badlogic.gdx.utils.JsonValue)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "jump": 24, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'readValue(field.getType(), elementType, jsonValue)' where @NonNull is required", "(Covered) passing @Nullable parameter 'readValue(field.getType(), metadata.elementType, child)' where @NonNull is required", "(Covered) passing @Nullable parameter 'readValue(elementType, null, child)' where @NonNull is required", "(Covered) passing @Nullable parameter 'readValue(elementType, null, child)' where @NonNull is required", "(Covered) passing @Nullable parameter 'readValue(elementType, null, child)' where @NonNull is required", "(Covered) passing @Nullable parameter 'readValue(elementType, null, child)' where @NonNull is required", "(Covered) passing @Nullable parameter 'readValue(elementType, null, child)' where @NonNull is required", "(Covered) passing @Nullable parameter 'readValue(elementType, null, child)' where @NonNull is required"], "class": "com.badlogic.gdx.utils.Json", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "jump": 21, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["dereferenced expression rangeStart.actor is @Nullable", "dereferenced expression node.actor is @Nullable", "dereferenced expression node.actor is @Nullable", "dereferenced expression node.actor is @Nullable", "dereferenced expression rootNodes.get(index + 1).actor is @Nullable", "dereferenced expression before.actor is @Nullable", "dereferenced expression node.actor is @Nullable", "dereferenced expression actor is @Nullable", "dereferenced expression node.actor is @Nullable", "dereferenced expression actor is @Nullable", "dereferenced expression node.actor is @Nullable", "dereferenced expression node.actor is @Nullable", "dereferenced expression actor is @Nullable", "dereferenced expression actor is @Nullable", "dereferenced expression children.get(childIndex + 1).actor is @Nullable", "dereferenced expression before.actor is @Nullable", "dereferenced expression node.actor is @Nullable", "dereferenced expression actor is @Nullable", "dereferenced expression actor is @Nullable", "dereferenced expression actor is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields plus (line 1043), minus (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree.Node", "location": "CLASS_FIELD", "param": "actor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "jump": 18, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["dereferenced expression style.font is @Nullable", "dereferenced expression style.font is @Nullable", "dereferenced expression style.font is @Nullable", "(Covered) passing @Nullable parameter 'font' where @NonNull is required", "(Covered) passing @Nullable parameter 'font' where @NonNull is required", "dereferenced expression font is @Nullable", "dereferenced expression font is @Nullable", "dereferenced expression style.font is @Nullable", "dereferenced expression style.font is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 1226), background (line 1232), focusedBackground (line 1232), disabledBackground (line 1232), cursor (line 1232), selection (line 1232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field fontColor (line 1226) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields focusedBackground (line 1232), disabledBackground (line 1232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression style.font is @Nullable", "dereferenced expression style.font is @Nullable", "dereferenced expression font is @Nullable", "dereferenced expression style.font is @Nullable", "dereferenced expression style.font is @Nullable", "(Covered) passing @Nullable parameter 'font' where @NonNull is required", "dereferenced expression style.font is @Nullable", "dereferenced expression font is @Nullable", "dereferenced expression font is @Nullable"], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldStyle", "location": "CLASS_FIELD", "param": "font"}, {"method": "asString()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "jump": 17, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'object.asString()' where @NonNull is required", "(Covered) passing @Nullable parameter 'object.asString()' where @NonNull is required", "(Covered) passing @Nullable parameter 'object.asString()' where @NonNull is required", "(Covered) passing @Nullable parameter 'jsonData.asString()' where @NonNull is required", "(Covered) passing @Nullable parameter 'jsonData.asString()' where @NonNull is required", "dereferenced expression string is @Nullable", "dereferenced expression string is @Nullable", "(Covered) passing @Nullable parameter 'jsonData.asString()' where @NonNull is required", "(Covered) passing @Nullable parameter 'jsonData.asString()' where @NonNull is required", "dereferenced expression attr is @Nullable", "(Covered) passing @Nullable parameter 'value.asString()' where @NonNull is required"], "class": "com.badlogic.gdx.utils.JsonValue", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "jump": 14, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": ["dereferenced expression entry.key is @Nullable", "dereferenced expression entry.key is @Nullable", "dereferenced expression e.key is @Nullable", "(Covered) passing @Nullable parameter 'b.key' where @NonNull is required", "dereferenced expression entry.key is @Nullable", "dereferenced expression items.get(i).key is @Nullable", "dereferenced expression entry.key is @Nullable", "dereferenced expression e.key is @Nullable"], "class": "com.badlogic.gdx.utils.ObjectMap.Entry", "location": "CLASS_FIELD", "param": "key"}, {"method": "getListenerActor()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Event.java", "annotation": "javax.annotation.Nullable", "jump": 12, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'event.getListenerActor()' where @NonNull is required", "(Covered) passing @Nullable parameter 'event.getListenerActor()' where @NonNull is required", "dereferenced expression event.getListenerActor() is @Nullable", "(Covered) passing @Nullable parameter 'event.getListenerActor()' where @NonNull is required", "(Covered) passing @Nullable parameter 'event.getListenerActor()' where @NonNull is required", "(Covered) passing @Nullable parameter 'event.getListenerActor()' where @NonNull is required", "(Covered) passing @Nullable parameter 'event.getListenerActor()' where @NonNull is required", "(Covered) passing @Nullable parameter 'event.getListenerActor()' where @NonNull is required"], "class": "com.badlogic.gdx.scenes.scene2d.Event", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "jump": 12, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "colspan"}, {"method": "findByUsage(int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/VertexAttributes.java", "annotation": "javax.annotation.Nullable", "jump": 11, "pkg": "com.badlogic.gdx.graphics", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields iterator1 (line 295), iterator2 (line 295) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression CPU_ATTRIBUTES.findByUsage(Usage.Position) is @Nullable", "dereferenced expression CPU_ATTRIBUTES.findByUsage(Usage.ColorUnpacked) is @Nullable", "dereferenced expression CPU_ATTRIBUTES.findByUsage(Usage.TextureCoordinates) is @Nullable", "dereferenced expression CPU_ATTRIBUTES.findByUsage(sizeAndRotationUsage) is @Nullable", "dereferenced expression GPU_ATTRIBUTES.findByUsage(Usage.Position) is @Nullable", "dereferenced expression GPU_ATTRIBUTES.findByUsage(Usage.TextureCoordinates) is @Nullable", "dereferenced expression GPU_ATTRIBUTES.findByUsage(sizeAndRotationUsage) is @Nullable", "dereferenced expression GPU_ATTRIBUTES.findByUsage(Usage.ColorUnpacked) is @Nullable", "dereferenced expression CPU_ATTRIBUTES.findByUsage(Usage.Position) is @Nullable", "dereferenced expression CPU_ATTRIBUTES.findByUsage(Usage.TextureCoordinates) is @Nullable", "dereferenced expression CPU_ATTRIBUTES.findByUsage(Usage.ColorUnpacked) is @Nullable", "dereferenced expression attributes.findByUsage(Usage.Position) is @Nullable"], "class": "com.badlogic.gdx.graphics.VertexAttributes", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "jump": 10, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": ["dereferenced expression asset.value is @Nullable", "dereferenced expression entry.value is @Nullable", "dereferenced expression entry.value is @Nullable", "dereferenced expression e.value is @Nullable", "(Covered) passing @Nullable parameter 'b.value' where @NonNull is required", "dereferenced expression entry.value is @Nullable", "dereferenced expression e.value is @Nullable"], "class": "com.badlogic.gdx.utils.ObjectMap.Entry", "location": "CLASS_FIELD", "param": "value"}, {"method": "<T>readValue(java.lang.String,java.lang.Class<T>,T,com.badlogic.gdx.utils.JsonValue)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "jump": 9, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.utils.Json", "location": "METHOD_RETURN", "param": ""}, {"method": "resolve(com.badlogic.gdx.assets.loaders.AssetLoader,com.badlogic.gdx.assets.AssetDescriptor)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/AssetLoadingTask.java", "annotation": "javax.annotation.Nullable", "jump": 9, "pkg": "com.badlogic.gdx.assets", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'resolve(loader, assetDesc)' where @NonNull is required", "(Covered) passing @Nullable parameter 'resolve(loader, assetDesc)' where @NonNull is required", "(Covered) passing @Nullable parameter 'resolve(loader, assetDesc)' where @NonNull is required", "(Covered) passing @Nullable parameter 'resolve(loader, assetDesc)' where @NonNull is required", "(Covered) passing @Nullable parameter 'resolve(loader, assetDesc)' where @NonNull is required", "(Covered) passing @Nullable parameter 'resolve(loader, assetDesc)' where @NonNull is required", "(Covered) passing @Nullable parameter 'resolve(loader, assetDesc)' where @NonNull is required", "(Covered) passing @Nullable parameter 'resolve(loader, assetDesc)' where @NonNull is required", "(Covered) passing @Nullable parameter 'resolve(loader, assetDesc)' where @NonNull is required", "(Covered) passing @Nullable parameter 'resolve(loader, assetDesc)' where @NonNull is required"], "class": "com.badlogic.gdx.assets.AssetLoadingTask", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/files/FileHandle.java", "annotation": "javax.annotation.Nullable", "jump": 8, "pkg": "com.badlogic.gdx.files", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull field file (line 61) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "switch expression type is @Nullable", "switch expression type is @Nullable", "dereferenced expression type is @Nullable"], "class": "com.badlogic.gdx.files.FileHandle", "location": "CLASS_FIELD", "param": "type"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java", "annotation": "javax.annotation.Nullable", "jump": 7, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "errors": ["dereferenced expression regions.get(i).name is @Nullable", "dereferenced expression region.name is @Nullable", "dereferenced expression region.name is @Nullable", "dereferenced expression regions.get(i).name is @Nullable", "dereferenced expression region.name is @Nullable", "dereferenced expression region.name is @Nullable", "dereferenced expression region.name is @Nullable"], "class": "com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion", "location": "CLASS_FIELD", "param": "name"}, {"method": "getTransformedVertices()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/math/Polygon.java", "annotation": "javax.annotation.Nullable", "jump": 7, "pkg": "com.badlogic.gdx.math", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'vertices' where @NonNull is required", "dereferenced expression vertices is @Nullable", "dereferenced expression vertices is @Nullable", "dereferenced expression vertices is @Nullable", "(Covered) passing @Nullable parameter 'p1.getTransformedVertices()' where @NonNull is required", "dereferenced expression vertices2 is @Nullable", "dereferenced expression vertices is @Nullable", "dereferenced expression vertices is @Nullable", "(Covered) passing @Nullable parameter 'p1.getTransformedVertices()' where @NonNull is required"], "class": "com.badlogic.gdx.math.Polygon", "location": "METHOD_RETURN", "param": ""}, {"method": "getTarget()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Event.java", "annotation": "javax.annotation.Nullable", "jump": 6, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'event.getTarget()' where @NonNull is required", "(Covered) passing @Nullable parameter 'event.getTarget()' where @NonNull is required", "(Covered) passing @Nullable parameter 'event.getTarget()' where @NonNull is required", "(Covered) passing @Nullable parameter 'event.getTarget()' where @NonNull is required", "(Covered) passing @Nullable parameter 'event.getTarget()' where @NonNull is required", "(Covered) passing @Nullable parameter 'target' where @NonNull is required"], "class": "com.badlogic.gdx.scenes.scene2d.Event", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java", "annotation": "javax.annotation.Nullable", "jump": 5, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Container", "location": "CLASS_FIELD", "param": "actor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java", "annotation": "javax.annotation.Nullable", "jump": 5, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["dereferenced expression font is @Nullable", "dereferenced expression font is @Nullable", "dereferenced expression font is @Nullable", "dereferenced expression font is @Nullable", "(Covered) passing @Nullable parameter 'style.font' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull fields background (line 650), scrollStyle (line 653), listStyle (line 655) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.badlogic.gdx.scenes.scene2d.ui.SelectBox.SelectBoxStyle", "location": "CLASS_FIELD", "param": "font"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java", "annotation": "javax.annotation.Nullable", "jump": 5, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'style.scrollStyle' where @NonNull is required", "dereferenced expression scrollStyle is @Nullable", "dereferenced expression style.scrollStyle is @Nullable", "(Covered) passing @Nullable parameter 'selectBox.style.scrollStyle' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull fields font (line 641), background (line 649), listStyle (line 655) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'style.scrollStyle' where @NonNull is required"], "class": "com.badlogic.gdx.scenes.scene2d.ui.SelectBox.SelectBoxStyle", "location": "CLASS_FIELD", "param": "scrollStyle"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextButton.java", "annotation": "javax.annotation.Nullable", "jump": 4, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'style.font' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 164), downFontColor (line 164), overFontColor (line 164), focusedFontColor (line 164), disabledFontColor (line 164) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 164), downFontColor (line 164), overFontColor (line 164), focusedFontColor (line 164), disabledFontColor (line 164) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields fontColor (line 164), downFontColor (line 164), overFontColor (line 164), focusedFontColor (line 164), disabledFontColor (line 164) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'style.font' where @NonNull is required"], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextButton.TextButtonStyle", "location": "CLASS_FIELD", "param": "font"}, {"method": "getStage()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Event.java", "annotation": "javax.annotation.Nullable", "jump": 4, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "errors": ["dereferenced expression event.getStage() is @Nullable", "dereferenced expression event.getStage() is @Nullable", "dereferenced expression stage is @Nullable", "dereferenced expression stage is @Nullable", "dereferenced expression event.getStage() is @Nullable"], "class": "com.badlogic.gdx.scenes.scene2d.Event", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java", "annotation": "javax.annotation.Nullable", "jump": 4, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'style.listStyle' where @NonNull is required", "dereferenced expression listStyle is @Nullable", "(Covered) passing @Nullable parameter 'selectBox.style.listStyle' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull fields font (line 641), background (line 649), scrollStyle (line 652) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'style.listStyle' where @NonNull is required"], "class": "com.badlogic.gdx.scenes.scene2d.ui.SelectBox.SelectBoxStyle", "location": "CLASS_FIELD", "param": "listStyle"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "jump": 3, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": ["dereferenced expression outputType is @Nullable", "dereferenced expression outputType is @Nullable", "dereferenced expression outputType is @Nullable", "dereferenced expression outputType is @Nullable"], "class": "com.badlogic.gdx.utils.JsonValue.PrettyPrintSettings", "location": "CLASS_FIELD", "param": "outputType"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java", "annotation": "javax.annotation.Nullable", "jump": 3, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'focus.target' where @NonNull is required", "(Covered) passing @Nullable parameter 'focus.listenerActor' where @NonNull is required", "(Covered) passing @Nullable parameter 'focus.target' where @NonNull is required", "(Covered) passing @Nullable parameter 'focus.listenerActor' where @NonNull is required", "(Covered) passing @Nullable parameter 'focus.target' where @NonNull is required", "(Covered) passing @Nullable parameter 'focus.target' where @NonNull is required", "(Covered) passing @Nullable parameter 'focus.listenerActor' where @NonNull is required"], "class": "com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus", "location": "CLASS_FIELD", "param": "listenerActor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java", "annotation": "javax.annotation.Nullable", "jump": 3, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'focus.target' where @NonNull is required", "(Covered) passing @Nullable parameter 'focus.listenerActor' where @NonNull is required", "(Covered) passing @Nullable parameter 'focus.target' where @NonNull is required", "(Covered) passing @Nullable parameter 'focus.listenerActor' where @NonNull is required", "(Covered) passing @Nullable parameter 'focus.target' where @NonNull is required", "(Covered) passing @Nullable parameter 'focus.target' where @NonNull is required", "(Covered) passing @Nullable parameter 'focus.listenerActor' where @NonNull is required"], "class": "com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus", "location": "CLASS_FIELD", "param": "target"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/VertexAttributes.java", "annotation": "javax.annotation.Nullable", "jump": 3, "pkg": "com.badlogic.gdx.graphics", "inject": "true", "errors": [], "class": "com.badlogic.gdx.graphics.VertexAttributes.ReadonlyIterable", "location": "CLASS_FIELD", "param": "iterator1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Array.java", "annotation": "javax.annotation.Nullable", "jump": 3, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.utils.Array.ArrayIterable", "location": "CLASS_FIELD", "param": "iterator1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Array.java", "annotation": "javax.annotation.Nullable", "jump": 3, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.utils.Array.ArrayIterable", "location": "CLASS_FIELD", "param": "iterator2"}, {"method": "instance()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Timer.java", "annotation": "javax.annotation.Nullable", "jump": 3, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": ["dereferenced expression instance() is @Nullable", "dereferenced expression instance() is @Nullable", "dereferenced expression instance() is @Nullable", "dereferenced expression instance() is @Nullable"], "class": "com.badlogic.gdx.utils.Timer", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java", "annotation": "javax.annotation.Nullable", "jump": 3, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["dereferenced expression style.font is @Nullable", "dereferenced expression style.font is @Nullable", "dereferenced expression style.font is @Nullable", "dereferenced expression style.font is @Nullable"], "class": "com.badlogic.gdx.scenes.scene2d.ui.Label.LabelStyle", "location": "CLASS_FIELD", "param": "font"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/List.java", "annotation": "javax.annotation.Nullable", "jump": 3, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["dereferenced expression selectedDrawable is @Nullable", "dereferenced expression selectedDrawable is @Nullable", "(Covered) initializer method does not guarantee @NonNull field font (line 493) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression listStyle.selection is @Nullable"], "class": "com.badlogic.gdx.scenes.scene2d.ui.List.ListStyle", "location": "CLASS_FIELD", "param": "selection"}, {"method": "<T>getCell(T)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java", "annotation": "javax.annotation.Nullable", "jump": 3, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Table", "location": "METHOD_RETURN", "param": ""}, {"method": "get(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "jump": 3, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'jsonMap.get(name)' where @NonNull is required", "(Covered) passing @Nullable parameter 'jsonValue' where @NonNull is required", "(Covered) passing @Nullable parameter 'texture.get(\"uvTranslation\")' where @NonNull is required", "(Covered) passing @Nullable parameter 'texture.get(\"uvScaling\")' where @NonNull is required"], "class": "com.badlogic.gdx.utils.JsonValue", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "jump": 3, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "expandX"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/VertexAttributes.java", "annotation": "javax.annotation.Nullable", "jump": 3, "pkg": "com.badlogic.gdx.graphics", "inject": "true", "errors": [], "class": "com.badlogic.gdx.graphics.VertexAttributes.ReadonlyIterable", "location": "CLASS_FIELD", "param": "iterator2"}, {"method": "findRegion(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java", "annotation": "javax.annotation.Nullable", "jump": 3, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull field name (line 565) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field name (line 565) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.badlogic.gdx.graphics.g2d.TextureAtlas", "location": "METHOD_RETURN", "param": ""}, {"method": "getInstance()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TooltipManager.java", "annotation": "javax.annotation.Nullable", "jump": 3, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'TooltipManager.getInstance()' where @NonNull is required", "(Covered) passing @Nullable parameter 'TooltipManager.getInstance()' where @NonNull is required", "(Covered) passing @Nullable parameter 'TooltipManager.getInstance()' where @NonNull is required", "(Covered) passing @Nullable parameter 'TooltipManager.getInstance()' where @NonNull is required"], "class": "com.badlogic.gdx.scenes.scene2d.ui.TooltipManager", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "jump": 3, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "expandY"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextButton.java", "annotation": "javax.annotation.Nullable", "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'style.fontColor' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull field font (line 161) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'style.fontColor' where @NonNull is required"], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextButton.TextButtonStyle", "location": "CLASS_FIELD", "param": "downFontColor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "fillY"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["dereferenced expression style.plus is @Nullable", "dereferenced expression style.minus is @Nullable"], "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree.TreeStyle", "location": "CLASS_FIELD", "param": "plus"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["dereferenced expression style.plus is @Nullable", "dereferenced expression style.minus is @Nullable"], "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree.TreeStyle", "location": "CLASS_FIELD", "param": "minus"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java", "annotation": "javax.annotation.Nullable", "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "errors": ["dereferenced expression focus.listener is @Nullable", "dereferenced expression focus.listener is @Nullable", "dereferenced expression focus.listener is @Nullable", "dereferenced expression focus.listener is @Nullable"], "class": "com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus", "location": "CLASS_FIELD", "param": "listener"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java", "annotation": "javax.annotation.Nullable", "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'oldKeyboardFocus' where @NonNull is required", "(Covered) passing @Nullable parameter 'oldScrollFocus' where @NonNull is required"], "class": "com.badlogic.gdx.scenes.scene2d.Stage", "location": "CLASS_FIELD", "param": "keyboardFocus"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/RemoveListenerAction.java", "annotation": "javax.annotation.Nullable", "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction", "location": "CLASS_FIELD", "param": "listener"}, {"method": "first()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/Selection.java", "annotation": "javax.annotation.Nullable", "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.utils.Selection", "location": "METHOD_RETURN", "param": ""}, {"method": "remove(K)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'dragListener' where @NonNull is required"], "class": "com.badlogic.gdx.utils.ObjectMap", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/List.java", "annotation": "javax.annotation.Nullable", "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["dereferenced expression font is @Nullable", "dereferenced expression font is @Nullable", "(Covered) initializer method does not guarantee @NonNull field selection (line 500) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.badlogic.gdx.scenes.scene2d.ui.List.ListStyle", "location": "CLASS_FIELD", "param": "font"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java", "annotation": "javax.annotation.Nullable", "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'style.titleFont' where @NonNull is required", "(Covered) passing @Nullable parameter 'style.titleFont' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull field background (line 387) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.badlogic.gdx.scenes.scene2d.ui.Window.WindowStyle", "location": "CLASS_FIELD", "param": "titleFont"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextButton.java", "annotation": "javax.annotation.Nullable", "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'style.fontColor' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull field font (line 161) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'style.fontColor' where @NonNull is required"], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextButton.TextButtonStyle", "location": "CLASS_FIELD", "param": "focusedFontColor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java", "annotation": "javax.annotation.Nullable", "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'oldKeyboardFocus' where @NonNull is required", "(Covered) passing @Nullable parameter 'oldScrollFocus' where @NonNull is required"], "class": "com.badlogic.gdx.scenes.scene2d.Stage", "location": "CLASS_FIELD", "param": "scrollFocus"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "fillX"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextButton.java", "annotation": "javax.annotation.Nullable", "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'style.fontColor' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull field font (line 161) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'style.fontColor' where @NonNull is required"], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextButton.TextButtonStyle", "location": "CLASS_FIELD", "param": "fontColor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java", "annotation": "javax.annotation.Nullable", "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction", "location": "CLASS_FIELD", "param": "listener"}, {"method": "random()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Array.java", "annotation": "javax.annotation.Nullable", "jump": 2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields iterator1 (line 815), iterator2 (line 815) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'models.random()' where @NonNull is required", "dereferenced expression templates.random() is @Nullable"], "class": "com.badlogic.gdx.utils.Array", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextButton.java", "annotation": "javax.annotation.Nullable", "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'style.fontColor' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull field font (line 161) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'style.fontColor' where @NonNull is required"], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextButton.TextButtonStyle", "location": "CLASS_FIELD", "param": "disabledFontColor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextButton.java", "annotation": "javax.annotation.Nullable", "jump": 2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'style.fontColor' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull field font (line 161) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'style.fontColor' where @NonNull is required"], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextButton.TextButtonStyle", "location": "CLASS_FIELD", "param": "overFontColor"}, {"method": "<A>setActor(A)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull field actor (line 52) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "METHOD_PARAM", "param": "newActor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/CheckBox.java", "annotation": "javax.annotation.Nullable", "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'style.checkboxOff' where @NonNull is required", "(Covered) passing @Nullable parameter 'checkbox' where @NonNull is required"], "class": "com.badlogic.gdx.scenes.scene2d.ui.CheckBox.CheckBoxStyle", "location": "CLASS_FIELD", "param": "checkboxOn"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntSet.java", "annotation": "javax.annotation.Nullable", "jump": 1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.utils.IntSet", "location": "CLASS_FIELD", "param": "iterator2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["dereferenced expression style.background is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields font (line 1223), fontColor (line 1225) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldStyle", "location": "CLASS_FIELD", "param": "focusedBackground"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["dereferenced expression style.background is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields font (line 1223), fontColor (line 1225) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldStyle", "location": "CLASS_FIELD", "param": "disabledBackground"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "CLASS_FIELD", "param": "align"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntSet.java", "annotation": "javax.annotation.Nullable", "jump": 1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.utils.IntSet", "location": "CLASS_FIELD", "param": "iterator1"}, {"method": "bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/Mesh.java", "annotation": "javax.annotation.Nullable", "jump": 1, "pkg": "com.badlogic.gdx.graphics", "inject": "true", "errors": [], "class": "com.badlogic.gdx.graphics.Mesh", "location": "METHOD_PARAM", "param": "locations"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["dereferenced expression style.background is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields font (line 1223), fontColor (line 1225) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldStyle", "location": "CLASS_FIELD", "param": "background"}, {"method": "getRelatedActor()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/InputEvent.java", "annotation": "javax.annotation.Nullable", "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'event.getRelatedActor()' where @NonNull is required", "(Covered) passing @Nullable parameter 'event.getRelatedActor()' where @NonNull is required"], "class": "com.badlogic.gdx.scenes.scene2d.InputEvent", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java", "annotation": "javax.annotation.Nullable", "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields font (line 641), scrollStyle (line 653), listStyle (line 655) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.badlogic.gdx.scenes.scene2d.ui.SelectBox.SelectBoxStyle", "location": "CLASS_FIELD", "param": "background"}, {"method": "ImageButtonStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageButton.java", "annotation": "javax.annotation.Nullable", "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'up' where @NonNull is required"], "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageButton.ImageButtonStyle", "location": "METHOD_PARAM", "param": "up"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/CheckBox.java", "annotation": "javax.annotation.Nullable", "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'style.checkboxOff' where @NonNull is required", "(Covered) passing @Nullable parameter 'checkbox' where @NonNull is required"], "class": "com.badlogic.gdx.scenes.scene2d.ui.CheckBox.CheckBoxStyle", "location": "CLASS_FIELD", "param": "checkboxOff"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectSet.java", "annotation": "javax.annotation.Nullable", "jump": 1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.utils.ObjectSet", "location": "CLASS_FIELD", "param": "iterator2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java", "annotation": "javax.annotation.Nullable", "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'style.background' where @NonNull is required", "(Covered) initializer method does not guarantee @NonNull field titleFont (line 391) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.badlogic.gdx.scenes.scene2d.ui.Window.WindowStyle", "location": "CLASS_FIELD", "param": "background"}, {"method": "unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/Mesh.java", "annotation": "javax.annotation.Nullable", "jump": 1, "pkg": "com.badlogic.gdx.graphics", "inject": "true", "errors": [], "class": "com.badlogic.gdx.graphics.Mesh", "location": "METHOD_PARAM", "param": "locations"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectSet.java", "annotation": "javax.annotation.Nullable", "jump": 1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.utils.ObjectSet", "location": "CLASS_FIELD", "param": "iterator1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["dereferenced expression style.background is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields font (line 1223), fontColor (line 1225) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldStyle", "location": "CLASS_FIELD", "param": "selection"}, {"method": "getElementType(int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/reflect/Field.java", "annotation": "javax.annotation.Nullable", "jump": 1, "pkg": "com.badlogic.gdx.utils.reflect", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull field elementType (line 1400) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.badlogic.gdx.utils.reflect.Field", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["dereferenced expression style.background is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields font (line 1223), fontColor (line 1225) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldStyle", "location": "CLASS_FIELD", "param": "cursor"}, {"method": "findNode(com.badlogic.gdx.utils.Array<? extends com.badlogic.gdx.scenes.scene2d.ui.Tree.Node>,java.lang.Object)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "jump": 1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull field actor (line 677) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plus (line 1043), minus (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree", "location": "METHOD_RETURN", "param": ""}, {"method": "defaults()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'defaults()' where @NonNull is required"], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "METHOD_RETURN", "param": ""}, {"method": "ButtonStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java", "annotation": "javax.annotation.Nullable", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields down (line 314), over (line 314), focused (line 314), disabled (line 314) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.badlogic.gdx.scenes.scene2d.ui.Button.ButtonStyle", "location": "METHOD_PARAM", "param": "down"}, {"method": "getMethod()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/Net.java", "annotation": "javax.annotation.Nullable", "jump": 0, "pkg": "com.badlogic.gdx", "inject": "true", "errors": ["dereferenced expression method is @Nullable"], "class": "com.badlogic.gdx.Net.HttpRequest", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java", "annotation": "javax.annotation.Nullable", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.Actor", "location": "CLASS_FIELD", "param": "parent"}, {"method": "toJson(java.lang.Object,java.lang.Class,java.lang.Class,com.badlogic.gdx.files.FileHandle)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.utils.Json", "location": "METHOD_PARAM", "param": "knownType"}, {"method": "getInputProcessor()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/input/RemoteInput.java", "annotation": "javax.annotation.Nullable", "jump": 0, "pkg": "com.badlogic.gdx.input", "inject": "true", "errors": ["(Covered) method returns @Nullable, but superclass method com.badlogic.gdx.Input.getInputProcessor() returns @NonNull"], "class": "com.badlogic.gdx.input.RemoteInput", "location": "METHOD_RETURN", "param": ""}, {"method": "FileTextureData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap.Format,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/FileTextureData.java", "annotation": "javax.annotation.Nullable", "jump": 0, "pkg": "com.badlogic.gdx.graphics.glutils", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull field format (line 38) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.badlogic.gdx.graphics.glutils.FileTextureData", "location": "METHOD_PARAM", "param": "format"}, {"method": "Cubemap(com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/Cubemap.java", "annotation": "javax.annotation.Nullable", "jump": 0, "pkg": "com.badlogic.gdx.graphics", "inject": "true", "errors": [], "class": "com.badlogic.gdx.graphics.Cubemap", "location": "METHOD_PARAM", "param": "positiveX"}, {"method": "writeValue(java.lang.Object,java.lang.Class,java.lang.Class)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.utils.Json", "location": "METHOD_PARAM", "param": "value"}, {"method": "draw(com.badlogic.gdx.graphics.Texture,float[],int,int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/Batch.java", "annotation": "javax.annotation.Nullable", "jump": 0, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "errors": ["(Covered) parameter texture is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g2d.Batch.draw(com.badlogic.gdx.graphics.Texture,float[],int,int) is @Nullable", "(Covered) parameter texture is @NonNull, but parameter in superclass method com.badlogic.gdx.graphics.g2d.Batch.draw(com.badlogic.gdx.graphics.Texture,float[],int,int) is @Nullable"], "class": "com.badlogic.gdx.graphics.g2d.Batch", "location": "METHOD_PARAM", "param": "texture"}, {"method": "overlapConvexPolygons(float[],float[],com.badlogic.gdx.math.Intersector.MinimumTranslationVector)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/math/Intersector.java", "annotation": "javax.annotation.Nullable", "jump": 0, "pkg": "com.badlogic.gdx.math", "inject": "true", "errors": [], "class": "com.badlogic.gdx.math.Intersector", "location": "METHOD_PARAM", "param": "mtv"}, {"method": "consumePixmap()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/FileTextureData.java", "annotation": "javax.annotation.Nullable", "jump": 0, "pkg": "com.badlogic.gdx.graphics.glutils", "inject": "true", "errors": ["(Covered) method returns @Nullable, but superclass method com.badlogic.gdx.graphics.TextureData.consumePixmap() returns @NonNull"], "class": "com.badlogic.gdx.graphics.glutils.FileTextureData", "location": "METHOD_RETURN", "param": ""}, {"method": "VertexAttributes(com.badlogic.gdx.graphics.VertexAttribute...)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/VertexAttributes.java", "annotation": "javax.annotation.Nullable", "jump": 0, "pkg": "com.badlogic.gdx.graphics", "inject": "true", "errors": [], "class": "com.badlogic.gdx.graphics.VertexAttributes", "location": "METHOD_PARAM", "param": "attributes"}, {"method": "quoteValue(java.lang.Object)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonWriter.java", "annotation": "javax.annotation.Nullable", "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.utils.JsonWriter.OutputType", "location": "METHOD_PARAM", "param": "value"}, {"method": "fireEnterAndExit(com.badlogic.gdx.scenes.scene2d.Actor,int,int,int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java", "annotation": "javax.annotation.Nullable", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'overLast' where @NonNull is required"], "class": "com.badlogic.gdx.scenes.scene2d.Stage", "location": "METHOD_PARAM", "param": "overLast"}, {"method": "setActor(com.badlogic.gdx.scenes.scene2d.Actor)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Action.java", "annotation": "javax.annotation.Nullable", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "errors": ["(Covered) parameter actor is @NonNull, but parameter in superclass method com.badlogic.gdx.scenes.scene2d.Action.setActor(com.badlogic.gdx.scenes.scene2d.Actor) is @Nullable", "(Covered) parameter actor is @NonNull, but parameter in superclass method com.badlogic.gdx.scenes.scene2d.Action.setActor(com.badlogic.gdx.scenes.scene2d.Actor) is @Nullable"], "class": "com.badlogic.gdx.scenes.scene2d.Action", "location": "METHOD_PARAM", "param": "actor"}, {"method": "setColor(com.badlogic.gdx.graphics.Color)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java", "annotation": "javax.annotation.Nullable", "jump": 0, "pkg": "com.badlogic.gdx.graphics.glutils", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'color' where @NonNull is required"], "class": "com.badlogic.gdx.graphics.glutils.ShapeRenderer", "location": "METHOD_PARAM", "param": "color"}, {"method": "toJson(java.lang.Object,java.lang.Class,java.lang.Class)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.utils.Json", "location": "METHOD_PARAM", "param": "knownType"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/AssetLoadingTask.java", "annotation": "javax.annotation.Nullable", "jump": 0, "pkg": "com.badlogic.gdx.assets", "inject": "true", "errors": ["dereferenced expression loadFuture is @Nullable"], "class": "com.badlogic.gdx.assets.AssetLoadingTask", "location": "CLASS_FIELD", "param": "loadFuture"}, {"method": "<T>get(T)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'key' where @NonNull is required"], "class": "com.badlogic.gdx.utils.ObjectMap", "location": "METHOD_PARAM", "param": "key"}, {"method": "Container(T)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java", "annotation": "javax.annotation.Nullable", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Container", "location": "METHOD_PARAM", "param": "actor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.utils.JsonValue", "location": "CLASS_FIELD", "param": "prev"}, {"method": "loadSync(com.badlogic.gdx.assets.AssetManager,java.lang.String,com.badlogic.gdx.files.FileHandle,P)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/AsynchronousAssetLoader.java", "annotation": "javax.annotation.Nullable", "jump": 0, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "errors": [], "class": "com.badlogic.gdx.assets.loaders.AsynchronousAssetLoader", "location": "METHOD_RETURN", "param": ""}, {"method": "toJson(java.lang.Object,java.lang.Class,java.lang.Class,java.io.Writer)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "jump": 0, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.utils.Json", "location": "METHOD_PARAM", "param": "knownType"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["dereferenced expression fontColor is @Nullable", "(Covered) initializer method does not guarantee @NonNull fields font (line 1223), background (line 1232), focusedBackground (line 1232), disabledBackground (line 1232), cursor (line 1232), selection (line 1232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields focusedBackground (line 1232), disabledBackground (line 1232) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldStyle", "location": "CLASS_FIELD", "param": "fontColor"}, {"method": "Image(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.utils.Scaling,int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Image.java", "annotation": "javax.annotation.Nullable", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Image", "location": "METHOD_PARAM", "param": "drawable"}, {"method": "getCurrentType()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.graphics.glutils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.graphics.glutils.ShapeRenderer", "location": "METHOD_RETURN", "param": ""}, {"method": "getInterpolation()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/TemporalAction.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.actions.TemporalAction", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Dialog.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Dialog", "location": "CLASS_FIELD", "param": "skin"}, {"method": "getDragSource()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/DragAndDrop.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop", "location": "METHOD_RETURN", "param": ""}, {"method": "getCullingArea()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Group.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.Group", "location": "METHOD_RETURN", "param": ""}, {"method": "getCullingArea()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/List.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields font (line 494), selection (line 500) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.badlogic.gdx.scenes.scene2d.ui.List", "location": "METHOD_RETURN", "param": ""}, {"method": "getDragPayload()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/DragAndDrop.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull field font (line 432) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.badlogic.gdx.scenes.scene2d.ui.Label", "location": "CLASS_FIELD", "param": "ellipsis"}, {"method": "getRelatedActor()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/FocusListener.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Button.ButtonStyle", "location": "CLASS_FIELD", "param": "down"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull field actor (line 677) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plus (line 1043), minus (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree", "location": "CLASS_FIELD", "param": "overNode"}, {"method": "set(int,T)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/DelayedRemovalArray.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.utils.DelayedRemovalArray", "location": "METHOD_PARAM", "param": "value"}, {"method": "getAtlas()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Skin", "location": "METHOD_RETURN", "param": ""}, {"method": "get(int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.utils.JsonValue", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Button.ButtonStyle", "location": "CLASS_FIELD", "param": "over"}, {"method": "getRunnable()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/RunnableAction.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.actions.RunnableAction", "location": "METHOD_RETURN", "param": ""}, {"method": "getFontFile()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFont.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "errors": [], "class": "com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData", "location": "METHOD_RETURN", "param": ""}, {"method": "getButtonGroup()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields up (line 315), down (line 315), over (line 315), focused (line 315), disabled (line 315) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields over (line 315), focused (line 315), disabled (line 315) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.badlogic.gdx.scenes.scene2d.ui.Button", "location": "METHOD_RETURN", "param": ""}, {"method": "cancelTouchFocusExcept(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.Stage", "location": "METHOD_PARAM", "param": "exceptActor"}, {"method": "getActor()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ScrollPane", "location": "METHOD_RETURN", "param": ""}, {"method": "getTexture()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/NinePatch.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.graphics.g2d", "inject": "true", "errors": [], "class": "com.badlogic.gdx.graphics.g2d.NinePatch", "location": "METHOD_RETURN", "param": ""}, {"method": "setObject(com.badlogic.gdx.scenes.scene2d.Actor,java.lang.Object)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Dialog.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Dialog", "location": "METHOD_PARAM", "param": "object"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Button.ButtonStyle", "location": "CLASS_FIELD", "param": "focused"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/TextureLoader.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "errors": [], "class": "com.badlogic.gdx.assets.loaders.TextureLoader.TextureParameter", "location": "CLASS_FIELD", "param": "texture"}, {"method": "child()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.utils.JsonValue", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.utils.Json", "location": "CLASS_FIELD", "param": "typeName"}, {"method": "get(K,V)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.utils.ObjectMap", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.utils.JsonValue.JsonIterator", "location": "CLASS_FIELD", "param": "entry"}, {"method": "getContent()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/Net.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx", "inject": "true", "errors": [], "class": "com.badlogic.gdx.Net.HttpRequest", "location": "METHOD_RETURN", "param": ""}, {"method": "getTransformedVertices()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/math/Polyline.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.math", "inject": "true", "errors": [], "class": "com.badlogic.gdx.math.Polyline", "location": "METHOD_RETURN", "param": ""}, {"method": "writeValue(java.lang.String,java.lang.Object,java.lang.Class)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.utils.Json", "location": "METHOD_PARAM", "param": "value"}, {"method": "getParent()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields plus (line 1043), minus (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree.Node", "location": "METHOD_RETURN", "param": ""}, {"method": "setSecondWidget(com.badlogic.gdx.scenes.scene2d.Actor)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SplitPane.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.SplitPane", "location": "METHOD_PARAM", "param": "widget"}, {"method": "getPool()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Action.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.Action", "location": "METHOD_RETURN", "param": ""}, {"method": "parent()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.utils.JsonValue", "location": "METHOD_RETURN", "param": ""}, {"method": "set(int,T)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/SnapshotArray.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.utils.SnapshotArray", "location": "METHOD_PARAM", "param": "value"}, {"method": "put(K,V)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/OrderedMap.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.utils.OrderedMap", "location": "METHOD_PARAM", "param": "value"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/CubemapLoader.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "errors": [], "class": "com.badlogic.gdx.assets.loaders.CubemapLoader.CubemapParameter", "location": "CLASS_FIELD", "param": "cubemap"}, {"method": "getWidget()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ScrollPane", "location": "METHOD_RETURN", "param": ""}, {"method": "calculateRadiusSquared(float,float,float,int,int,com.badlogic.gdx.math.Matrix4)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/Mesh.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.graphics", "inject": "true", "errors": [], "class": "com.badlogic.gdx.graphics.Mesh", "location": "METHOD_PARAM", "param": "transform"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Table", "location": "CLASS_FIELD", "param": "skin"}, {"method": "button(java.lang.String,java.lang.Object,com.badlogic.gdx.scenes.scene2d.ui.TextButton.TextButtonStyle)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Dialog.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Dialog", "location": "METHOD_PARAM", "param": "object"}, {"method": "getContentStream()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/Net.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx", "inject": "true", "errors": [], "class": "com.badlogic.gdx.Net.HttpRequest", "location": "METHOD_RETURN", "param": ""}, {"method": "merge(com.badlogic.gdx.scenes.scene2d.ui.Cell)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "location": "METHOD_PARAM", "param": "cell"}, {"method": "append0(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/StringBuilder.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.utils.StringBuilder", "location": "METHOD_PARAM", "param": "string"}, {"method": "getDragActor()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/DragAndDrop.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop", "location": "METHOD_RETURN", "param": ""}, {"method": "setFirstWidget(com.badlogic.gdx.scenes.scene2d.Actor)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SplitPane.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.SplitPane", "location": "METHOD_PARAM", "param": "widget"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Button.ButtonStyle", "location": "CLASS_FIELD", "param": "up"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Button.ButtonStyle", "location": "CLASS_FIELD", "param": "disabled"}, {"method": "findNextTextField(com.badlogic.gdx.utils.Array<com.badlogic.gdx.scenes.scene2d.Actor>,com.badlogic.gdx.scenes.scene2d.ui.TextField,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields font (line 1224), fontColor (line 1226), background (line 1232), focusedBackground (line 1232), disabledBackground (line 1232), cursor (line 1232), selection (line 1232) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field fontColor (line 1226) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields focusedBackground (line 1232), disabledBackground (line 1232) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField", "location": "METHOD_RETURN", "param": ""}, {"method": "<T>getLoader(java.lang.Class<T>)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/AssetManager.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.assets", "inject": "true", "errors": [], "class": "com.badlogic.gdx.assets.AssetManager", "location": "METHOD_RETURN", "param": ""}, {"method": "getUrl()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/Net.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx", "inject": "true", "errors": [], "class": "com.badlogic.gdx.Net.HttpRequest", "location": "METHOD_RETURN", "param": ""}, {"method": "row()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Table", "location": "METHOD_RETURN", "param": ""}, {"method": "getString(java.lang.String,java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.utils.JsonValue", "location": "METHOD_RETURN", "param": ""}, {"method": "getActor()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Action.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.Action", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "jump": -1, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull field actor (line 677) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields plus (line 1043), minus (line 1043) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree", "location": "CLASS_FIELD", "param": "foundNode"}, {"method": "convertToString(java.lang.Object)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "jump": -2, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.utils.Json", "location": "METHOD_PARAM", "param": "object"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageTextButton.java", "annotation": "javax.annotation.Nullable", "jump": -2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton.ImageTextButtonStyle", "location": "CLASS_FIELD", "param": "imageDown"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageTextButton.java", "annotation": "javax.annotation.Nullable", "jump": -2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton.ImageTextButtonStyle", "location": "CLASS_FIELD", "param": "imageUp"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageTextButton.java", "annotation": "javax.annotation.Nullable", "jump": -2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton.ImageTextButtonStyle", "location": "CLASS_FIELD", "param": "imageOver"}, {"method": "ensureSize(float[],int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java", "annotation": "javax.annotation.Nullable", "jump": -2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Table", "location": "METHOD_PARAM", "param": "array"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageButton.java", "annotation": "javax.annotation.Nullable", "jump": -2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageButton.ImageButtonStyle", "location": "CLASS_FIELD", "param": "imageDisabled"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageTextButton.java", "annotation": "javax.annotation.Nullable", "jump": -2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton.ImageTextButtonStyle", "location": "CLASS_FIELD", "param": "imageDisabled"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageButton.java", "annotation": "javax.annotation.Nullable", "jump": -2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageButton.ImageButtonStyle", "location": "CLASS_FIELD", "param": "imageOver"}, {"method": "setRelatedActor(com.badlogic.gdx.scenes.scene2d.Actor)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/FocusListener.java", "annotation": "javax.annotation.Nullable", "jump": -2, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent", "location": "METHOD_PARAM", "param": "relatedActor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageButton.java", "annotation": "javax.annotation.Nullable", "jump": -2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageButton.ImageButtonStyle", "location": "CLASS_FIELD", "param": "imageUp"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageButton.java", "annotation": "javax.annotation.Nullable", "jump": -2, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageButton.ImageButtonStyle", "location": "CLASS_FIELD", "param": "imageDown"}, {"method": "hit(float,float,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Group.java", "annotation": "javax.annotation.Nullable", "jump": -5, "pkg": "com.badlogic.gdx.scenes.scene2d", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.Group", "location": "METHOD_RETURN", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "jump": -5, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": ["dereferenced expression stringValue is @Nullable", "dereferenced expression stringValue is @Nullable", "dereferenced expression value.stringValue is @Nullable"], "class": "com.badlogic.gdx.utils.JsonValue", "location": "CLASS_FIELD", "param": "stringValue"}, {"method": "<T>readValue(java.lang.Class<T>,java.lang.Class,com.badlogic.gdx.utils.JsonValue)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "jump": -9, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": ["(Covered) parameter type is @NonNull, but parameter in superclass method com.badlogic.gdx.utils.Json.<T>readValue(java.lang.Class<T>,java.lang.Class,com.badlogic.gdx.utils.JsonValue) is @Nullable"], "class": "com.badlogic.gdx.utils.Json", "location": "METHOD_PARAM", "param": "type"}, {"method": "getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,P)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/AssetLoader.java", "annotation": "javax.annotation.Nullable", "jump": -9, "pkg": "com.badlogic.gdx.assets.loaders", "inject": "true", "errors": [], "class": "com.badlogic.gdx.assets.loaders.AssetLoader", "location": "METHOD_RETURN", "param": ""}, {"method": "writeValue(java.lang.Object,java.lang.Class,java.lang.Class)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "jump": -10, "pkg": "com.badlogic.gdx.utils", "inject": "true", "errors": [], "class": "com.badlogic.gdx.utils.Json", "location": "METHOD_PARAM", "param": "knownType"}, {"method": "setInterpolation(com.badlogic.gdx.math.Interpolation)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/TemporalAction.java", "annotation": "javax.annotation.Nullable", "jump": -11, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "inject": "true", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.actions.TemporalAction", "location": "METHOD_PARAM", "param": "interpolation"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/input/RemoteSender.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.input", "errors": [], "class": "com.badlogic.gdx.input.RemoteSender", "inject": "true", "param": "out"}, {"method": "getCurrentType()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.graphics.glutils", "errors": [], "class": "com.badlogic.gdx.graphics.glutils.ShapeRenderer", "inject": "true", "param": ""}, {"method": "getInterpolation()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/TemporalAction.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.actions.TemporalAction", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Dialog.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Dialog", "inject": "true", "param": "skin"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/net/NetJavaSocketImpl.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.net", "errors": [], "class": "com.badlogic.gdx.net.NetJavaSocketImpl", "inject": "true", "param": "socket"}, {"method": "defaults()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "inject": "true", "param": ""}, {"method": "ButtonStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Button.ButtonStyle", "inject": "true", "param": "down"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextButton.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextButton.TextButtonStyle", "inject": "true", "param": "downFontColor"}, {"method": "getDragSource()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/DragAndDrop.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop", "inject": "true", "param": ""}, {"method": "Cubemap(com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData,com.badlogic.gdx.graphics.TextureData)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/Cubemap.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.graphics", "errors": [], "class": "com.badlogic.gdx.graphics.Cubemap", "inject": "true", "param": "negativeX"}, {"method": "getCullingArea()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Group.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.Group", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.ObjectMap", "inject": "true", "param": "entries1"}, {"method": "<T>readValue(java.lang.Class<T>,java.lang.Class,com.badlogic.gdx.utils.JsonValue)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.Json", "inject": "true", "param": "type"}, {"method": "getCullingArea()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/List.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.List", "inject": "true", "param": ""}, {"method": "getDragPayload()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/DragAndDrop.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Label", "inject": "true", "param": "ellipsis"}, {"method": "<A>setActor(A)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "inject": "true", "param": "newActor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Action.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.Action", "inject": "true", "param": "target"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/HorizontalGroup.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.HorizontalGroup", "inject": "true", "param": "rowSizes"}, {"method": "getMethod()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/Net.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx", "errors": [], "class": "com.badlogic.gdx.Net.HttpRequest", "inject": "true", "param": ""}, {"method": "getRelatedActor()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/FocusListener.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Button.ButtonStyle", "inject": "true", "param": "down"}, {"method": "get(com.badlogic.gdx.scenes.scene2d.Actor)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Value.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Value", "inject": "true", "param": "context"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/files/FileHandle.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.files", "errors": [], "class": "com.badlogic.gdx.files.FileHandle", "inject": "true", "param": "file"}, {"method": "convertToString(java.lang.Object)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.Json", "inject": "true", "param": "object"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree", "inject": "true", "param": "overNode"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/CubemapLoader.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.assets.loaders", "errors": [], "class": "com.badlogic.gdx.assets.loaders.CubemapLoader.CubemapLoaderInfo", "inject": "true", "param": "data"}, {"method": "set(int,T)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/DelayedRemovalArray.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.DelayedRemovalArray", "inject": "true", "param": "value"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/Mesh.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.graphics", "errors": [], "class": "com.badlogic.gdx.graphics.Mesh", "inject": "true", "param": "instances"}, {"method": "getAtlas()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Skin.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Skin", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.graphics.g2d", "errors": [], "class": "com.badlogic.gdx.graphics.g2d.TextureAtlas.AtlasRegion", "inject": "true", "param": "name"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.ObjectMap.Entry", "inject": "true", "param": "value"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "inject": "true", "param": "minWidth"}, {"method": "loadFromFile(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap.Format,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/TextureData.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.graphics", "errors": [], "class": "com.badlogic.gdx.graphics.TextureData.Factory", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "inject": "true", "param": "fillY"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextButton.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextButton.TextButtonStyle", "inject": "true", "param": "font"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "inject": "true", "param": "padRight"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/CheckBox.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.CheckBox.CheckBoxStyle", "inject": "true", "param": "checkboxOn"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldStyle", "inject": "true", "param": "font"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextTooltip.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextTooltip.TextTooltipStyle", "inject": "true", "param": "background"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageTextButton.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton.ImageTextButtonStyle", "inject": "true", "param": "imageDown"}, {"method": "getInputProcessor()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/input/RemoteInput.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.input", "errors": [], "class": "com.badlogic.gdx.input.RemoteInput", "inject": "true", "param": ""}, {"method": "FileTextureData(com.badlogic.gdx.files.FileHandle,com.badlogic.gdx.graphics.Pixmap,com.badlogic.gdx.graphics.Pixmap.Format,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/FileTextureData.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.graphics.glutils", "errors": [], "class": "com.badlogic.gdx.graphics.glutils.FileTextureData", "inject": "true", "param": "format"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree.TreeStyle", "inject": "true", "param": "plus"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntSet.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.IntSet", "inject": "true", "param": "iterator2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageTextButton.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton.ImageTextButtonStyle", "inject": "true", "param": "imageUp"}, {"method": "get(int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.JsonValue", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.JsonValue.PrettyPrintSettings", "inject": "true", "param": "outputType"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus", "inject": "true", "param": "listenerActor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "inject": "true", "param": "prefHeight"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree.TreeStyle", "inject": "true", "param": "minus"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "inject": "true", "param": "spaceBottom"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Button.ButtonStyle", "inject": "true", "param": "over"}, {"method": "getRunnable()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/RunnableAction.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.actions.RunnableAction", "inject": "true", "param": ""}, {"method": "getFontFile()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFont.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.graphics.g2d", "errors": [], "class": "com.badlogic.gdx.graphics.g2d.BitmapFont.BitmapFontData", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ProgressBar.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ProgressBar.ProgressBarStyle", "inject": "true", "param": "background"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus", "inject": "true", "param": "target"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.ObjectIntMap", "inject": "true", "param": "values2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageTextButton.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton.ImageTextButtonStyle", "inject": "true", "param": "imageOver"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldStyle", "inject": "true", "param": "focusedBackground"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.ObjectMap.Entry", "inject": "true", "param": "key"}, {"method": "getButtonGroup()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Button", "inject": "true", "param": ""}, {"method": "hit(float,float,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Group.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.Group", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/VertexAttributes.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.graphics", "errors": [], "class": "com.badlogic.gdx.graphics.VertexAttributes.ReadonlyIterable", "inject": "true", "param": "iterator1"}, {"method": "cancelTouchFocusExcept(com.badlogic.gdx.scenes.scene2d.EventListener,com.badlogic.gdx.scenes.scene2d.Actor)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.Stage", "inject": "true", "param": "exceptActor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/TextureLoader.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.assets.loaders", "errors": [], "class": "com.badlogic.gdx.assets.loaders.TextureLoader.TextureLoaderInfo", "inject": "true", "param": "data"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "inject": "true", "param": "actor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Array.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.Array.ArrayIterable", "inject": "true", "param": "iterator1"}, {"method": "ensureSize(float[],int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Table", "inject": "true", "param": "array"}, {"method": "getActor()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ScrollPane", "inject": "true", "param": ""}, {"method": "draw(com.badlogic.gdx.graphics.Texture,float[],int,int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/Batch.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.graphics.g2d", "errors": [], "class": "com.badlogic.gdx.graphics.g2d.Batch", "inject": "true", "param": "texture"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "inject": "true", "param": "spaceTop"}, {"method": "getTexture()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/NinePatch.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.graphics.g2d", "errors": [], "class": "com.badlogic.gdx.graphics.g2d.NinePatch", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.ObjectMap", "inject": "true", "param": "keys1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldStyle", "inject": "true", "param": "disabledBackground"}, {"method": "setObject(com.badlogic.gdx.scenes.scene2d.Actor,java.lang.Object)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Dialog.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Dialog", "inject": "true", "param": "object"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Array.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.Array.ArrayIterable", "inject": "true", "param": "iterator2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "inject": "true", "param": "maxWidth"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "inject": "true", "param": "maxHeight"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ProgressBar.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ProgressBar.ProgressBarStyle", "inject": "true", "param": "knob"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageButton.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageButton.ImageButtonStyle", "inject": "true", "param": "imageDisabled"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ProgressBar.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ProgressBar.ProgressBarStyle", "inject": "true", "param": "knobAfter"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.Stage.TouchFocus", "inject": "true", "param": "listener"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageTextButton.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton.ImageTextButtonStyle", "inject": "true", "param": "imageDisabled"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "inject": "true", "param": "align"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/ColorAction.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.actions.ColorAction", "inject": "true", "param": "color"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.Stage", "inject": "true", "param": "keyboardFocus"}, {"method": "getDependencies(java.lang.String,com.badlogic.gdx.files.FileHandle,P)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/AssetLoader.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.assets.loaders", "errors": [], "class": "com.badlogic.gdx.assets.loaders.AssetLoader", "inject": "true", "param": ""}, {"method": "instance()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Timer.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.Timer", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Button.ButtonStyle", "inject": "true", "param": "focused"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/TextureLoader.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.assets.loaders", "errors": [], "class": "com.badlogic.gdx.assets.loaders.TextureLoader.TextureParameter", "inject": "true", "param": "texture"}, {"method": "<T>readValue(java.lang.Class<T>,java.lang.Class,com.badlogic.gdx.utils.JsonValue)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.Json", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/IntSet.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.IntSet", "inject": "true", "param": "iterator1"}, {"method": "child()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.JsonValue", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ProgressBar.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ProgressBar.ProgressBarStyle", "inject": "true", "param": "disabledKnob"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/RemoveListenerAction.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.actions.RemoveListenerAction", "inject": "true", "param": "listener"}, {"method": "bind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/Mesh.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.graphics", "errors": [], "class": "com.badlogic.gdx.graphics.Mesh", "inject": "true", "param": "locations"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddAction.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.actions.AddAction", "inject": "true", "param": "action"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.Json", "inject": "true", "param": "typeName"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.ObjectIntMap", "inject": "true", "param": "entries2"}, {"method": "first()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/Selection.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.utils.Selection", "inject": "true", "param": ""}, {"method": "getVertexAttribute(int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/Mesh.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.graphics", "errors": [], "class": "com.badlogic.gdx.graphics.Mesh", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldStyle", "inject": "true", "param": "background"}, {"method": "getListenerActor()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Event.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.Event", "inject": "true", "param": ""}, {"method": "get(K,V)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.ObjectMap", "inject": "true", "param": ""}, {"method": "remove(K)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.ObjectMap", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/VerticalGroup.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.VerticalGroup", "inject": "true", "param": "columnSizes"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SplitPane.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.SplitPane.SplitPaneStyle", "inject": "true", "param": "handle"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Label.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Label.LabelStyle", "inject": "true", "param": "font"}, {"method": "consumePixmap()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/FileTextureData.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.graphics.glutils", "errors": [], "class": "com.badlogic.gdx.graphics.glutils.FileTextureData", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.JsonValue.JsonIterator", "inject": "true", "param": "entry"}, {"method": "getContent()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/Net.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx", "errors": [], "class": "com.badlogic.gdx.Net.HttpRequest", "inject": "true", "param": ""}, {"method": "getTransformedVertices()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/math/Polyline.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.math", "errors": [], "class": "com.badlogic.gdx.math.Polyline", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ProgressBar.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ProgressBar.ProgressBarStyle", "inject": "true", "param": "disabledKnobBefore"}, {"method": "writeValue(java.lang.String,java.lang.Object,java.lang.Class)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.Json", "inject": "true", "param": "value"}, {"method": "setActor(T)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Container", "inject": "true", "param": "actor"}, {"method": "getRelatedActor()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/InputEvent.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.InputEvent", "inject": "true", "param": ""}, {"method": "fireEnterAndExit(com.badlogic.gdx.scenes.scene2d.Actor,int,int,int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.Stage", "inject": "true", "param": "overLast"}, {"method": "getParent()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree.Node", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "inject": "true", "param": "padTop"}, {"method": "setSecondWidget(com.badlogic.gdx.scenes.scene2d.Actor)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SplitPane.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.SplitPane", "inject": "true", "param": "widget"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree.Node", "inject": "true", "param": "actor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ProgressBar.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ProgressBar.ProgressBarStyle", "inject": "true", "param": "disabledKnobAfter"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "inject": "true", "param": "padLeft"}, {"method": "setInterpolation(com.badlogic.gdx.math.Interpolation)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/TemporalAction.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.actions.TemporalAction", "inject": "true", "param": "interpolation"}, {"method": "<T>readValue(java.lang.String,java.lang.Class<T>,T,com.badlogic.gdx.utils.JsonValue)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.Json", "inject": "true", "param": ""}, {"method": "getPool()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Action.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.Action", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.ObjectIntMap", "inject": "true", "param": "entries1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.SelectBox.SelectBoxStyle", "inject": "true", "param": "background"}, {"method": "parent()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.JsonValue", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/List.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.List.ListStyle", "inject": "true", "param": "font"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/List.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.List.ListStyle", "inject": "true", "param": "selection"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Window.WindowStyle", "inject": "true", "param": "titleFont"}, {"method": "<T>getCell(T)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Table", "inject": "true", "param": ""}, {"method": "set(int,T)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/SnapshotArray.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.SnapshotArray", "inject": "true", "param": "value"}, {"method": "getStage()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Event.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.Event", "inject": "true", "param": ""}, {"method": "put(K,V)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/OrderedMap.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.OrderedMap", "inject": "true", "param": "value"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Container.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Container", "inject": "true", "param": "actor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ActorGestureListener.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener", "inject": "true", "param": "actor"}, {"method": "getTransformedVertices()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/math/Polygon.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.math", "errors": [], "class": "com.badlogic.gdx.math.Polygon", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/loaders/CubemapLoader.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.assets.loaders", "errors": [], "class": "com.badlogic.gdx.assets.loaders.CubemapLoader.CubemapParameter", "inject": "true", "param": "cubemap"}, {"method": "getWidget()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ScrollPane.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ScrollPane", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.ObjectMap", "inject": "true", "param": "entries2"}, {"method": "asString()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.JsonValue", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "inject": "true", "param": "spaceRight"}, {"method": "ImageButtonStyle(com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable,com.badlogic.gdx.scenes.scene2d.utils.Drawable)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageButton.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageButton.ImageButtonStyle", "inject": "true", "param": "up"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.ObjectIntMap", "inject": "true", "param": "keys2"}, {"method": "calculateRadiusSquared(float,float,float,int,int,com.badlogic.gdx.math.Matrix4)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/Mesh.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.graphics", "errors": [], "class": "com.badlogic.gdx.graphics.Mesh", "inject": "true", "param": "transform"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.SelectBox.SelectBoxStyle", "inject": "true", "param": "font"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ActorGestureListener.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener", "inject": "true", "param": "event"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/CheckBox.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.CheckBox.CheckBoxStyle", "inject": "true", "param": "checkboxOff"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/DelegateAction.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.actions.DelegateAction", "inject": "true", "param": "action"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Table", "inject": "true", "param": "skin"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "inject": "true", "param": "padBottom"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectSet.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.ObjectSet", "inject": "true", "param": "iterator2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Window.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Window.WindowStyle", "inject": "true", "param": "background"}, {"method": "setStage(com.badlogic.gdx.scenes.scene2d.Stage)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Actor.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.Actor", "inject": "true", "param": "stage"}, {"method": "button(java.lang.String,java.lang.Object,com.badlogic.gdx.scenes.scene2d.ui.TextButton.TextButtonStyle)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Dialog.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Dialog", "inject": "true", "param": "object"}, {"method": "unbind(com.badlogic.gdx.graphics.glutils.ShaderProgram,int[])", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/Mesh.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.graphics", "errors": [], "class": "com.badlogic.gdx.graphics.Mesh", "inject": "true", "param": "locations"}, {"method": "getContentStream()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/Net.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx", "errors": [], "class": "com.badlogic.gdx.Net.HttpRequest", "inject": "true", "param": ""}, {"method": "setActor(com.badlogic.gdx.scenes.scene2d.Actor)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Action.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.Action", "inject": "true", "param": "actor"}, {"method": "getTarget()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Event.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.Event", "inject": "true", "param": ""}, {"method": "merge(com.badlogic.gdx.scenes.scene2d.ui.Cell)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "inject": "true", "param": "cell"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "inject": "true", "param": "prefWidth"}, {"method": "<T>get(T)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.ObjectMap", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.SelectBox.SelectBoxStyle", "inject": "true", "param": "listStyle"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.ObjectMap", "inject": "true", "param": "values1"}, {"method": "get(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.JsonValue", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AlphaAction.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.actions.AlphaAction", "inject": "true", "param": "color"}, {"method": "append0(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/StringBuilder.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.StringBuilder", "inject": "true", "param": "string"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "inject": "true", "param": "table"}, {"method": "getDragActor()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/DragAndDrop.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.utils.DragAndDrop", "inject": "true", "param": ""}, {"method": "setFirstWidget(com.badlogic.gdx.scenes.scene2d.Actor)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SplitPane.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.SplitPane", "inject": "true", "param": "widget"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/SelectBox.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.SelectBox.SelectBoxStyle", "inject": "true", "param": "scrollStyle"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.ObjectMap", "inject": "true", "param": "values2"}, {"method": "setColor(com.badlogic.gdx.graphics.Color)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/glutils/ShapeRenderer.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.graphics.glutils", "errors": [], "class": "com.badlogic.gdx.graphics.glutils.ShapeRenderer", "inject": "true", "param": "color"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Button.ButtonStyle", "inject": "true", "param": "up"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "inject": "true", "param": "expandX"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectSet.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.ObjectSet", "inject": "true", "param": "iterator1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.Json", "inject": "true", "param": "writer"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/NinePatchDrawable.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.utils.NinePatchDrawable", "inject": "true", "param": "patch"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextButton.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextButton.TextButtonStyle", "inject": "true", "param": "focusedFontColor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Stage.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.Stage", "inject": "true", "param": "scrollFocus"}, {"method": "writeValue(java.lang.Object,java.lang.Class,java.lang.Class)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Json.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.Json", "inject": "true", "param": "knownType"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "inject": "true", "param": "colspan"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/RemoveAction.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.actions.RemoveAction", "inject": "true", "param": "action"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/ActorGestureListener.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener", "inject": "true", "param": "touchDownTarget"}, {"method": "findByUsage(int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/VertexAttributes.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.graphics", "errors": [], "class": "com.badlogic.gdx.graphics.VertexAttributes", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "inject": "true", "param": "spaceLeft"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.ObjectMap", "inject": "true", "param": "keys2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "inject": "true", "param": "minHeight"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageButton.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageButton.ImageButtonStyle", "inject": "true", "param": "imageOver"}, {"method": "keyDown(com.badlogic.gdx.scenes.scene2d.InputEvent,int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/InputListener.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.InputListener", "inject": "true", "param": "event"}, {"method": "setRelatedActor(com.badlogic.gdx.scenes.scene2d.Actor)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/utils/FocusListener.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.utils", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.utils.FocusListener.FocusEvent", "inject": "true", "param": "relatedActor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/net/HttpRequestBuilder.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.net", "errors": [], "class": "com.badlogic.gdx.net.HttpRequestBuilder", "inject": "true", "param": "httpRequest"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.ObjectIntMap", "inject": "true", "param": "values1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/AssetLoadingTask.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.assets", "errors": [], "class": "com.badlogic.gdx.assets.AssetLoadingTask", "inject": "true", "param": "loadFuture"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Button.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Button.ButtonStyle", "inject": "true", "param": "disabled"}, {"method": "<T>get(T)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectMap.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.ObjectMap", "inject": "true", "param": "key"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldStyle", "inject": "true", "param": "selection"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/VertexAttributes.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.graphics", "errors": [], "class": "com.badlogic.gdx.graphics.VertexAttributes.ReadonlyIterable", "inject": "true", "param": "iterator2"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "inject": "true", "param": "fillX"}, {"method": "findRegion(java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/graphics/g2d/TextureAtlas.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.graphics.g2d", "errors": [], "class": "com.badlogic.gdx.graphics.g2d.TextureAtlas", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextTooltip.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextTooltip.TextTooltipStyle", "inject": "true", "param": "label"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageButton.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageButton.ImageButtonStyle", "inject": "true", "param": "imageUp"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ImageButton.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ImageButton.ImageButtonStyle", "inject": "true", "param": "imageDown"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextButton.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextButton.TextButtonStyle", "inject": "true", "param": "fontColor"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ProgressBar.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ProgressBar.ProgressBarStyle", "inject": "true", "param": "knobBefore"}, {"method": "findNextTextField(com.badlogic.gdx.utils.Array<com.badlogic.gdx.scenes.scene2d.Actor>,com.badlogic.gdx.scenes.scene2d.ui.TextField,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,boolean)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField", "inject": "true", "param": ""}, {"method": "<T>getLoader(java.lang.Class<T>)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/AssetManager.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.assets", "errors": [], "class": "com.badlogic.gdx.assets.AssetManager", "inject": "true", "param": ""}, {"method": "getElementType(int)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/reflect/Field.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.utils.reflect", "errors": [], "class": "com.badlogic.gdx.utils.reflect.Field", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/files/FileHandle.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.files", "errors": [], "class": "com.badlogic.gdx.files.FileHandle", "inject": "true", "param": "type"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldStyle", "inject": "true", "param": "cursor"}, {"method": "getUrl()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/Net.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx", "errors": [], "class": "com.badlogic.gdx.Net.HttpRequest", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.JsonValue", "inject": "true", "param": "stringValue"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/actions/AddListenerAction.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.actions", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.actions.AddListenerAction", "inject": "true", "param": "listener"}, {"method": "EventTrigger(com.badlogic.gdx.input.RemoteInput.TouchEvent,com.badlogic.gdx.input.RemoteInput.KeyEvent)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/input/RemoteInput.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.input", "errors": [], "class": "com.badlogic.gdx.input.RemoteInput.EventTrigger", "inject": "true", "param": "touchEvent"}, {"method": "random()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Array.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.Array", "inject": "true", "param": ""}, {"method": "row()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Table.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Table", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextButton.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextButton.TextButtonStyle", "inject": "true", "param": "disabledFontColor"}, {"method": "getString(java.lang.String,java.lang.String)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/JsonValue.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.JsonValue", "inject": "true", "param": ""}, {"method": "getInstance()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TooltipManager.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.TooltipManager", "inject": "true", "param": ""}, {"method": "findNode(com.badlogic.gdx.utils.Array<? extends com.badlogic.gdx.scenes.scene2d.ui.Tree.Node>,java.lang.Object)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextButton.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextButton.TextButtonStyle", "inject": "true", "param": "overFontColor"}, {"method": "RemoteInput(int,com.badlogic.gdx.input.RemoteInput.RemoteInputListener)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/input/RemoteInput.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_PARAM", "jump": 0, "pkg": "com.badlogic.gdx.input", "errors": [], "class": "com.badlogic.gdx.input.RemoteInput", "inject": "true", "param": "listener"}, {"method": "resolve(com.badlogic.gdx.assets.loaders.AssetLoader,com.badlogic.gdx.assets.AssetDescriptor)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/AssetLoadingTask.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.assets", "errors": [], "class": "com.badlogic.gdx.assets.AssetLoadingTask", "inject": "true", "param": ""}, {"method": "getActor()", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/Action.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.Action", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/TextField.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.TextField.TextFieldStyle", "inject": "true", "param": "fontColor"}, {"method": "<T>getAssetFileName(T)", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/assets/AssetManager.java", "annotation": "javax.annotation.Nullable", "location": "METHOD_RETURN", "jump": 0, "pkg": "com.badlogic.gdx.assets", "errors": [], "class": "com.badlogic.gdx.assets.AssetManager", "inject": "true", "param": ""}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.utils", "errors": [], "class": "com.badlogic.gdx.utils.ObjectIntMap", "inject": "true", "param": "keys1"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Tree.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Tree", "inject": "true", "param": "foundNode"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/Cell.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.Cell", "inject": "true", "param": "expandY"}, {"method": "", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/scenes/scene2d/ui/ProgressBar.java", "annotation": "javax.annotation.Nullable", "location": "CLASS_FIELD", "jump": 0, "pkg": "com.badlogic.gdx.scenes.scene2d.ui", "errors": [], "class": "com.badlogic.gdx.scenes.scene2d.ui.ProgressBar.ProgressBarStyle", "inject": "true", "param": "disabledBackground"}]}