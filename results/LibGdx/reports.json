{"reports": [{"param": "file", "errors": ["(Covered) initializer method does not guarantee @NonNull field type (line 60) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression file is @Nullable", "dereferenced expression file is @Nullable", "dereferenced expression file is @Nullable", "dereferenced expression file is @Nullable", "dereferenced expression file is @Nullable", "dereferenced expression file is @Nullable", "dereferenced expression file is @Nullable", "dereferenced expression file is @Nullable", "dereferenced expression file is @Nullable", "dereferenced expression file is @Nullable", "dereferenced expression file is @Nullable", "dereferenced expression file is @Nullable", "dereferenced expression file is @Nullable", "dereferenced expression file is @Nullable"], "method": "", "class": "com.badlogic.gdx.files.FileHandle", "pkg": "com.badlogic.gdx.files", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/files/FileHandle.java", "location": "CLASS_FIELD", "jump": 15, "inject": "true", "annotation": "javax.annotation.Nullable"}, {"param": "type", "errors": ["(Covered) initializer method does not guarantee @NonNull field file (line 58) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "switch expression type is @Nullable", "switch expression type is @Nullable", "dereferenced expression type is @Nullable"], "method": "", "class": "com.badlogic.gdx.files.FileHandle", "pkg": "com.badlogic.gdx.files", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/files/FileHandle.java", "location": "CLASS_FIELD", "jump": 8, "inject": "true", "annotation": "javax.annotation.Nullable"}, {"param": "values2", "errors": ["(Covered) initializer method does not guarantee @NonNull fields file (line 58), type (line 59) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields iterator1 (line 65), iterator2 (line 65) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields entries1 (line 66), entries2 (line 66), keys1 (line 69), keys2 (line 69) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression values2 is @Nullable", "dereferenced expression values2 is @Nullable"], "method": "", "class": "com.badlogic.gdx.utils.ObjectIntMap", "pkg": "com.badlogic.gdx.utils", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "location": "CLASS_FIELD", "jump": 2, "inject": "true", "annotation": "javax.annotation.Nullable"}, {"param": "entries1", "errors": ["(Covered) initializer method does not guarantee @NonNull fields file (line 58), type (line 59) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields iterator1 (line 65), iterator2 (line 65) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields values1 (line 68), values2 (line 68), keys1 (line 69), keys2 (line 69) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression entries2 is @Nullable", "dereferenced expression entries2 is @Nullable"], "method": "", "class": "com.badlogic.gdx.utils.ObjectIntMap", "pkg": "com.badlogic.gdx.utils", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "location": "CLASS_FIELD", "jump": 2, "inject": "true", "annotation": "javax.annotation.Nullable"}, {"param": "entries2", "errors": ["(Covered) initializer method does not guarantee @NonNull fields file (line 58), type (line 59) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields iterator1 (line 65), iterator2 (line 65) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields values1 (line 68), values2 (line 68), keys1 (line 69), keys2 (line 69) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression entries2 is @Nullable", "dereferenced expression entries2 is @Nullable"], "method": "", "class": "com.badlogic.gdx.utils.ObjectIntMap", "pkg": "com.badlogic.gdx.utils", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "location": "CLASS_FIELD", "jump": 2, "inject": "true", "annotation": "javax.annotation.Nullable"}, {"param": "keys1", "errors": ["(Covered) initializer method does not guarantee @NonNull fields file (line 58), type (line 59) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields iterator1 (line 65), iterator2 (line 65) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields entries1 (line 66), entries2 (line 66), values1 (line 67), values2 (line 67) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression keys2 is @Nullable", "dereferenced expression keys2 is @Nullable"], "method": "", "class": "com.badlogic.gdx.utils.ObjectIntMap", "pkg": "com.badlogic.gdx.utils", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "location": "CLASS_FIELD", "jump": 2, "inject": "true", "annotation": "javax.annotation.Nullable"}, {"param": "keys2", "errors": ["(Covered) initializer method does not guarantee @NonNull fields file (line 58), type (line 59) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields iterator1 (line 65), iterator2 (line 65) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields entries1 (line 66), entries2 (line 66), values1 (line 67), values2 (line 67) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression keys2 is @Nullable", "dereferenced expression keys2 is @Nullable"], "method": "", "class": "com.badlogic.gdx.utils.ObjectIntMap", "pkg": "com.badlogic.gdx.utils", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "location": "CLASS_FIELD", "jump": 2, "inject": "true", "annotation": "javax.annotation.Nullable"}, {"param": "values1", "errors": ["(Covered) initializer method does not guarantee @NonNull fields file (line 58), type (line 59) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields iterator1 (line 65), iterator2 (line 65) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields entries1 (line 66), entries2 (line 66), keys1 (line 69), keys2 (line 69) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression values2 is @Nullable", "dereferenced expression values2 is @Nullable"], "method": "", "class": "com.badlogic.gdx.utils.ObjectIntMap", "pkg": "com.badlogic.gdx.utils", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "location": "CLASS_FIELD", "jump": 2, "inject": "true", "annotation": "javax.annotation.Nullable"}, {"param": "iterator2", "errors": ["(Covered) initializer method does not guarantee @NonNull fields file (line 58), type (line 59) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression iterator2 is @Nullable", "dereferenced expression iterator2 is @Nullable"], "method": "", "class": "com.badlogic.gdx.utils.ObjectSet", "pkg": "com.badlogic.gdx.utils", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectSet.java", "location": "CLASS_FIELD", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable"}, {"param": "iterator1", "errors": ["(Covered) initializer method does not guarantee @NonNull fields file (line 58), type (line 59) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression iterator2 is @Nullable", "dereferenced expression iterator2 is @Nullable"], "method": "", "class": "com.badlogic.gdx.utils.ObjectSet", "pkg": "com.badlogic.gdx.utils", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectSet.java", "location": "CLASS_FIELD", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable"}, {"param": "keyNames", "errors": ["(Covered) initializer method does not guarantee @NonNull fields file (line 58), type (line 59) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression keyNames is @Nullable"], "method": "", "class": "com.badlogic.gdx.Input.Keys", "pkg": "com.badlogic.gdx", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/Input.java", "location": "CLASS_FIELD", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable"}, {"param": "charset", "errors": ["(Covered) initializer method does not guarantee @NonNull fields file (line 58), type (line 59) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'charset' where @NonNull is required"], "method": "writeString(java.lang.String,boolean,java.lang.String)", "class": "com.badlogic.gdx.files.FileHandle", "pkg": "com.badlogic.gdx.files", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/files/FileHandle.java", "location": "METHOD_PARAM", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable"}, {"param": "key", "errors": ["(Covered) initializer method does not guarantee @NonNull fields file (line 58), type (line 59) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields iterator1 (line 65), iterator2 (line 65) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields entries1 (line 66), entries2 (line 66), values1 (line 67), values2 (line 67), keys1 (line 68), keys2 (line 68) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'entry.key' where @NonNull is required"], "method": "", "class": "com.badlogic.gdx.utils.ObjectIntMap.Entry", "pkg": "com.badlogic.gdx.utils", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "location": "CLASS_FIELD", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable"}, {"param": "iterable", "errors": ["(Covered) initializer method does not guarantee @NonNull fields file (line 58), type (line 59) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields iterator1 (line 65), iterator2 (line 65) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields entries1 (line 66), entries2 (line 66), values1 (line 67), values2 (line 67), keys1 (line 68), keys2 (line 68) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field predicateIterable (line 41) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field predicateIterable (line 41) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields iterator1 (line 672), iterator2 (line 672) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "method": "", "class": "com.badlogic.gdx.utils.Array", "pkg": "com.badlogic.gdx.utils", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/Array.java", "location": "CLASS_FIELD", "jump": 0, "inject": "true", "annotation": "javax.annotation.Nullable"}, {"param": "charset", "errors": ["(Covered) initializer method does not guarantee @NonNull fields file (line 58), type (line 59) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "method": "readString(java.lang.String)", "class": "com.badlogic.gdx.files.FileHandle", "pkg": "com.badlogic.gdx.files", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/files/FileHandle.java", "location": "METHOD_PARAM", "jump": -1, "inject": "true", "annotation": "javax.annotation.Nullable"}, {"param": "charset", "errors": ["(Covered) initializer method does not guarantee @NonNull fields file (line 58), type (line 59) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "method": "writer(boolean,java.lang.String)", "class": "com.badlogic.gdx.files.FileHandle", "pkg": "com.badlogic.gdx.files", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/files/FileHandle.java", "location": "METHOD_PARAM", "jump": -1, "inject": "true", "annotation": "javax.annotation.Nullable"}, {"param": "", "errors": ["(Covered) initializer method does not guarantee @NonNull fields file (line 58), type (line 59) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "method": "toString(int)", "class": "com.badlogic.gdx.Input.Keys", "pkg": "com.badlogic.gdx", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/Input.java", "location": "METHOD_RETURN", "jump": -1, "inject": "true", "annotation": "javax.annotation.Nullable"}, {"param": "c", "errors": ["(Covered) initializer method does not guarantee @NonNull fields file (line 58), type (line 59) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "method": "closeQuietly(java.io.Closeable)", "class": "com.badlogic.gdx.utils.StreamUtils", "pkg": "com.badlogic.gdx.utils", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/StreamUtils.java", "location": "METHOD_PARAM", "jump": -16, "inject": "true", "annotation": "javax.annotation.Nullable"}, {"param": "values2", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 66), entries2 (line 66), keys1 (line 69), keys2 (line 69) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression values2 is @Nullable", "dereferenced expression values2 is @Nullable"], "method": "", "class": "com.badlogic.gdx.utils.ObjectIntMap", "pkg": "com.badlogic.gdx.utils", "location": "CLASS_FIELD", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "jump": 2, "inject": "true", "annotation": "javax.annotation.Nullable"}, {"param": "entries1", "errors": ["(Covered) initializer method does not guarantee @NonNull fields values1 (line 68), values2 (line 68), keys1 (line 69), keys2 (line 69) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression entries2 is @Nullable", "dereferenced expression entries2 is @Nullable"], "method": "", "class": "com.badlogic.gdx.utils.ObjectIntMap", "pkg": "com.badlogic.gdx.utils", "location": "CLASS_FIELD", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "jump": 2, "inject": "true", "annotation": "javax.annotation.Nullable"}, {"param": "entries2", "errors": ["(Covered) initializer method does not guarantee @NonNull fields values1 (line 68), values2 (line 68), keys1 (line 69), keys2 (line 69) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression entries2 is @Nullable", "dereferenced expression entries2 is @Nullable"], "method": "", "class": "com.badlogic.gdx.utils.ObjectIntMap", "pkg": "com.badlogic.gdx.utils", "location": "CLASS_FIELD", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "jump": 2, "inject": "true", "annotation": "javax.annotation.Nullable"}, {"param": "keys1", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 66), entries2 (line 66), values1 (line 67), values2 (line 67) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression keys2 is @Nullable", "dereferenced expression keys2 is @Nullable"], "method": "", "class": "com.badlogic.gdx.utils.ObjectIntMap", "pkg": "com.badlogic.gdx.utils", "location": "CLASS_FIELD", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "jump": 2, "inject": "true", "annotation": "javax.annotation.Nullable"}, {"param": "keys2", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 66), entries2 (line 66), values1 (line 67), values2 (line 67) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression keys2 is @Nullable", "dereferenced expression keys2 is @Nullable"], "method": "", "class": "com.badlogic.gdx.utils.ObjectIntMap", "pkg": "com.badlogic.gdx.utils", "location": "CLASS_FIELD", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "jump": 2, "inject": "true", "annotation": "javax.annotation.Nullable"}, {"param": "values1", "errors": ["(Covered) initializer method does not guarantee @NonNull fields entries1 (line 66), entries2 (line 66), keys1 (line 69), keys2 (line 69) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression values2 is @Nullable", "dereferenced expression values2 is @Nullable"], "method": "", "class": "com.badlogic.gdx.utils.ObjectIntMap", "pkg": "com.badlogic.gdx.utils", "location": "CLASS_FIELD", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectIntMap.java", "jump": 2, "inject": "true", "annotation": "javax.annotation.Nullable"}, {"param": "iterator2", "errors": ["dereferenced expression iterator2 is @Nullable", "dereferenced expression iterator2 is @Nullable"], "method": "", "class": "com.badlogic.gdx.utils.ObjectSet", "pkg": "com.badlogic.gdx.utils", "location": "CLASS_FIELD", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectSet.java", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable"}, {"param": "iterator1", "errors": ["dereferenced expression iterator2 is @Nullable", "dereferenced expression iterator2 is @Nullable"], "method": "", "class": "com.badlogic.gdx.utils.ObjectSet", "pkg": "com.badlogic.gdx.utils", "location": "CLASS_FIELD", "uri": "//tmp/projects/libgdx/gdx/src/com/badlogic/gdx/utils/ObjectSet.java", "jump": 1, "inject": "true", "annotation": "javax.annotation.Nullable"}]}