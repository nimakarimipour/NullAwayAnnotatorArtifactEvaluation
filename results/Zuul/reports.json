{"reports": [{"pkg": "com.netflix.zuul.passport", "method": "fromSessionContext(com.netflix.zuul.context.SessionContext)", "annotation": "javax.annotation.Nullable", "jump": 5, "location": "METHOD_RETURN", "class": "com.netflix.zuul.passport.CurrentPassport", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression passport is @Nullable", "dereferenced expression passport is @Nullable", "dereferenced expression passport is @Nullable", "dereferenced expression passport is @Nullable", "dereferenced expression CurrentPassport.fromSessionContext(input.getContext()) is @Nullable"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/passport/CurrentPassport.java", "param": ""}, {"pkg": "com.netflix.zuul.niws", "method": "", "annotation": "javax.annotation.Nullable", "jump": 2, "location": "CLASS_FIELD", "class": "com.netflix.zuul.niws.RequestAttempt", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), vip (line 67) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), vip (line 67) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'exceptionType' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/niws/RequestAttempt.java", "param": "exceptionType"}, {"pkg": "com.netflix.zuul.niws", "method": "", "annotation": "javax.annotation.Nullable", "jump": 2, "location": "CLASS_FIELD", "class": "com.netflix.zuul.niws.RequestAttempt", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'vip' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/niws/RequestAttempt.java", "param": "vip"}, {"pkg": "com.netflix.zuul.niws", "method": "getFromSessionContext(com.netflix.zuul.context.SessionContext)", "annotation": "javax.annotation.Nullable", "jump": 2, "location": "METHOD_RETURN", "class": "com.netflix.zuul.niws.RequestAttempts", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'attempts' where @NonNull is required", "(Covered) passing @Nullable parameter 'attempts' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/niws/RequestAttempts.java", "param": ""}, {"pkg": "com.netflix.netty.common", "method": "localAddress(io.netty.channel.Channel)", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "METHOD_RETURN", "class": "com.netflix.netty.common.SourceAddressChannelHandler", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'localAddress' where @NonNull is required", "dereferenced expression localAddress is @Nullable"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/netty/common/SourceAddressChannelHandler.java", "param": ""}, {"pkg": "com.netflix.zuul.filters", "method": "", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "CLASS_FIELD", "class": "com.netflix.zuul.filters.FilterError", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'exception' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/filters/FilterError.java", "param": "exception"}, {"pkg": "com.netflix.zuul.context", "method": "getEventProperties()", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.context.SessionContext", "inject": "true", "errors": ["dereferenced expression getEventProperties() is @Nullable", "dereferenced expression eventProps is @Nullable"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/context/SessionContext.java", "param": ""}, {"pkg": "com.netflix.zuul.netty.filter", "method": "FilterChainResumer(I,com.netflix.zuul.filters.ZuulFilter<I,O>,com.netflix.zuul.message.ZuulMessage,long)", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "METHOD_PARAM", "class": "com.netflix.zuul.netty.filter.BaseZuulFilterRunner.FilterChainResumer", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field snapshot (line 354) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/filter/BaseZuulFilterRunner.java", "param": "snapshot"}, {"pkg": "com.netflix.zuul.netty.connectionpool", "method": "", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "CLASS_FIELD", "class": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field zuulResponse (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields pushConnection (line 50), keepAliveTask (line 52) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field clientConnFactory (line 116) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression this.channelInitializer is @Nullable"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java", "param": "channelInitializer"}, {"pkg": "com.netflix.zuul.exception", "method": "ZuulException(java.lang.String,java.lang.String,boolean)", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "METHOD_PARAM", "class": "com.netflix.zuul.exception.ZuulException", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull field errorCause (line 28) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/exception/ZuulException.java", "param": "errorCause"}, {"pkg": "com.netflix.zuul.netty.filter", "method": "", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "CLASS_FIELD", "class": "com.netflix.zuul.netty.filter.ZuulFilterChainHandler", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field zuulResponse (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields pushConnection (line 50), keepAliveTask (line 52) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'zuulRequest' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/filter/ZuulFilterChainHandler.java", "param": "zuulRequest"}, {"pkg": "com.netflix.netty.common.ssl", "method": "ServerSslConfig(java.lang.String[],java.lang.String[],java.io.File,java.io.File,io.netty.handler.ssl.ClientAuth,java.io.File,java.io.File,boolean)", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "METHOD_PARAM", "class": "com.netflix.netty.common.ssl.ServerSslConfig", "inject": "true", "errors": ["(Covered) passing @Nullable parameter '(File) null' where @NonNull is required", "(Covered) passing @Nullable parameter '(File) null' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/netty/common/ssl/ServerSslConfig.java", "param": "clientAuthTrustStoreFile"}, {"pkg": "com.netflix.netty.common.throttle", "method": "reject(io.netty.channel.ChannelHandlerContext,com.netflix.netty.common.throttle.RejectionType,com.netflix.zuul.stats.status.StatusCategory,java.lang.String,io.netty.handler.codec.http.HttpRequest,java.lang.Integer,io.netty.handler.codec.http.HttpResponseStatus,java.lang.String,java.util.Map<java.lang.String,java.lang.String>)", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "METHOD_PARAM", "class": "com.netflix.netty.common.throttle.RejectionUtils", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java", "param": "request"}, {"pkg": "com.netflix.netty.common.ssl", "method": "SslHandshakeInfo(boolean,java.lang.String,java.lang.String,io.netty.handler.ssl.ClientAuth,java.security.cert.Certificate,javax.security.cert.X509Certificate)", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "METHOD_PARAM", "class": "com.netflix.netty.common.ssl.SslHandshakeInfo", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field zuulResponse (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields pushConnection (line 50), keepAliveTask (line 52) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'peerCert' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/netty/common/ssl/SslHandshakeInfo.java", "param": "serverCertificate"}, {"pkg": "com.netflix.zuul.plugins", "method": "loadAddress()", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.plugins.Tracer", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression loadAddress() is @Nullable", "dereferenced expression loadAddress() is @Nullable"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/plugins/Tracer.java", "param": ""}, {"pkg": "com.netflix.zuul.message", "method": "getFirstNormal(java.lang.String)", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.message.Headers", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/message/Headers.java", "param": ""}, {"pkg": "com.netflix.zuul.netty.connectionpool", "method": "", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "CLASS_FIELD", "class": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field zuulResponse (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields pushConnection (line 50), keepAliveTask (line 52) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field channelInitializer (line 119) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'clientConnFactory' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java", "param": "clientConnFactory"}, {"pkg": "com.netflix.zuul.origins", "method": "onRequestExecutionFailed(com.netflix.zuul.message.http.HttpRequestMessage,com.netflix.loadbalancer.Server,int,java.lang.Throwable)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_PARAM", "class": "com.netflix.zuul.origins.NettyOrigin", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) parameter originServer is @NonNull, but parameter in superclass method com.netflix.zuul.origins.NettyOrigin.onRequestExecutionFailed(com.netflix.zuul.message.http.HttpRequestMessage,com.netflix.loadbalancer.Server,int,java.lang.Throwable) is @Nullable"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java", "param": "originServer"}, {"pkg": "com.netflix.zuul.context", "method": "decorate(com.netflix.zuul.context.SessionContext)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_RETURN", "class": "com.netflix.zuul.context.ZuulSessionContextDecorator", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) method returns @Nullable, but superclass method com.netflix.zuul.context.SessionContextDecorator.decorate(com.netflix.zuul.context.SessionContext) returns @NonNull"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/context/ZuulSessionContextDecorator.java", "param": ""}, {"pkg": "com.netflix.netty.common.ssl", "method": "ServerSslConfig(java.lang.String[],java.lang.String[],java.io.File,java.io.File)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_PARAM", "class": "com.netflix.netty.common.ssl.ServerSslConfig", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'certChainFile' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/netty/common/ssl/ServerSslConfig.java", "param": "certChainFile"}, {"pkg": "com.netflix.zuul.filters.endpoint", "method": "handleOriginNonSuccessResponse(io.netty.handler.codec.http.HttpResponse,com.netflix.loadbalancer.Server)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_PARAM", "class": "com.netflix.zuul.filters.endpoint.ProxyEndpoint", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'chosenServer' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/filters/endpoint/ProxyEndpoint.java", "param": "chosenServer"}, {"pkg": "com.netflix.zuul.netty.connectionpool", "method": "acquire(io.netty.channel.EventLoop,java.lang.Object,com.netflix.zuul.passport.CurrentPassport,java.util.concurrent.atomic.AtomicReference<com.netflix.loadbalancer.Server>,java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress>)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_PARAM", "class": "com.netflix.zuul.netty.connectionpool.ClientChannelManager", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) parameter key is @NonNull, but parameter in superclass method com.netflix.zuul.netty.connectionpool.ClientChannelManager.acquire(io.netty.channel.EventLoop,java.lang.Object,com.netflix.zuul.passport.CurrentPassport,java.util.concurrent.atomic.AtomicReference<com.netflix.loadbalancer.Server>,java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress>) is @Nullable"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/ClientChannelManager.java", "param": "key"}, {"pkg": "com.netflix.zuul", "method": "getFiltersByType(com.netflix.zuul.filters.FilterType)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_RETURN", "class": "com.netflix.zuul.StaticFilterLoader", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) method returns @Nullable, but superclass method com.netflix.zuul.FilterLoader.getFiltersByType(com.netflix.zuul.filters.FilterType) returns @NonNull"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/StaticFilterLoader.java", "param": ""}, {"pkg": "com.netflix.zuul.stats.status", "method": "getStatusCategory(com.netflix.zuul.context.SessionContext)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_PARAM", "class": "com.netflix.zuul.stats.status.StatusCategoryUtils", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression ctx is @Nullable"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/stats/status/StatusCategoryUtils.java", "param": "ctx"}, {"pkg": "com.netflix.zuul.filters", "method": "get(java.lang.String)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_RETURN", "class": "com.netflix.zuul.filters.MutableFilterRegistry", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) method returns @Nullable, but superclass method com.netflix.zuul.filters.FilterRegistry.get(java.lang.String) returns @NonNull"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/filters/MutableFilterRegistry.java", "param": ""}, {"pkg": "com.netflix.zuul.message.http", "method": "", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "CLASS_FIELD", "class": "com.netflix.zuul.message.http.HttpRequestMessageImpl", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/message/http/HttpRequestMessageImpl.java", "param": "inboundRequest"}, {"pkg": "com.netflix.zuul.filters.endpoint", "method": "preCacheBodyForRetryingSslRequests()", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_RETURN", "class": "com.netflix.zuul.filters.endpoint.ProxyEndpoint", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/filters/endpoint/ProxyEndpoint.java", "param": ""}, {"pkg": "com.netflix.zuul.context", "method": "getFilterErrors()", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_RETURN", "class": "com.netflix.zuul.context.SessionContext", "inject": "true", "errors": ["dereferenced expression zuulCtx.getFilterErrors() is @Nullable"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/context/SessionContext.java", "param": ""}, {"pkg": "com.netflix.netty.common.accesslog", "method": "", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "CLASS_FIELD", "class": "com.netflix.netty.common.accesslog.AccessLogChannelHandler.RequestState", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'state.response' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/netty/common/accesslog/AccessLogChannelHandler.java", "param": "response"}, {"pkg": "com.netflix.zuul.filters.endpoint", "method": "unlinkFromOrigin()", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_RETURN", "class": "com.netflix.zuul.filters.endpoint.ProxyEndpoint", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'originCh' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/filters/endpoint/ProxyEndpoint.java", "param": ""}, {"pkg": "com.netflix.zuul.netty.server.push", "method": "", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "CLASS_FIELD", "class": "com.netflix.zuul.netty.server.push.PushRegistrationHandler", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field zuulResponse (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field keepAliveTask (line 53) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/server/push/PushRegistrationHandler.java", "param": "pushConnection"}, {"pkg": "com.netflix.zuul.netty.server", "method": "", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "CLASS_FIELD", "class": "com.netflix.zuul.netty.server.ClientRequestReceiver", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull field clientRequest (line 82) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression zuulRequest is @Nullable"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/server/ClientRequestReceiver.java", "param": "zuulRequest"}, {"pkg": "com.netflix.zuul.netty.connectionpool", "method": "acquire(io.netty.channel.EventLoop,java.lang.Object,com.netflix.zuul.passport.CurrentPassport,java.util.concurrent.atomic.AtomicReference<com.netflix.loadbalancer.Server>,java.util.concurrent.atomic.AtomicReference<? super java.net.InetAddress>)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_PARAM", "class": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field zuulResponse (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields pushConnection (line 50), keepAliveTask (line 52) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields clientConnFactory (line 116), channelInitializer (line 118) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'key' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java", "param": "key"}, {"pkg": "com.netflix.zuul.netty.server.ssl", "method": "incrementCounters(io.netty.handler.ssl.SslHandshakeCompletionEvent,com.netflix.netty.common.ssl.SslHandshakeInfo)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_PARAM", "class": "com.netflix.zuul.netty.server.ssl.SslHandshakeInfoHandler", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field zuulResponse (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields pushConnection (line 50), keepAliveTask (line 52) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression handshakeInfo is @Nullable"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/server/ssl/SslHandshakeInfoHandler.java", "param": "handshakeInfo"}, {"pkg": "com.netflix.netty.common.accesslog", "method": "", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "CLASS_FIELD", "class": "com.netflix.netty.common.accesslog.AccessLogChannelHandler.RequestState", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'state.request' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/netty/common/accesslog/AccessLogChannelHandler.java", "param": "request"}, {"pkg": "com.netflix.zuul.context", "method": "getError()", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_RETURN", "class": "com.netflix.zuul.context.SessionContext", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'context.getError()' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/context/SessionContext.java", "param": ""}, {"pkg": "com.netflix.netty.common", "method": "sourceAddress(io.netty.channel.Channel)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_RETURN", "class": "com.netflix.netty.common.SourceAddressChannelHandler", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'sourceAddress' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/netty/common/SourceAddressChannelHandler.java", "param": ""}, {"pkg": "com.netflix.zuul.context", "method": "getStaticResponse()", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_RETURN", "class": "com.netflix.zuul.context.SessionContext", "inject": "true", "errors": ["dereferenced expression resp is @Nullable"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/context/SessionContext.java", "param": ""}, {"pkg": "com.netflix.zuul.filters.endpoint", "method": "getDefaultOutput(com.netflix.zuul.message.http.HttpRequestMessage)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_RETURN", "class": "com.netflix.zuul.filters.endpoint.ProxyEndpoint", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) method returns @Nullable, but superclass method com.netflix.zuul.filters.ZuulFilter.getDefaultOutput(I) returns @NonNull"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/filters/endpoint/ProxyEndpoint.java", "param": ""}, {"pkg": "com.netflix.zuul.context", "method": "getEndpoint()", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_RETURN", "class": "com.netflix.zuul.context.SessionContext", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/context/SessionContext.java", "param": ""}, {"pkg": "com.netflix.zuul.origins", "method": "newRequestAttempt(com.netflix.loadbalancer.Server,com.netflix.zuul.context.SessionContext,int)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_PARAM", "class": "com.netflix.zuul.origins.NettyOrigin", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) parameter server is @NonNull, but parameter in superclass method com.netflix.zuul.origins.NettyOrigin.newRequestAttempt(com.netflix.loadbalancer.Server,com.netflix.zuul.context.SessionContext,int) is @Nullable"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java", "param": "server"}, {"pkg": "com.netflix.zuul.niws", "method": "", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "CLASS_FIELD", "class": "com.netflix.zuul.niws.RequestAttempt", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), exceptionType (line 55), vip (line 67) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), exceptionType (line 55), vip (line 67) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'error' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/niws/RequestAttempt.java", "param": "error"}, {"pkg": "com.netflix.zuul.origins", "method": "getIpAddrFromServer(com.netflix.loadbalancer.Server)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_RETURN", "class": "com.netflix.zuul.origins.BasicNettyOrigin", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) method returns @Nullable, but superclass method com.netflix.zuul.origins.NettyOrigin.getIpAddrFromServer(com.netflix.loadbalancer.Server) returns @NonNull"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/origins/BasicNettyOrigin.java", "param": ""}, {"pkg": "com.netflix.zuul", "method": "", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "CLASS_FIELD", "class": "com.netflix.zuul.ZuulApplicationInfo", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field zuulResponse (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields pushConnection (line 50), keepAliveTask (line 52) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields clientConnFactory (line 116), channelInitializer (line 118) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/ZuulApplicationInfo.java", "param": "applicationName"}, {"pkg": "com.netflix.zuul.message.http", "method": "", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "CLASS_FIELD", "class": "com.netflix.zuul.message.http.HttpResponseMessageImpl", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/message/http/HttpResponseMessageImpl.java", "param": "inboundResponse"}, {"pkg": "com.netflix.zuul.netty.server", "method": "", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "CLASS_FIELD", "class": "com.netflix.zuul.netty.server.ClientResponseWriter", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'zuulResponse' where @NonNull is required", "(Covered) passing @Nullable parameter 'zuulResponse' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/server/ClientResponseWriter.java", "param": "zuulResponse"}, {"pkg": "com.netflix.zuul.netty.filter", "method": "ZuulFilterChainRunner(com.netflix.zuul.filters.ZuulFilter<T,T>[],com.netflix.zuul.FilterUsageNotifier,com.netflix.zuul.netty.filter.FilterRunner<T,?>)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_PARAM", "class": "com.netflix.zuul.netty.filter.ZuulFilterChainRunner", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'nextStage' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/filter/ZuulFilterChainRunner.java", "param": "nextStage"}, {"pkg": "com.netflix.zuul", "method": "", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "CLASS_FIELD", "class": "com.netflix.zuul.ZuulApplicationInfo", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field zuulResponse (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields pushConnection (line 50), keepAliveTask (line 52) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields clientConnFactory (line 116), channelInitializer (line 118) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/ZuulApplicationInfo.java", "param": "stack"}, {"pkg": "com.netflix.zuul.filters.endpoint", "method": "parseReadTimeout(java.lang.Object)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_RETURN", "class": "com.netflix.zuul.filters.endpoint.ProxyEndpoint", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/filters/endpoint/ProxyEndpoint.java", "param": ""}, {"pkg": "com.netflix.zuul.netty.insights", "method": "", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "CLASS_FIELD", "class": "com.netflix.zuul.netty.insights.PassportStateServerHandler", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression registry is @Nullable"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/insights/PassportStateServerHandler.java", "param": "registry"}, {"pkg": "com.netflix.zuul.message", "method": "getBodyAsText()", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_RETURN", "class": "com.netflix.zuul.message.ZuulMessageImpl", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) method returns @Nullable, but superclass method com.netflix.zuul.message.ZuulMessage.getBodyAsText() returns @NonNull"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/message/ZuulMessageImpl.java", "param": ""}, {"pkg": "com.netflix.zuul.stats.status", "method": "getStatusCategory(com.netflix.zuul.context.SessionContext)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_RETURN", "class": "com.netflix.zuul.stats.status.StatusCategoryUtils", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/stats/status/StatusCategoryUtils.java", "param": ""}, {"pkg": "com.netflix.zuul.origins", "method": "getIpAddrFromServer(com.netflix.loadbalancer.Server)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_PARAM", "class": "com.netflix.zuul.origins.NettyOrigin", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) parameter server is @NonNull, but parameter in superclass method com.netflix.zuul.origins.NettyOrigin.getIpAddrFromServer(com.netflix.loadbalancer.Server) is @Nullable"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java", "param": "server"}, {"pkg": "com.netflix.zuul.context", "method": "getString(java.lang.String)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_RETURN", "class": "com.netflix.zuul.context.SessionContext", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/context/SessionContext.java", "param": ""}, {"pkg": "com.netflix.zuul.filters.endpoint", "method": "processContentChunk(com.netflix.zuul.message.ZuulMessage,io.netty.handler.codec.http.HttpContent)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_RETURN", "class": "com.netflix.zuul.filters.endpoint.ProxyEndpoint", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) method returns @Nullable, but superclass method com.netflix.zuul.filters.SyncZuulFilterAdapter.processContentChunk(com.netflix.zuul.message.ZuulMessage,io.netty.handler.codec.http.HttpContent) returns @NonNull"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/filters/endpoint/ProxyEndpoint.java", "param": ""}, {"pkg": "com.netflix.zuul.context", "method": "getFilterExecutionSummary()", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_RETURN", "class": "com.netflix.zuul.context.SessionContext", "inject": "true", "errors": ["dereferenced expression sb is @Nullable"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/context/SessionContext.java", "param": ""}, {"pkg": "com.netflix.zuul.message", "method": "getBody()", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_RETURN", "class": "com.netflix.zuul.message.ZuulMessageImpl", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) method returns @Nullable, but superclass method com.netflix.zuul.message.ZuulMessage.getBody() returns @NonNull"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/message/ZuulMessageImpl.java", "param": ""}, {"pkg": "com.netflix.zuul.filters.endpoint", "method": "getOrCreateOrigin(com.netflix.zuul.origins.OriginManager<com.netflix.zuul.origins.NettyOrigin>,java.lang.String,java.lang.String,java.lang.String,boolean,com.netflix.zuul.context.SessionContext)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_PARAM", "class": "com.netflix.zuul.filters.endpoint.ProxyEndpoint", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression originManager is @Nullable"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/filters/endpoint/ProxyEndpoint.java", "param": "originManager"}, {"pkg": "com.netflix.zuul.stats", "method": "getProtocolMonitor(java.lang.String)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.stats.StatsManager", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/stats/StatsManager.java", "param": ""}, {"pkg": "com.netflix.zuul.netty.filter", "method": "getEndpoint(com.netflix.zuul.message.http.HttpRequestMessage)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.netty.filter.ZuulEndPointRunner", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'getEndpoint(zuulReq)' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/filter/ZuulEndPointRunner.java", "param": ""}, {"pkg": "com.netflix.zuul.netty.connectionpool", "method": "OriginConnectException(java.lang.String,com.netflix.zuul.exception.ErrorType)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_PARAM", "class": "com.netflix.zuul.netty.connectionpool.OriginConnectException", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field zuulResponse (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields pushConnection (line 50), keepAliveTask (line 52) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/OriginConnectException.java", "param": "message"}, {"pkg": "com.netflix.zuul", "method": "getFilterByNameAndType(java.lang.String,com.netflix.zuul.filters.FilterType)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.DynamicFilterLoader", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field zuulResponse (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields pushConnection (line 50), keepAliveTask (line 52) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields clientConnFactory (line 116), channelInitializer (line 118) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) method returns @Nullable, but superclass method com.netflix.zuul.FilterLoader.getFilterByNameAndType(java.lang.String,com.netflix.zuul.filters.FilterType) returns @NonNull"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/DynamicFilterLoader.java", "param": ""}, {"pkg": "com.netflix.zuul.netty.connectionpool", "method": "tryGettingFromConnectionPool(io.netty.channel.EventLoop)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field zuulResponse (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields pushConnection (line 50), keepAliveTask (line 52) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java", "param": ""}, {"pkg": "com.netflix.zuul.filters.endpoint", "method": "", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "CLASS_FIELD", "class": "com.netflix.zuul.filters.endpoint.ProxyEndpoint", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/filters/endpoint/ProxyEndpoint.java", "param": "originResponseReceiver"}, {"pkg": "com.netflix.zuul.filters.endpoint", "method": "verifyOrigin(com.netflix.zuul.context.SessionContext,com.netflix.zuul.message.http.HttpRequestMessage,java.lang.String,com.netflix.zuul.origins.Origin)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_PARAM", "class": "com.netflix.zuul.filters.endpoint.ProxyEndpoint", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/filters/endpoint/ProxyEndpoint.java", "param": "primaryOrigin"}, {"pkg": "com.netflix.zuul.message.http", "method": "", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "CLASS_FIELD", "class": "com.netflix.zuul.message.http.HttpRequestMessageImpl", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/message/http/HttpRequestMessageImpl.java", "param": "reconstructedUri"}, {"pkg": "com.netflix.zuul.passport", "method": "findStateBackwards(com.netflix.zuul.passport.PassportState)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.passport.CurrentPassport", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/passport/CurrentPassport.java", "param": ""}, {"pkg": "com.netflix.zuul.niws", "method": "", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "CLASS_FIELD", "class": "com.netflix.zuul.niws.RequestAttempt", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/niws/RequestAttempt.java", "param": "availabilityZone"}, {"pkg": "com.netflix.zuul.message.http", "method": "getFirstValue(java.lang.String)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.message.http.Cookies", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/message/http/Cookies.java", "param": ""}, {"pkg": "com.netflix.zuul.passport", "method": "parseFromToString(java.lang.String)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.passport.CurrentPassport", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/passport/CurrentPassport.java", "param": ""}, {"pkg": "com.netflix.zuul.stats.status", "method": "getOriginStatusCategory(com.netflix.zuul.context.SessionContext)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.stats.status.StatusCategoryUtils", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/stats/status/StatusCategoryUtils.java", "param": ""}, {"pkg": "com.netflix.zuul.context", "method": "getRouteHost()", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.context.SessionContext", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/context/SessionContext.java", "param": ""}, {"pkg": "com.netflix.netty.common.throttle", "method": "rejectByClosingConnection(io.netty.channel.ChannelHandlerContext,com.netflix.zuul.stats.status.StatusCategory,java.lang.String,io.netty.handler.codec.http.HttpRequest,java.lang.Integer)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_PARAM", "class": "com.netflix.netty.common.throttle.RejectionUtils", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/netty/common/throttle/RejectionUtils.java", "param": "injectedLatencyMillis"}, {"pkg": "com.netflix.zuul.niws", "method": "getFinalAttempt()", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.niws.RequestAttempts", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/niws/RequestAttempts.java", "param": ""}, {"pkg": "com.netflix.zuul.message.http", "method": "", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "CLASS_FIELD", "class": "com.netflix.zuul.message.http.HttpRequestMessageImpl", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/message/http/HttpRequestMessageImpl.java", "param": "parsedCookies"}, {"pkg": "com.netflix.zuul.passport", "method": "findState(com.netflix.zuul.passport.PassportState)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.passport.CurrentPassport", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/passport/CurrentPassport.java", "param": ""}, {"pkg": "com.netflix.zuul.netty.server", "method": "", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "CLASS_FIELD", "class": "com.netflix.zuul.netty.server.ClientRequestReceiver", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull field zuulRequest (line 79) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/server/ClientRequestReceiver.java", "param": "clientRequest"}, {"pkg": "com.netflix.zuul.niws", "method": "", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "CLASS_FIELD", "class": "com.netflix.zuul.niws.RequestAttempt", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields error (line 53), exceptionType (line 55), vip (line 67) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields error (line 53), exceptionType (line 55), vip (line 67) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'cause' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/niws/RequestAttempt.java", "param": "cause"}, {"pkg": "com.netflix.zuul.context", "method": "getRouteVIP()", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.context.SessionContext", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/context/SessionContext.java", "param": ""}, {"pkg": "com.netflix.zuul.netty.server.push", "method": "get(java.lang.String)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.netty.server.push.PushConnectionRegistry", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/server/push/PushConnectionRegistry.java", "param": ""}, {"pkg": "com.netflix.zuul.netty.connectionpool", "method": "getSelectedHostString(java.net.SocketAddress)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.netty.connectionpool.PerServerConnectionPool", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field zuulResponse (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields pushConnection (line 50), keepAliveTask (line 52) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/PerServerConnectionPool.java", "param": ""}, {"pkg": "com.netflix.zuul.util", "method": "getBodySizeIfKnown(com.netflix.zuul.message.ZuulMessage)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.util.HttpUtils", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/util/HttpUtils.java", "param": ""}, {"pkg": "com.netflix.zuul.filters.endpoint", "method": "getOrigin(com.netflix.zuul.message.http.HttpRequestMessage)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.filters.endpoint.ProxyEndpoint", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/filters/endpoint/ProxyEndpoint.java", "param": ""}, {"pkg": "com.netflix.zuul.filters.endpoint", "method": "injectCustomVip(com.netflix.zuul.message.http.HttpRequestMessage)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.filters.endpoint.ProxyEndpoint", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/filters/endpoint/ProxyEndpoint.java", "param": ""}, {"pkg": "com.netflix.zuul.util", "method": "extractClientIpFromXForwardedFor(java.lang.String)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.util.HttpUtils", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/util/HttpUtils.java", "param": ""}, {"pkg": "com.netflix.zuul.stats", "method": "getHostMonitor(java.lang.String)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.stats.StatsManager", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/stats/StatsManager.java", "param": ""}, {"pkg": "com.netflix.zuul.message", "method": "clearMatchingStartingAt(int,java.lang.String,java.util.Collection<? super java.lang.String>)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_PARAM", "class": "com.netflix.zuul.message.Headers", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/message/Headers.java", "param": "removed"}, {"pkg": "com.netflix.zuul.monitoring", "method": "", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "CLASS_FIELD", "class": "com.netflix.zuul.monitoring.TracerFactory", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/monitoring/TracerFactory.java", "param": "INSTANCE"}, {"pkg": "com.netflix.zuul.util", "method": "stripMaliciousHeaderChars(java.lang.String)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.util.HttpUtils", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/util/HttpUtils.java", "param": ""}, {"pkg": "com.netflix.zuul.netty.filter", "method": "filter(com.netflix.zuul.filters.ZuulFilter<I,O>,I)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.netty.filter.BaseZuulFilterRunner", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'filter(endpoint, zuulReq)' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/filter/BaseZuulFilterRunner.java", "param": ""}, {"pkg": "com.netflix.zuul.filters.endpoint", "method": "handleOriginSuccessResponse(io.netty.handler.codec.http.HttpResponse,com.netflix.loadbalancer.Server)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_PARAM", "class": "com.netflix.zuul.filters.endpoint.ProxyEndpoint", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/filters/endpoint/ProxyEndpoint.java", "param": "chosenServer"}, {"pkg": "com.netflix.zuul.message.http", "method": "get(java.lang.String)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.message.http.Cookies", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/message/http/Cookies.java", "param": ""}, {"pkg": "com.netflix.zuul.message.http", "method": "", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "CLASS_FIELD", "class": "com.netflix.zuul.message.http.HttpRequestMessageImpl", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/message/http/HttpRequestMessageImpl.java", "param": "pathAndQuery"}, {"pkg": "com.netflix.zuul.message.http", "method": "getFirst(java.lang.String)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.message.http.HttpQueryParams", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/message/http/HttpQueryParams.java", "param": ""}, {"pkg": "com.netflix.zuul.netty.server.push", "method": "", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "CLASS_FIELD", "class": "com.netflix.zuul.netty.server.push.PushRegistrationHandler", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field zuulResponse (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field pushConnection (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/server/push/PushRegistrationHandler.java", "param": "keepAliveTask"}, {"pkg": "com.netflix.zuul.message.http", "method": "getFirst(java.lang.String)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.message.http.Cookies", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/message/http/Cookies.java", "param": ""}, {"pkg": "com.netflix.zuul.netty.ratelimiting", "method": "get()", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.netty.ratelimiting.NullChannelHandlerProvider", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/ratelimiting/NullChannelHandlerProvider.java", "param": ""}, {"pkg": "com.netflix.zuul.filters.endpoint", "method": "", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "CLASS_FIELD", "class": "com.netflix.zuul.filters.endpoint.ProxyEndpoint", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/filters/endpoint/ProxyEndpoint.java", "param": "originalReadTimeout"}, {"pkg": "com.netflix.netty.common.channel.config", "method": "<T>getConfig(com.netflix.netty.common.channel.config.ChannelConfigKey<T>)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.netty.common.channel.config.ChannelConfig", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/netty/common/channel/config/ChannelConfig.java", "param": ""}, {"pkg": "com.netflix.zuul", "method": "getFilterByNameAndType(java.lang.String,com.netflix.zuul.filters.FilterType)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.StaticFilterLoader", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) method returns @Nullable, but superclass method com.netflix.zuul.FilterLoader.getFilterByNameAndType(java.lang.String,com.netflix.zuul.filters.FilterType) returns @NonNull"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/StaticFilterLoader.java", "param": ""}, {"pkg": "com.netflix.zuul.context", "method": "getErrorEndpoint()", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.context.SessionContext", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/context/SessionContext.java", "param": ""}, {"pkg": "com.netflix.zuul.exception", "method": "getFinalRequestAttempt()", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.exception.OutboundException", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/exception/OutboundException.java", "param": ""}, {"pkg": "com.netflix.zuul.netty.connectionpool", "method": "getConnectionHeader(com.netflix.netty.common.HttpLifecycleChannelHandler.CompleteEvent)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.netty.connectionpool.ConnectionPoolHandler", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field zuulResponse (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields pushConnection (line 50), keepAliveTask (line 52) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/ConnectionPoolHandler.java", "param": ""}, {"pkg": "com.netflix.zuul.message.http", "method": "parse(java.lang.String)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_PARAM", "class": "com.netflix.zuul.message.http.HttpQueryParams", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/message/http/HttpQueryParams.java", "param": "queryString"}, {"pkg": "com.netflix.zuul.niws", "method": "complete(int,long,java.lang.Throwable)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_PARAM", "class": "com.netflix.zuul.niws.RequestAttempt", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/niws/RequestAttempt.java", "param": "exception"}, {"pkg": "com.netflix.zuul.netty.connectionpool", "method": "getFromSessionContext(com.netflix.zuul.context.SessionContext)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.netty.connectionpool.RequestStat", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/RequestStat.java", "param": ""}, {"pkg": "com.netflix.zuul.util", "method": "getContentLengthIfPresent(com.netflix.zuul.message.ZuulMessage)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.util.HttpUtils", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/util/HttpUtils.java", "param": ""}, {"pkg": "com.netflix.zuul", "method": "get(com.netflix.zuul.Attrs)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.Attrs.Key", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/Attrs.java", "param": ""}, {"pkg": "com.netflix.zuul.filters.endpoint", "method": "postErrorProcessing(java.lang.Throwable,com.netflix.zuul.context.SessionContext,com.netflix.zuul.exception.ErrorType,com.netflix.loadbalancer.Server,int)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_PARAM", "class": "com.netflix.zuul.filters.endpoint.ProxyEndpoint", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/filters/endpoint/ProxyEndpoint.java", "param": "chosenServer"}, {"pkg": "com.netflix.zuul.message.http", "method": "", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "CLASS_FIELD", "class": "com.netflix.zuul.message.http.HttpRequestMessageImpl", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/message/http/HttpRequestMessageImpl.java", "param": "infoForLogging"}, {"pkg": "com.netflix.zuul.filters.endpoint", "method": "preWriteToOrigin(com.netflix.loadbalancer.Server,com.netflix.zuul.message.http.HttpRequestMessage)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_PARAM", "class": "com.netflix.zuul.filters.endpoint.ProxyEndpoint", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/filters/endpoint/ProxyEndpoint.java", "param": "chosenServer"}, {"pkg": "com.netflix.zuul.filters.endpoint", "method": "", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "CLASS_FIELD", "class": "com.netflix.zuul.filters.endpoint.ProxyEndpoint", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/filters/endpoint/ProxyEndpoint.java", "param": "originConn"}, {"pkg": "com.netflix.netty.common", "method": "getHostAddress(java.net.InetSocketAddress)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.netty.common.SourceAddressChannelHandler", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/netty/common/SourceAddressChannelHandler.java", "param": ""}, {"pkg": "com.netflix.zuul.stats", "method": "getStats(java.lang.String,java.lang.String)", "annotation": "javax.annotation.Nullable", "jump": -2, "location": "METHOD_RETURN", "class": "com.netflix.zuul.stats.ErrorStatsManager", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/stats/ErrorStatsManager.java", "param": ""}, {"pkg": "com.netflix.zuul.filters.endpoint", "method": "apply(com.netflix.zuul.message.http.HttpRequestMessage)", "annotation": "javax.annotation.Nullable", "jump": -2, "location": "METHOD_RETURN", "class": "com.netflix.zuul.filters.endpoint.ProxyEndpoint", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) method returns @Nullable, but superclass method com.netflix.zuul.filters.SyncZuulFilter.apply(I) returns @NonNull"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/filters/endpoint/ProxyEndpoint.java", "param": ""}, {"pkg": "com.netflix.zuul.stats", "method": "getRouteStatusCodeMonitor(java.lang.String,int)", "annotation": "javax.annotation.Nullable", "jump": -2, "location": "METHOD_RETURN", "class": "com.netflix.zuul.stats.StatsManager", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/stats/StatsManager.java", "param": ""}, {"pkg": "com.netflix.zuul.netty.server", "method": "", "annotation": "javax.annotation.Nullable", "jump": -2, "location": "CLASS_FIELD", "class": "com.netflix.zuul.netty.server.OriginResponseReceiver", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/server/OriginResponseReceiver.java", "param": "edgeProxy"}, {"pkg": "com.netflix.zuul.netty.insights", "method": "getRequestId(io.netty.channel.Channel,com.netflix.zuul.context.SessionContext)", "annotation": "javax.annotation.Nullable", "jump": -2, "location": "METHOD_PARAM", "class": "com.netflix.zuul.netty.insights.PassportLoggingHandler", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/insights/PassportLoggingHandler.java", "param": "ctx"}, {"pkg": "com.netflix.zuul.netty.filter", "method": "recordFilterCompletion(com.netflix.zuul.ExecutionStatus,com.netflix.zuul.filters.ZuulFilter<I,O>,long,com.netflix.zuul.message.ZuulMessage,com.netflix.zuul.message.ZuulMessage)", "annotation": "javax.annotation.Nullable", "jump": -3, "location": "METHOD_PARAM", "class": "com.netflix.zuul.netty.filter.BaseZuulFilterRunner", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/filter/BaseZuulFilterRunner.java", "param": "startSnapshot"}, {"pkg": "com.netflix.zuul.netty.server.push", "method": "sendHttpResponse(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpRequest,io.netty.handler.codec.http.HttpResponseStatus,com.netflix.zuul.netty.server.push.PushUserAuth)", "annotation": "javax.annotation.Nullable", "jump": -3, "location": "METHOD_PARAM", "class": "com.netflix.zuul.netty.server.push.PushMessageSender", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull fields zuulRequest (line 79), clientRequest (line 81) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field cause (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields cause (line 50), error (line 52), exceptionType (line 54), vip (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field zuulResponse (line 81) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull fields pushConnection (line 50), keepAliveTask (line 52) are initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'userAuth' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/server/push/PushMessageSender.java", "param": "userAuth"}, {"pkg": "com.netflix.zuul.passport", "method": "fromSessionContext(com.netflix.zuul.context.SessionContext)", "annotation": "javax.annotation.Nullable", "jump": 5, "location": "METHOD_RETURN", "class": "com.netflix.zuul.passport.CurrentPassport", "inject": "true", "errors": ["dereferenced expression passport is @Nullable", "dereferenced expression passport is @Nullable", "dereferenced expression passport is @Nullable", "dereferenced expression passport is @Nullable", "dereferenced expression CurrentPassport.fromSessionContext(input.getContext()) is @Nullable"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/passport/CurrentPassport.java", "param": ""}, {"pkg": "com.netflix.zuul.context", "method": "decorate(com.netflix.zuul.context.SessionContext)", "annotation": "javax.annotation.Nullable", "jump": 3, "location": "METHOD_RETURN", "class": "com.netflix.zuul.context.SessionContextDecorator", "inject": "true", "errors": ["dereferenced expression context is @Nullable", "dereferenced expression context is @Nullable", "(Covered) passing @Nullable parameter 'context' where @NonNull is required", "dereferenced expression context is @Nullable"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/context/SessionContextDecorator.java", "param": ""}, {"pkg": "com.netflix.zuul.netty.filter", "method": "invokeNextStage(O)", "annotation": "javax.annotation.Nullable", "jump": 3, "location": "METHOD_PARAM", "class": "com.netflix.zuul.netty.filter.BaseZuulFilterRunner", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'zuulMesg' where @NonNull is required", "(Covered) passing @Nullable parameter 'zuulMesg' where @NonNull is required", "(Covered) passing @Nullable parameter 'zuulMesg' where @NonNull is required", "(Covered) passing @Nullable parameter 'zuulMesg' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/filter/BaseZuulFilterRunner.java", "param": "zuulMesg"}, {"pkg": "com.netflix.zuul.niws", "method": "", "annotation": "javax.annotation.Nullable", "jump": 2, "location": "CLASS_FIELD", "class": "com.netflix.zuul.niws.RequestAttempt", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull field vip (line 69) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field vip (line 69) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'exceptionType' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/niws/RequestAttempt.java", "param": "exceptionType"}, {"pkg": "com.netflix.zuul.niws", "method": "getFromSessionContext(com.netflix.zuul.context.SessionContext)", "annotation": "javax.annotation.Nullable", "jump": 2, "location": "METHOD_RETURN", "class": "com.netflix.zuul.niws.RequestAttempts", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'attempts' where @NonNull is required", "(Covered) passing @Nullable parameter 'attempts' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/niws/RequestAttempts.java", "param": ""}, {"pkg": "com.netflix.zuul.niws", "method": "", "annotation": "javax.annotation.Nullable", "jump": 2, "location": "CLASS_FIELD", "class": "com.netflix.zuul.niws.RequestAttempt", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull field exceptionType (line 56) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field exceptionType (line 56) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'vip' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/niws/RequestAttempt.java", "param": "vip"}, {"pkg": "com.netflix.zuul.filters", "method": "getDefaultOutput(I)", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.filters.ZuulFilter", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'outMesg' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/filters/ZuulFilter.java", "param": ""}, {"pkg": "com.netflix.zuul.message", "method": "getBodyAsText()", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.message.ZuulMessage", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/message/ZuulMessage.java", "param": ""}, {"pkg": "com.netflix.zuul.message", "method": "getBody()", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.message.ZuulMessage", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/message/ZuulMessage.java", "param": ""}, {"pkg": "com.netflix.zuul.netty.filter", "method": "FilterChainResumer(I,com.netflix.zuul.filters.ZuulFilter<I,O>,com.netflix.zuul.message.ZuulMessage,long)", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "METHOD_PARAM", "class": "com.netflix.zuul.netty.filter.BaseZuulFilterRunner.FilterChainResumer", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull field snapshot (line 355) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/filter/BaseZuulFilterRunner.java", "param": "snapshot"}, {"pkg": "com.netflix.zuul.netty.filter", "method": "getEndPointName(com.netflix.zuul.context.SessionContext)", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.netty.filter.ZuulEndPointRunner", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'endpointName' where @NonNull is required", "(Covered) passing @Nullable parameter 'endpointName' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/filter/ZuulEndPointRunner.java", "param": ""}, {"pkg": "com.netflix.netty.common.ssl", "method": "ServerSslConfig(java.lang.String[],java.lang.String[],java.io.File,java.io.File,io.netty.handler.ssl.ClientAuth,java.io.File,java.io.File,boolean)", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "METHOD_PARAM", "class": "com.netflix.netty.common.ssl.ServerSslConfig", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/netty/common/ssl/ServerSslConfig.java", "param": "certChainFile"}, {"pkg": "com.netflix.zuul.netty.connectionpool", "method": "", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "CLASS_FIELD", "class": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull field clientConnFactory (line 116) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "dereferenced expression this.channelInitializer is @Nullable"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java", "param": "channelInitializer"}, {"pkg": "com.netflix.zuul.filters.endpoint", "method": "buildZuulHttpResponse(io.netty.handler.codec.http.HttpResponse,com.netflix.zuul.stats.status.StatusCategory,java.lang.Throwable)", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "METHOD_PARAM", "class": "com.netflix.zuul.filters.endpoint.ProxyEndpoint", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'ex' where @NonNull is required", "(Covered) passing @Nullable parameter 'ex' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/filters/endpoint/ProxyEndpoint.java", "param": "ex"}, {"pkg": "com.netflix.zuul.exception", "method": "ZuulException(java.lang.String,java.lang.String,boolean)", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "METHOD_PARAM", "class": "com.netflix.zuul.exception.ZuulException", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull field errorCause (line 28) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/exception/ZuulException.java", "param": "errorCause"}, {"pkg": "com.netflix.zuul.netty.filter", "method": "", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "CLASS_FIELD", "class": "com.netflix.zuul.netty.filter.ZuulFilterChainHandler", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'zuulRequest' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/filter/ZuulFilterChainHandler.java", "param": "zuulRequest"}, {"pkg": "com.netflix.netty.common.ssl", "method": "ServerSslConfig(java.lang.String[],java.lang.String[],java.io.File,java.io.File,io.netty.handler.ssl.ClientAuth,java.io.File,java.io.File,boolean)", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "METHOD_PARAM", "class": "com.netflix.netty.common.ssl.ServerSslConfig", "inject": "true", "errors": ["(Covered) passing @Nullable parameter '(File) null' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/netty/common/ssl/ServerSslConfig.java", "param": "clientAuthTrustStoreFile"}, {"pkg": "com.netflix.netty.common.ssl", "method": "SslHandshakeInfo(boolean,java.lang.String,java.lang.String,io.netty.handler.ssl.ClientAuth,java.security.cert.Certificate,javax.security.cert.X509Certificate)", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "METHOD_PARAM", "class": "com.netflix.netty.common.ssl.SslHandshakeInfo", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'peerCert' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/netty/common/ssl/SslHandshakeInfo.java", "param": "serverCertificate"}, {"pkg": "com.netflix.zuul.plugins", "method": "loadAddress()", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.plugins.Tracer", "inject": "true", "errors": ["dereferenced expression loadAddress() is @Nullable", "dereferenced expression loadAddress() is @Nullable"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/plugins/Tracer.java", "param": ""}, {"pkg": "com.netflix.zuul.filters.endpoint", "method": "getReadTimeout(com.netflix.client.config.IClientConfig,int)", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.filters.endpoint.ProxyEndpoint", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'readTimeout' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/filters/endpoint/ProxyEndpoint.java", "param": ""}, {"pkg": "com.netflix.zuul.netty.connectionpool", "method": "", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "CLASS_FIELD", "class": "com.netflix.zuul.netty.connectionpool.DefaultClientChannelManager", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull field channelInitializer (line 119) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) passing @Nullable parameter 'clientConnFactory' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/connectionpool/DefaultClientChannelManager.java", "param": "clientConnFactory"}, {"pkg": "com.netflix.zuul.filters", "method": "processContentChunk(com.netflix.zuul.message.ZuulMessage,io.netty.handler.codec.http.HttpContent)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_RETURN", "class": "com.netflix.zuul.filters.SyncZuulFilterAdapter", "inject": "true", "errors": ["(Covered) method returns @Nullable, but superclass method com.netflix.zuul.filters.ZuulFilter.processContentChunk(com.netflix.zuul.message.ZuulMessage,io.netty.handler.codec.http.HttpContent) returns @NonNull"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/filters/SyncZuulFilterAdapter.java", "param": ""}, {"pkg": "com.netflix.zuul", "method": "getFiltersByType(com.netflix.zuul.filters.FilterType)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_RETURN", "class": "com.netflix.zuul.FilterLoader", "inject": "true", "errors": ["dereferenced expression zuulFilters is @Nullable"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/FilterLoader.java", "param": ""}, {"pkg": "com.netflix.zuul.message.http", "method": "getInboundRequest()", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_RETURN", "class": "com.netflix.zuul.message.http.HttpRequestMessageImpl", "inject": "true", "errors": ["(Covered) method returns @Nullable, but superclass method com.netflix.zuul.message.http.HttpRequestMessage.getInboundRequest() returns @NonNull"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/message/http/HttpRequestMessageImpl.java", "param": ""}, {"pkg": "com.netflix.zuul.origins", "method": "getIpAddrFromServer(com.netflix.loadbalancer.Server)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_RETURN", "class": "com.netflix.zuul.origins.NettyOrigin", "inject": "true", "errors": ["(Covered) parameter server is @NonNull, but parameter in superclass method com.netflix.zuul.origins.NettyOrigin.getIpAddrFromServer(com.netflix.loadbalancer.Server) is @Nullable"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java", "param": ""}, {"pkg": "com.netflix.netty.common", "method": "getHostAddress(java.net.InetSocketAddress)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_PARAM", "class": "com.netflix.netty.common.SourceAddressChannelHandler", "inject": "true", "errors": ["dereferenced expression socketAddress is @Nullable"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/netty/common/SourceAddressChannelHandler.java", "param": "socketAddress"}, {"pkg": "com.netflix.zuul.context", "method": "getUUID()", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_RETURN", "class": "com.netflix.zuul.context.SessionContext", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/context/SessionContext.java", "param": ""}, {"pkg": "com.netflix.zuul.origins", "method": "newRequestAttempt(com.netflix.loadbalancer.Server,com.netflix.zuul.context.SessionContext,int)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_PARAM", "class": "com.netflix.zuul.origins.BasicNettyOrigin", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'server' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/origins/BasicNettyOrigin.java", "param": "server"}, {"pkg": "com.netflix.netty.common.accesslog", "method": "log(io.netty.channel.Channel,io.netty.handler.codec.http.HttpRequest,io.netty.handler.codec.http.HttpResponse,java.time.LocalDateTime,java.lang.Integer,java.lang.String,java.lang.Long,java.lang.Integer,java.lang.Integer)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_PARAM", "class": "com.netflix.netty.common.accesslog.AccessLogPublisher", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'state.response' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/netty/common/accesslog/AccessLogPublisher.java", "param": "request"}, {"pkg": "com.netflix.zuul.filters", "method": "get(java.lang.String)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_RETURN", "class": "com.netflix.zuul.filters.FilterRegistry", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/filters/FilterRegistry.java", "param": ""}, {"pkg": "com.netflix.zuul.origins", "method": "onRequestExceptionWithServer(com.netflix.zuul.message.http.HttpRequestMessage,com.netflix.loadbalancer.Server,int,java.lang.Throwable)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_PARAM", "class": "com.netflix.zuul.origins.NettyOrigin", "inject": "true", "errors": ["(Covered) parameter originServer is @NonNull, but parameter in superclass method com.netflix.zuul.origins.NettyOrigin.onRequestExceptionWithServer(com.netflix.zuul.message.http.HttpRequestMessage,com.netflix.loadbalancer.Server,int,java.lang.Throwable) is @Nullable"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/origins/NettyOrigin.java", "param": "originServer"}, {"pkg": "com.netflix.zuul.message.http", "method": "getInboundResponse()", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_RETURN", "class": "com.netflix.zuul.message.http.HttpResponseMessageImpl", "inject": "true", "errors": ["(Covered) method returns @Nullable, but superclass method com.netflix.zuul.message.http.HttpResponseMessage.getInboundResponse() returns @NonNull"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/message/http/HttpResponseMessageImpl.java", "param": ""}, {"pkg": "com.netflix.zuul", "method": "handle(com.netflix.zuul.message.http.HttpRequestInfo,com.netflix.zuul.message.http.HttpResponseMessage)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_PARAM", "class": "com.netflix.zuul.RequestCompleteHandler", "inject": "true", "errors": ["(Covered) parameter response is @NonNull, but parameter in superclass method com.netflix.zuul.RequestCompleteHandler.handle(com.netflix.zuul.message.http.HttpRequestInfo,com.netflix.zuul.message.http.HttpResponseMessage) is @Nullable"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/RequestCompleteHandler.java", "param": "response"}, {"pkg": "com.netflix.zuul.netty.filter", "method": "BaseZuulFilterRunner(com.netflix.zuul.filters.FilterType,com.netflix.zuul.FilterUsageNotifier,com.netflix.zuul.netty.filter.FilterRunner<O,?>)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_PARAM", "class": "com.netflix.zuul.netty.filter.BaseZuulFilterRunner", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/filter/BaseZuulFilterRunner.java", "param": "nextStage"}, {"pkg": "com.netflix.zuul.filters", "method": "apply(I)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_RETURN", "class": "com.netflix.zuul.filters.SyncZuulFilter", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'response' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/filters/SyncZuulFilter.java", "param": ""}, {"pkg": "com.netflix.zuul.netty.server", "method": "completeMetrics(io.netty.channel.Channel,com.netflix.zuul.message.http.HttpResponseMessage)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_PARAM", "class": "com.netflix.zuul.netty.server.ClientResponseWriter", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/server/ClientResponseWriter.java", "param": "zuulResponse"}, {"pkg": "com.netflix.zuul", "method": "getStack()", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.ZuulApplicationInfo", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/ZuulApplicationInfo.java", "param": ""}, {"pkg": "com.netflix.zuul.filters.endpoint", "method": "processErrorFromOrigin(java.lang.Throwable,io.netty.channel.Channel)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_PARAM", "class": "com.netflix.zuul.filters.endpoint.ProxyEndpoint", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/filters/endpoint/ProxyEndpoint.java", "param": "origCh"}, {"pkg": "com.netflix.zuul.util", "method": "getClientIP(com.netflix.zuul.message.http.HttpRequestInfo)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.util.HttpUtils", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/util/HttpUtils.java", "param": ""}, {"pkg": "com.netflix.zuul", "method": "getApplicationName()", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.ZuulApplicationInfo", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/ZuulApplicationInfo.java", "param": ""}, {"pkg": "com.netflix.zuul.niws", "method": "getError()", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.niws.RequestAttempt", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/niws/RequestAttempt.java", "param": ""}, {"pkg": "com.netflix.zuul", "method": "getFilterByNameAndType(java.lang.String,com.netflix.zuul.filters.FilterType)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.FilterLoader", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/FilterLoader.java", "param": ""}, {"pkg": "com.netflix.zuul.stats.status", "method": "getStatusCategory(com.netflix.zuul.message.ZuulMessage)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.stats.status.StatusCategoryUtils", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/stats/status/StatusCategoryUtils.java", "param": ""}, {"pkg": "com.netflix.zuul.netty.server.push", "method": "logPushEvent(io.netty.handler.codec.http.FullHttpRequest,io.netty.handler.codec.http.HttpResponseStatus,com.netflix.zuul.netty.server.push.PushUserAuth)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_PARAM", "class": "com.netflix.zuul.netty.server.push.PushMessageSender", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/server/push/PushMessageSender.java", "param": "userAuth"}, {"pkg": "com.netflix.netty.common.ssl", "method": "ServerSslConfig(java.lang.String[],java.lang.String[],java.io.File,java.io.File)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_PARAM", "class": "com.netflix.netty.common.ssl.ServerSslConfig", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/netty/common/ssl/ServerSslConfig.java", "param": "keyFile"}, {"pkg": "com.netflix.zuul.niws", "method": "getAvailabilityZone()", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.niws.RequestAttempt", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/niws/RequestAttempt.java", "param": ""}, {"pkg": "com.netflix.zuul.origins", "method": "onRequestExecutionFailed(com.netflix.zuul.message.http.HttpRequestMessage,com.netflix.loadbalancer.Server,int,java.lang.Throwable)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_PARAM", "class": "com.netflix.zuul.origins.BasicNettyOrigin", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/origins/BasicNettyOrigin.java", "param": "originServer"}, {"pkg": "com.netflix.zuul.niws", "method": "putNullableAttribute(com.fasterxml.jackson.databind.node.ObjectNode,java.lang.String,java.lang.String)", "annotation": "javax.annotation.Nullable", "jump": -2, "location": "METHOD_PARAM", "class": "com.netflix.zuul.niws.RequestAttempt", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/niws/RequestAttempt.java", "param": "value"}, {"pkg": "com.netflix.zuul.message.http", "method": "getInboundRequest()", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.message.http.HttpRequestMessage", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'zuulRequest.getInboundRequest()' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/message/http/HttpRequestMessage.java", "param": ""}, {"pkg": "com.netflix.zuul.niws", "method": "", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "CLASS_FIELD", "class": "com.netflix.zuul.niws.RequestAttempt", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull field exceptionType (line 56) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field exceptionType (line 56) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/niws/RequestAttempt.java", "param": "vip"}, {"pkg": "com.netflix.zuul.niws", "method": "", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "CLASS_FIELD", "class": "com.netflix.zuul.niws.RequestAttempt", "inject": "true", "errors": ["(Covered) initializer method does not guarantee @NonNull field vip (line 69) is initialized along all control-flow paths (remember to check for exceptions or early returns).", "(Covered) initializer method does not guarantee @NonNull field vip (line 69) is initialized along all control-flow paths (remember to check for exceptions or early returns)."], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/niws/RequestAttempt.java", "param": "exceptionType"}, {"pkg": "com.netflix.netty.common.ssl", "method": "ServerSslConfig(java.lang.String[],java.lang.String[],java.io.File,java.io.File,io.netty.handler.ssl.ClientAuth,java.io.File,java.io.File,boolean)", "annotation": "javax.annotation.Nullable", "jump": 1, "location": "METHOD_PARAM", "class": "com.netflix.netty.common.ssl.ServerSslConfig", "inject": "true", "errors": ["(Covered) passing @Nullable parameter 'keyFile' where @NonNull is required"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/netty/common/ssl/ServerSslConfig.java", "param": "certChainFile"}, {"pkg": "com.netflix.netty.common", "method": "localAddress(io.netty.channel.Channel)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_RETURN", "class": "com.netflix.netty.common.SourceAddressChannelHandler", "inject": "true", "errors": ["dereferenced expression localAddress is @Nullable"], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/netty/common/SourceAddressChannelHandler.java", "param": ""}, {"pkg": "com.netflix.zuul.filters.http", "method": "ResponseState(com.netflix.zuul.message.ZuulMessage,rx.Subscriber)", "annotation": "javax.annotation.Nullable", "jump": 0, "location": "METHOD_PARAM", "class": "com.netflix.zuul.filters.http.HttpSyncEndpoint.ResponseState", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/filters/http/HttpSyncEndpoint.java", "param": "response"}, {"pkg": "com.netflix.zuul.netty.insights", "method": "getRequestId(io.netty.channel.Channel,com.netflix.zuul.context.SessionContext)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.netty.insights.PassportLoggingHandler", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/insights/PassportLoggingHandler.java", "param": ""}, {"pkg": "com.netflix.zuul.origins", "method": "getIpAddrFromServer(com.netflix.loadbalancer.Server)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_PARAM", "class": "com.netflix.zuul.origins.BasicNettyOrigin", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/origins/BasicNettyOrigin.java", "param": "server"}, {"pkg": "com.netflix.zuul.message.http", "method": "getInboundResponse()", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.message.http.HttpResponseMessage", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/message/http/HttpResponseMessage.java", "param": ""}, {"pkg": "com.netflix.zuul.niws", "method": "RequestAttempt(com.netflix.loadbalancer.Server,com.netflix.client.config.IClientConfig,int,int)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_PARAM", "class": "com.netflix.zuul.niws.RequestAttempt", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/niws/RequestAttempt.java", "param": "server"}, {"pkg": "com.netflix.zuul", "method": "getFilter(java.lang.String,java.lang.String)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.DynamicFilterLoader", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/DynamicFilterLoader.java", "param": ""}, {"pkg": "com.netflix.zuul.filters", "method": "processContentChunk(com.netflix.zuul.message.ZuulMessage,io.netty.handler.codec.http.HttpContent)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.filters.ZuulFilter", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/filters/ZuulFilter.java", "param": ""}, {"pkg": "com.netflix.zuul.netty.filter", "method": "<I,O>getEndpointFilter(java.lang.String)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_RETURN", "class": "com.netflix.zuul.netty.filter.ZuulEndPointRunner", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/netty/filter/ZuulEndPointRunner.java", "param": ""}, {"pkg": "com.netflix.netty.common.accesslog", "method": "log(io.netty.channel.Channel,io.netty.handler.codec.http.HttpRequest,io.netty.handler.codec.http.HttpResponse,java.time.LocalDateTime,java.lang.Integer,java.lang.String,java.lang.Long,java.lang.Integer,java.lang.Integer)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_PARAM", "class": "com.netflix.netty.common.accesslog.AccessLogPublisher", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/netty/common/accesslog/AccessLogPublisher.java", "param": "response"}, {"pkg": "com.netflix.zuul.origins", "method": "onRequestExceptionWithServer(com.netflix.zuul.message.http.HttpRequestMessage,com.netflix.loadbalancer.Server,int,java.lang.Throwable)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_PARAM", "class": "com.netflix.zuul.origins.BasicNettyOrigin", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/origins/BasicNettyOrigin.java", "param": "originServer"}, {"pkg": "com.netflix.zuul", "method": "handle(com.netflix.zuul.message.http.HttpRequestInfo,com.netflix.zuul.message.http.HttpResponseMessage)", "annotation": "javax.annotation.Nullable", "jump": -1, "location": "METHOD_PARAM", "class": "com.netflix.zuul.BasicRequestCompleteHandler", "inject": "true", "errors": [], "uri": "//tmp/projects/zuul/zuul-core/src/main/java/com/netflix/zuul/BasicRequestCompleteHandler.java", "param": "response"}]}