{
    "reports": [
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<T>defaultValue(java.lang.Class<T>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.internal.util.Primitives",
            "pkg": "org.mockito.internal.util",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/Primitives.java",
            "errors": [],
            "jump": 6
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "WRONG_OVERRIDE_RETURN",
            "method": "answer(org.mockito.invocation.InvocationOnMock)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.stubbing.Answer",
            "pkg": "org.mockito.stubbing",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/stubbing/Answer.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'ret' where @NonNull is required"
            ],
            "jump": 4
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "invocationForStubbing",
            "location": "CLASS_FIELD",
            "class": "org.mockito.internal.stubbing.InvocationContainerImpl",
            "pkg": "org.mockito.internal.stubbing",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/InvocationContainerImpl.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field mockStrictness (line 38) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "dereferenced expression invocationForStubbing is @Nullable",
                "dereferenced expression invocationForStubbing is @Nullable"
            ],
            "jump": 3
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "get(K)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.internal.util.concurrent.WeakConcurrentMap",
            "pkg": "org.mockito.internal.util.concurrent",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/concurrent/WeakConcurrentMap.java",
            "errors": [],
            "jump": 3
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "ASSIGN_FIELD_NULLABLE",
            "method": "",
            "param": "delegatedObject",
            "location": "CLASS_FIELD",
            "class": "org.mockito.internal.stubbing.defaultanswers.ForwardsInvocations",
            "pkg": "org.mockito.internal.stubbing.defaultanswers",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/defaultanswers/ForwardsInvocations.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'delegatedObject' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'delegatedObject' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'delegatedObject' where @NonNull is required",
                "dereferenced expression delegatedObject is @Nullable"
            ],
            "jump": 3
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "WRONG_OVERRIDE_RETURN",
            "method": "handle(org.mockito.invocation.Invocation)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.invocation.MockHandler",
            "pkg": "org.mockito.invocation",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/invocation/MockHandler.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'returnedValue' where @NonNull is required"
            ],
            "jump": 3
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "invoke(java.lang.reflect.Method,java.lang.Object,java.lang.Object...)",
            "param": "target",
            "location": "METHOD_PARAM",
            "class": "org.mockito.plugins.MemberAccessor",
            "pkg": "org.mockito.plugins",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/plugins/MemberAccessor.java",
            "errors": [
                "(Covered) parameter target is @NonNull, but parameter in superclass method org.mockito.plugins.MemberAccessor.invoke(java.lang.reflect.Method,java.lang.Object,java.lang.Object...) is @Nullable",
                "(Covered) parameter target is @NonNull, but parameter in superclass method org.mockito.plugins.MemberAccessor.invoke(java.lang.reflect.Method,java.lang.Object,java.lang.Object...) is @Nullable",
                "(Covered) parameter target is @NonNull, but parameter in superclass method org.mockito.plugins.MemberAccessor.invoke(java.lang.reflect.Method,java.lang.Object,java.lang.Object...) is @Nullable"
            ],
            "jump": 2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "typeToMock",
            "location": "CLASS_FIELD",
            "class": "org.mockito.internal.creation.settings.CreationSettings",
            "pkg": "org.mockito.internal.creation.settings",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/settings/CreationSettings.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields name (line 31), spiedInstance (line 32), defaultAnswer (line 33), mockName (line 34), outerClassInstance (line 50), constructorArgs (line 51) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "spiedInstance",
            "location": "CLASS_FIELD",
            "class": "org.mockito.internal.creation.settings.CreationSettings",
            "pkg": "org.mockito.internal.creation.settings",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/settings/CreationSettings.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields typeToMock (line 28), name (line 30), defaultAnswer (line 34), mockName (line 35), outerClassInstance (line 51), constructorArgs (line 52) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "defaultAnswer",
            "location": "CLASS_FIELD",
            "class": "org.mockito.internal.creation.settings.CreationSettings",
            "pkg": "org.mockito.internal.creation.settings",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/settings/CreationSettings.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields typeToMock (line 28), name (line 30), spiedInstance (line 31), mockName (line 35), outerClassInstance (line 51), constructorArgs (line 52) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "mockName",
            "location": "CLASS_FIELD",
            "class": "org.mockito.internal.creation.settings.CreationSettings",
            "pkg": "org.mockito.internal.creation.settings",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/settings/CreationSettings.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields typeToMock (line 28), name (line 30), spiedInstance (line 31), defaultAnswer (line 32), outerClassInstance (line 51), constructorArgs (line 52) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "fieldClass()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.internal.util.reflection.FieldInitializationReport",
            "pkg": "org.mockito.internal.util.reflection",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/reflection/FieldInitializationReport.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'fieldClass' where @NonNull is required",
                "dereferenced expression fieldClass is @Nullable"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "SubclassBytecodeGenerator(org.mockito.internal.creation.bytebuddy.SubclassLoader,net.bytebuddy.implementation.Implementation,net.bytebuddy.matcher.ElementMatcher<? super net.bytebuddy.description.method.MethodDescription>)",
            "param": "readReplace",
            "location": "METHOD_PARAM",
            "class": "org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator",
            "pkg": "org.mockito.internal.creation.bytebuddy",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/bytebuddy/SubclassBytecodeGenerator.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field readReplace (line 54) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<T>notNull()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.ArgumentMatchers",
            "pkg": "org.mockito",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/ArgumentMatchers.java",
            "errors": [],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "initialValue(java.lang.Thread)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.internal.util.concurrent.DetachedThreadLocal",
            "pkg": "org.mockito.internal.util.concurrent",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/concurrent/DetachedThreadLocal.java",
            "errors": [],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "constructorArgs",
            "location": "CLASS_FIELD",
            "class": "org.mockito.internal.creation.MockSettingsImpl",
            "pkg": "org.mockito.internal.creation",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/MockSettingsImpl.java",
            "errors": [
                "dereferenced expression constructorArgs is @Nullable"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "returnValueFor(java.lang.Class<?>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues",
            "pkg": "org.mockito.internal.stubbing.defaultanswers",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java",
            "errors": [],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "outerClassInstance",
            "location": "CLASS_FIELD",
            "class": "org.mockito.internal.creation.settings.CreationSettings",
            "pkg": "org.mockito.internal.creation.settings",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/settings/CreationSettings.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields typeToMock (line 28), name (line 30), spiedInstance (line 31), defaultAnswer (line 32), mockName (line 33), constructorArgs (line 52) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "StubberImpl(org.mockito.quality.Strictness)",
            "param": "strictness",
            "location": "METHOD_PARAM",
            "class": "org.mockito.internal.stubbing.StubberImpl",
            "pkg": "org.mockito.internal.stubbing",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/StubberImpl.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field strictness (line 30) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "VerificationEventImpl(java.lang.Object,org.mockito.verification.VerificationMode,org.mockito.internal.verification.api.VerificationData,java.lang.Throwable)",
            "param": "cause",
            "location": "METHOD_PARAM",
            "class": "org.mockito.internal.verification.VerificationEventImpl",
            "pkg": "org.mockito.internal.verification",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/verification/VerificationEventImpl.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field cause (line 17) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "SimpleEntry(K,java.util.Map.Entry<org.mockito.internal.util.concurrent.WeakConcurrentMap.WeakKey<K>,V>)",
            "param": "entry",
            "location": "METHOD_PARAM",
            "class": "org.mockito.internal.util.concurrent.WeakConcurrentMap.SimpleEntry",
            "pkg": "org.mockito.internal.util.concurrent",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/concurrent/WeakConcurrentMap.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field entry (line 342) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "returnValueFor(java.lang.Class<?>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.internal.stubbing.defaultanswers.ReturnsMoreEmptyValues",
            "pkg": "org.mockito.internal.stubbing.defaultanswers",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/defaultanswers/ReturnsMoreEmptyValues.java",
            "errors": [],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "findAnswerFor(org.mockito.invocation.Invocation)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.internal.stubbing.InvocationContainerImpl",
            "pkg": "org.mockito.internal.stubbing",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/InvocationContainerImpl.java",
            "errors": [
                "dereferenced expression findAnswerFor(invocation) is @Nullable",
                "(Covered) passing @Nullable parameter 'stubbing' where @NonNull is required"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "Returns(java.lang.Object)",
            "param": "value",
            "location": "METHOD_PARAM",
            "class": "org.mockito.internal.stubbing.answers.Returns",
            "pkg": "org.mockito.internal.stubbing.answers",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/answers/Returns.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field value (line 21) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "constructorArgs",
            "location": "CLASS_FIELD",
            "class": "org.mockito.internal.creation.settings.CreationSettings",
            "pkg": "org.mockito.internal.creation.settings",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/settings/CreationSettings.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields typeToMock (line 28), name (line 30), spiedInstance (line 31), defaultAnswer (line 32), mockName (line 33), outerClassInstance (line 49) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "PluginInitializer(org.mockito.plugins.PluginSwitch,java.lang.String,org.mockito.internal.configuration.plugins.DefaultMockitoPlugins)",
            "param": "alias",
            "location": "METHOD_PARAM",
            "class": "org.mockito.internal.configuration.plugins.PluginInitializer",
            "pkg": "org.mockito.internal.configuration.plugins",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/configuration/plugins/PluginInitializer.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field alias (line 19) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "VerificationDataInOrderImpl(org.mockito.internal.verification.api.InOrderContext,java.util.List<org.mockito.invocation.Invocation>,org.mockito.invocation.MatchableInvocation)",
            "param": "wanted",
            "location": "METHOD_PARAM",
            "class": "org.mockito.internal.verification.api.VerificationDataInOrderImpl",
            "pkg": "org.mockito.internal.verification.api",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/verification/api/VerificationDataInOrderImpl.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field wanted (line 18) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "returnTypeForMockWithCorrectGenerics(org.mockito.invocation.InvocationOnMock,org.mockito.internal.stubbing.defaultanswers.RetrieveGenericsForDefaultAnswers.AnswerCallback)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.internal.stubbing.defaultanswers.RetrieveGenericsForDefaultAnswers",
            "pkg": "org.mockito.internal.stubbing.defaultanswers",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/defaultanswers/RetrieveGenericsForDefaultAnswers.java",
            "errors": [],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<T>primitiveTypeOf(java.lang.Class<T>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.internal.util.Primitives",
            "pkg": "org.mockito.internal.util",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/Primitives.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'Primitives.primitiveTypeOf(referenceType)' where @NonNull is required",
                "dereferenced expression Primitives.primitiveTypeOf(valueClass) is @Nullable"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "name",
            "location": "CLASS_FIELD",
            "class": "org.mockito.internal.creation.settings.CreationSettings",
            "pkg": "org.mockito.internal.creation.settings",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/settings/CreationSettings.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields typeToMock (line 28), spiedInstance (line 33), defaultAnswer (line 34), mockName (line 35), outerClassInstance (line 51), constructorArgs (line 52) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<T>isNull()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.ArgumentMatchers",
            "pkg": "org.mockito",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/ArgumentMatchers.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'isNull()' where @NonNull is required"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "assureArguments(java.lang.reflect.AccessibleObject,java.lang.Object,java.lang.Class<?>,java.lang.Object[],java.lang.Class<?>[])",
            "param": "type",
            "location": "METHOD_PARAM",
            "class": "org.mockito.internal.util.reflection.InstrumentationMemberAccessor",
            "pkg": "org.mockito.internal.util.reflection",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/reflection/InstrumentationMemberAccessor.java",
            "errors": [
                "dereferenced expression type is @Nullable"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "findFirstUnverified(java.util.List<org.mockito.invocation.Invocation>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.internal.invocation.InvocationsFinder",
            "pkg": "org.mockito.internal.invocation",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/invocation/InvocationsFinder.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'unverified' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "WRONG_OVERRIDE_PARAM",
            "method": "getInstantiator(org.mockito.mock.MockCreationSettings<?>)",
            "param": "settings",
            "location": "METHOD_PARAM",
            "class": "org.mockito.internal.creation.instance.InstantiatorProviderAdapter",
            "pkg": "org.mockito.internal.creation.instance",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/instance/InstantiatorProviderAdapter.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'settings' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<T>createMock(org.mockito.mock.MockCreationSettings<T>,org.mockito.invocation.MockHandler)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker",
            "pkg": "org.mockito.internal.creation.bytebuddy",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/bytebuddy/InlineByteBuddyMockMaker.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.mockito.plugins.MockMaker.<T>createMock(org.mockito.mock.MockCreationSettings<T>,org.mockito.invocation.MockHandler) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "WRONG_OVERRIDE_PARAM",
            "method": "thenReturn(T)",
            "param": "value",
            "location": "METHOD_PARAM",
            "class": "org.mockito.internal.stubbing.BaseStubbing",
            "pkg": "org.mockito.internal.stubbing",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/BaseStubbing.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'value' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "handleConstruction(java.lang.Class<?>,java.lang.Object,java.lang.Object[],java.lang.String[])",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.internal.creation.bytebuddy.MockMethodAdvice",
            "pkg": "org.mockito.internal.creation.bytebuddy",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/bytebuddy/MockMethodAdvice.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher.handleConstruction(java.lang.Class<?>,java.lang.Object,java.lang.Object[],java.lang.String[]) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "pullOngoingStubbing()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.internal.progress.MockingProgressImpl",
            "pkg": "org.mockito.internal.progress",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/progress/MockingProgressImpl.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.mockito.internal.progress.MockingProgress.pullOngoingStubbing() returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "ThrowsException(java.lang.Throwable)",
            "param": "throwable",
            "location": "METHOD_PARAM",
            "class": "org.mockito.internal.stubbing.answers.ThrowsException",
            "pkg": "org.mockito.internal.stubbing.answers",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/answers/ThrowsException.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field throwable (line 17) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "stubInfo()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.internal.invocation.InterceptedInvocation",
            "pkg": "org.mockito.internal.invocation",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/invocation/InterceptedInvocation.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.mockito.invocation.Invocation.stubInfo() returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "WRONG_OVERRIDE_RETURN",
            "method": "thenThrow(java.lang.Throwable...)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.stubbing.OngoingStubbing",
            "pkg": "org.mockito.stubbing",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/stubbing/OngoingStubbing.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'mockitoOngoingStubbing.thenThrow(throwables)' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getOuterClassInstance()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.internal.creation.MockSettingsImpl",
            "pkg": "org.mockito.internal.creation",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/MockSettingsImpl.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.mockito.internal.creation.settings.CreationSettings.getOuterClassInstance() returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "WRONG_OVERRIDE_RETURN",
            "method": "getHandler(java.lang.Object)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.plugins.MockMaker",
            "pkg": "org.mockito.plugins",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/plugins/MockMaker.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getStubbingStrictness()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.internal.stubbing.DoAnswerStyleStubbing",
            "pkg": "org.mockito.internal.stubbing",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/DoAnswerStyleStubbing.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "findTypeFromGeneric(org.mockito.invocation.InvocationOnMock,java.lang.reflect.TypeVariable)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.internal.stubbing.defaultanswers.RetrieveGenericsForDefaultAnswers",
            "pkg": "org.mockito.internal.stubbing.defaultanswers",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/defaultanswers/RetrieveGenericsForDefaultAnswers.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "MockitoException(java.lang.String,java.lang.Throwable)",
            "param": "message",
            "location": "METHOD_PARAM",
            "class": "org.mockito.exceptions.base.MockitoException",
            "pkg": "org.mockito.exceptions.base",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/exceptions/base/MockitoException.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'cause' where @NonNull is required"
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "extractActualBoundedTypeOf(java.lang.reflect.Type)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.internal.util.reflection.GenericMetadataSupport.TypeVariableReturnType",
            "pkg": "org.mockito.internal.util.reflection",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/reflection/GenericMetadataSupport.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "WRONG_OVERRIDE_RETURN",
            "method": "handleStatic(java.lang.Class<?>,java.lang.reflect.Method,java.lang.Object[])",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher",
            "pkg": "org.mockito.internal.creation.bytebuddy.inject",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/bytebuddy/inject/MockMethodDispatcher.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "registerTypeVariablesOn(java.lang.reflect.Type)",
            "param": "classType",
            "location": "METHOD_PARAM",
            "class": "org.mockito.internal.util.reflection.GenericMetadataSupport",
            "pkg": "org.mockito.internal.util.reflection",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/util/reflection/GenericMetadataSupport.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "WRONG_OVERRIDE_PARAM",
            "method": "getInstantiator(org.mockito.mock.MockCreationSettings<?>)",
            "param": "settings",
            "location": "METHOD_PARAM",
            "class": "org.mockito.internal.creation.instance.DefaultInstantiatorProvider",
            "pkg": "org.mockito.internal.creation.instance",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/instance/DefaultInstantiatorProvider.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "addAnswer(org.mockito.stubbing.Answer,org.mockito.quality.Strictness)",
            "param": "stubbingStrictness",
            "location": "METHOD_PARAM",
            "class": "org.mockito.internal.stubbing.InvocationContainerImpl",
            "pkg": "org.mockito.internal.stubbing",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/stubbing/InvocationContainerImpl.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "WRONG_OVERRIDE_RETURN",
            "method": "getLocationOfStubbing()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.listeners.MethodInvocationReport",
            "pkg": "org.mockito.listeners",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/listeners/MethodInvocationReport.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "WRONG_OVERRIDE_RETURN",
            "method": "handle(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher",
            "pkg": "org.mockito.internal.creation.bytebuddy.inject",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/creation/bytebuddy/inject/MockMethodDispatcher.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "WRONG_OVERRIDE_RETURN",
            "method": "pullVerificationMode()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.internal.progress.MockingProgress",
            "pkg": "org.mockito.internal.progress",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/progress/MockingProgress.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<T>any()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.mockito.ArgumentMatchers",
            "pkg": "org.mockito",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/ArgumentMatchers.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "reflectionEquals(java.lang.Object,java.lang.Object,boolean,java.lang.Class<?>,java.lang.String[])",
            "param": "excludeFields",
            "location": "METHOD_PARAM",
            "class": "org.mockito.internal.matchers.apachecommons.EqualsBuilder",
            "pkg": "org.mockito.internal.matchers.apachecommons",
            "inject": "true",
            "uri": "//tmp/projects/mockito/src/main/java/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'excludeFields' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'excludeFields' where @NonNull is required"
            ],
            "jump": -1
        }
    ]
}