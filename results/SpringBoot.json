{
    "reports": [
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "from(java.lang.Object)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.origin.Origin",
            "pkg": "org.springframework.boot.origin",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/origin/Origin.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'Origin.from(reference.getConfigDataLocation())' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'origin' where @NonNull is required"
            ],
            "jump": 7
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "create(java.lang.ClassLoader,java.lang.String,java.util.function.Function<java.lang.Class<? extends javax.sql.DataSource>,org.springframework.boot.jdbc.DataSourceBuilder.DataSourceSettings>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.jdbc.DataSourceBuilder.DataSourceSettingsResolver",
            "pkg": "org.springframework.boot.jdbc",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/DataSourceBuilder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field type (line 42) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field preferredDataSourceSettings (line 172) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) passing @Nullable parameter 'create(classLoader, \"org.springframework.jdbc.datasource.SimpleDriverDataSource\",",
                "(Covered) passing @Nullable parameter 'create(classLoader, \"oracle.jdbc.datasource.OracleDataSource\", OracleDataSourceSettings::new)' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'create(classLoader, \"com.zaxxer.hikari.HikariDataSource\",",
                "(Covered) passing @Nullable parameter 'create(classLoader, \"org.apache.tomcat.jdbc.pool.DataSource\", DataSourceSettings::new)' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'create(classLoader, \"org.apache.commons.dbcp2.BasicDataSource\", DataSourceSettings::new)' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'create(classLoader, \"oracle.ucp.jdbc.PoolDataSourceImpl\", (type) -> {"
            ],
            "jump": 5
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "getHandler(io.undertow.server.HttpHandler)",
            "param": "next",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.web.embedded.undertow.HttpHandlerFactory",
            "pkg": "org.springframework.boot.web.embedded.undertow",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/HttpHandlerFactory.java",
            "errors": [
                "(Covered) parameter next of referenced method is @NonNull, but parameter in functional interface method org.springframework.boot.web.embedded.undertow.HttpHandlerFactory.getHandler(io.undertow.server.HttpHandler) is @Nullable",
                "(Covered) parameter next of referenced method is @NonNull, but parameter in functional interface method org.springframework.boot.web.embedded.undertow.HttpHandlerFactory.getHandler(io.undertow.server.HttpHandler) is @Nullable",
                "(Covered) parameter next is @NonNull, but parameter in superclass method org.springframework.boot.web.embedded.undertow.HttpHandlerFactory.getHandler(io.undertow.server.HttpHandler) is @Nullable",
                "(Covered) parameter next is @NonNull, but parameter in superclass method org.springframework.boot.web.embedded.undertow.HttpHandlerFactory.getHandler(io.undertow.server.HttpHandler) is @Nullable",
                "(Covered) parameter next is @NonNull, but parameter in superclass method org.springframework.boot.web.embedded.undertow.HttpHandlerFactory.getHandler(io.undertow.server.HttpHandler) is @Nullable",
                "(Covered) parameter next is @NonNull, but parameter in superclass method org.springframework.boot.web.embedded.undertow.HttpHandlerFactory.getHandler(io.undertow.server.HttpHandler) is @Nullable"
            ],
            "jump": 5
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "withProcessedImports(org.springframework.boot.context.config.ConfigDataImporter,org.springframework.boot.context.config.ConfigDataActivationContext)",
            "param": "activationContext",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.config.ConfigDataEnvironmentContributors",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigDataEnvironmentContributors.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'activationContext' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'activationContext' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'activationContext' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'activationContext' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'activationContext' where @NonNull is required",
                "(Covered) initializer method does not guarantee @NonNull field binder (line 236) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 4
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "profiles",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.config.ConfigFileApplicationListener.Loader",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileApplicationListener.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields searchLocations (line 142), names (line 144) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields processedProfiles (line 271), loaded (line 275) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "dereferenced expression this.profiles is @Nullable",
                "dereferenced expression this.profiles is @Nullable",
                "dereferenced expression this.profiles is @Nullable",
                "dereferenced expression this.profiles is @Nullable"
            ],
            "jump": 4
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "apply(org.hibernate.boot.model.naming.Identifier,org.hibernate.engine.jdbc.env.spi.JdbcEnvironment)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy",
            "pkg": "org.springframework.boot.orm.jpa.hibernate",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/orm/jpa/hibernate/SpringPhysicalNamingStrategy.java",
            "errors": [],
            "jump": 4
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "closeables",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.embedded.undertow.UndertowWebServer",
            "pkg": "org.springframework.boot.web.embedded.undertow",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowWebServer.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields undertow (line 62), gracefulShutdown (line 66) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "dereferenced expression this.closeables is @Nullable",
                "dereferenced expression this.closeables is @Nullable",
                "enhanced-for expression this.closeables is @Nullable"
            ],
            "jump": 3
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "setLogLevel(java.lang.String,org.springframework.boot.logging.LogLevel)",
            "param": "loggerName",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.logging.LoggingSystem",
            "pkg": "org.springframework.boot.logging",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/LoggingSystem.java",
            "errors": [
                "(Covered) parameter loggerName is @NonNull, but parameter in superclass method org.springframework.boot.logging.LoggingSystem.setLogLevel(java.lang.String,org.springframework.boot.logging.LogLevel) is @Nullable",
                "(Covered) parameter loggerName is @NonNull, but parameter in superclass method org.springframework.boot.logging.LoggingSystem.setLogLevel(java.lang.String,org.springframework.boot.logging.LogLevel) is @Nullable",
                "(Covered) parameter loggerName is @NonNull, but parameter in superclass method org.springframework.boot.logging.LoggingSystem.setLogLevel(java.lang.String,org.springframework.boot.logging.LogLevel) is @Nullable",
                "(Covered) parameter loggerName is @NonNull, but parameter in superclass method org.springframework.boot.logging.LoggingSystem.setLogLevel(java.lang.String,org.springframework.boot.logging.LogLevel) is @Nullable"
            ],
            "jump": 3
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "dataSource",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
            "pkg": "org.springframework.boot.jta.bitronix",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jta/bitronix/PoolingDataSourceBean.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field beanName (line 49) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field dataSource (line 125) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 3
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "loaded",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.config.ConfigFileApplicationListener.Loader",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileApplicationListener.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields searchLocations (line 142), names (line 144) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields profiles (line 268), processedProfiles (line 270) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "dereferenced expression this.loaded is @Nullable",
                "dereferenced expression this.loaded is @Nullable",
                "dereferenced expression this.loaded is @Nullable"
            ],
            "jump": 3
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "environment",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.builder.SpringApplicationBuilder",
            "pkg": "org.springframework.boot.builder",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/builder/SpringApplicationBuilder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields context (line 54), parent (line 56) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) passing @Nullable parameter 'this.environment' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'this.environment' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'this.environment' where @NonNull is required"
            ],
            "jump": 3
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "connectionFactory",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean",
            "pkg": "org.springframework.boot.jta.bitronix",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jta/bitronix/PoolingConnectionFactoryBean.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field beanName (line 46) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field connectionFactory (line 118) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 3
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "parse(java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)",
            "param": "valueProcessor",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyName.ElementsParser",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field string (line 43) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field resolved (line 811) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) passing @Nullable parameter 'valueProcessor' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'valueProcessor' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'valueProcessor' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'valueProcessor' where @NonNull is required"
            ],
            "jump": 3
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<T>convert(java.lang.Object,org.springframework.core.ResolvableType,java.lang.annotation.Annotation...)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.BindConverter",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/BindConverter.java",
            "errors": [],
            "jump": 3
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "descendants",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource.Mappings",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field configurationPropertyNames (line 51) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields mappings (line 187), reverseMappings (line 189), configurationPropertyNames (line 194), lastUpdated (line 196) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) passing @Nullable parameter 'this.descendants' where @NonNull is required",
                "dereferenced expression this.descendants is @Nullable",
                "dereferenced expression this.descendants is @Nullable"
            ],
            "jump": 3
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "create(java.lang.String,java.lang.Object,java.lang.Class<?>,java.lang.reflect.Method)",
            "param": "instance",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.properties.ConfigurationPropertiesBean",
            "pkg": "org.springframework.boot.context.properties",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBean.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'instance' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'instance' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'instance' where @NonNull is required"
            ],
            "jump": 3
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "context",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.builder.SpringApplicationBuilder",
            "pkg": "org.springframework.boot.builder",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/builder/SpringApplicationBuilder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields parent (line 57), environment (line 65) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 3
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "initializers",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.SpringApplication",
            "pkg": "org.springframework.boot",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields banner (line 146), beanNameGenerator (line 150), environment (line 152), listeners (line 163), defaultProperties (line 165) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "dereferenced expression this.initializers is @Nullable",
                "(Covered) passing @Nullable parameter 'this.initializers' where @NonNull is required"
            ],
            "jump": 2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "StandardConfigDataReference(org.springframework.boot.context.config.ConfigDataLocation,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.springframework.boot.env.PropertySourceLoader)",
            "param": "directory",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.config.StandardConfigDataReference",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/StandardConfigDataReference.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field directory (line 30) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) passing @Nullable parameter '(!extensionHintLocation) ? extension : null' where @NonNull is required"
            ],
            "jump": 2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "ConfigDataEnvironmentContributor(org.springframework.boot.context.config.ConfigDataEnvironmentContributor.Kind,org.springframework.boot.context.config.ConfigDataResource,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,boolean,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor.ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)",
            "param": "properties",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.config.ConfigDataEnvironmentContributor",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigDataEnvironmentContributor.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field properties (line 44) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field next (line 350) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "ConfigDataResourceNotFoundException(org.springframework.boot.context.config.ConfigDataResource,org.springframework.boot.context.config.ConfigDataLocation,java.lang.Throwable)",
            "param": "location",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.config.ConfigDataResourceNotFoundException",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigDataResourceNotFoundException.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field location (line 33) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) passing @Nullable parameter 'location' where @NonNull is required"
            ],
            "jump": 2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "ConfigDataEnvironmentContributor(org.springframework.boot.context.config.ConfigDataEnvironmentContributor.Kind,org.springframework.boot.context.config.ConfigDataResource,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,boolean,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor.ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)",
            "param": "resource",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.config.ConfigDataEnvironmentContributor",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigDataEnvironmentContributor.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field resource (line 38) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field next (line 350) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "mappings",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource.Mappings",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field configurationPropertyNames (line 51) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields reverseMappings (line 190), descendants (line 192), configurationPropertyNames (line 194), lastUpdated (line 196) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) passing @Nullable parameter 'this.mappings' where @NonNull is required",
                "dereferenced expression this.mappings is @Nullable"
            ],
            "jump": 2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "listeners",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.SpringApplication",
            "pkg": "org.springframework.boot",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields banner (line 146), beanNameGenerator (line 150), environment (line 152), initializers (line 160), defaultProperties (line 165) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "dereferenced expression this.listeners is @Nullable",
                "(Covered) passing @Nullable parameter 'this.listeners' where @NonNull is required"
            ],
            "jump": 2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "RequestFactoryCustomizer(java.time.Duration,java.time.Duration,java.lang.Boolean)",
            "param": "connectTimeout",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.web.client.RestTemplateBuilder.RequestFactoryCustomizer",
            "pkg": "org.springframework.boot.web.client",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/client/RestTemplateBuilder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields rootUri (line 61), messageConverters (line 63), requestFactory (line 67), uriTemplateHandler (line 69), errorHandler (line 71), basicAuthentication (line 73) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field connectTimeout (line 685) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getClassLoader(org.springframework.context.ConfigurableApplicationContext)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.diagnostics.FailureAnalyzers",
            "pkg": "org.springframework.boot.diagnostics",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/FailureAnalyzers.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field classLoader (line 43) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "read of @NonNull field classLoader before initialization"
            ],
            "jump": 2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "loggingSystem",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.logging.LoggingApplicationListener",
            "pkg": "org.springframework.boot.context.logging",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/logging/LoggingApplicationListener.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'this.loggingSystem' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'this.loggingSystem' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'this.loggingSystem' where @NonNull is required"
            ],
            "jump": 2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "of(java.lang.CharSequence,boolean)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyName",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field string (line 43) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field resolved (line 812) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) passing @Nullable parameter 'ConfigurationPropertyName.of(name, true)' where @NonNull is required"
            ],
            "jump": 2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "PropertyMapper(org.springframework.boot.context.properties.PropertyMapper,org.springframework.boot.context.properties.PropertyMapper.SourceOperator)",
            "param": "parent",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.properties.PropertyMapper",
            "pkg": "org.springframework.boot.context.properties",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/PropertyMapper.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field parent (line 37) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field result (line 123) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "handleRunFailure(org.springframework.context.ConfigurableApplicationContext,java.lang.Throwable,org.springframework.boot.SpringApplicationRunListeners)",
            "param": "context",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.SpringApplication",
            "pkg": "org.springframework.boot",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields banner (line 146), beanNameGenerator (line 150), environment (line 152), initializers (line 160), listeners (line 162), defaultProperties (line 164) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "of(java.lang.Object,org.springframework.boot.origin.Origin)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.origin.OriginTrackedValue",
            "pkg": "org.springframework.boot.origin",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/origin/OriginTrackedValue.java",
            "errors": [],
            "jump": 2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "InvalidConfigDataPropertyException(org.springframework.boot.context.properties.source.ConfigurationProperty,org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.config.ConfigDataResource)",
            "param": "location",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.config.InvalidConfigDataPropertyException",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/InvalidConfigDataPropertyException.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field location (line 45) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) passing @Nullable parameter 'location' where @NonNull is required"
            ],
            "jump": 2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "findSource(java.lang.Class<?>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.system.ApplicationHome",
            "pkg": "org.springframework.boot.system",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/system/ApplicationHome.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field source (line 39) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "read of @NonNull field source before initialization"
            ],
            "jump": 2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "applicationContext",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.admin.SpringApplicationAdminMXBeanRegistrar",
            "pkg": "org.springframework.boot.admin",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/admin/SpringApplicationAdminMXBeanRegistrar.java",
            "errors": [
                "dereferenced expression this.applicationContext is @Nullable",
                "dereferenced expression this.applicationContext is @Nullable",
                "dereferenced expression SpringApplicationAdminMXBeanRegistrar.this.applicationContext is @Nullable"
            ],
            "jump": 2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "servlet",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.ServletRegistrationBean",
            "pkg": "org.springframework.boot.web.servlet",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletRegistrationBean.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field multipartConfig (line 48) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field multipartConfig (line 48) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) passing @Nullable parameter 'this.servlet' where @NonNull is required"
            ],
            "jump": 2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<E>findCause(java.lang.Throwable,java.lang.Class<E>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.diagnostics.AbstractFailureAnalyzer",
            "pkg": "org.springframework.boot.diagnostics",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/AbstractFailureAnalyzer.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'exception' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'target' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'exception' where @NonNull is required"
            ],
            "jump": 2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "processedProfiles",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.config.ConfigFileApplicationListener.Loader",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileApplicationListener.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields searchLocations (line 142), names (line 144) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields profiles (line 268), loaded (line 275) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "enhanced-for expression this.processedProfiles is @Nullable",
                "dereferenced expression this.processedProfiles is @Nullable"
            ],
            "jump": 2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "webServer",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext",
            "pkg": "org.springframework.boot.web.servlet.context",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContext.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields servletConfig (line 81), serverNamespace (line 83) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields servletConfig (line 81), serverNamespace (line 83) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "applicationContext",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
            "pkg": "org.springframework.boot.context.properties",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java",
            "errors": [
                "dereferenced expression this.applicationContext is @Nullable",
                "(Covered) passing @Nullable parameter 'this.applicationContext' where @NonNull is required"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "compression",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields address (line 35), ssl (line 39), sslStoreProvider (line 41), http2 (line 43), serverHeader (line 48) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields address (line 35), ssl (line 39), sslStoreProvider (line 41), http2 (line 43), serverHeader (line 48) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "searchLocations",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.config.ConfigFileApplicationListener",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileApplicationListener.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field names (line 145) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields profiles (line 269), processedProfiles (line 271), loaded (line 275) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) passing @Nullable parameter 'ConfigFileApplicationListener.this.searchLocations' where @NonNull is required"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "newInitializer()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.embedded.jetty.JasperInitializer",
            "pkg": "org.springframework.boot.web.embedded.jetty",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/jetty/JasperInitializer.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field initializer (line 43) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "parse(java.lang.String,java.time.temporal.ChronoUnit)",
            "param": "unit",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.convert.DurationStyle",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/DurationStyle.java",
            "errors": [
                "(Covered) parameter unit is @NonNull, but parameter in superclass method org.springframework.boot.convert.DurationStyle.parse(java.lang.String,java.time.temporal.ChronoUnit) is @Nullable",
                "(Covered) parameter unit is @NonNull, but parameter in superclass method org.springframework.boot.convert.DurationStyle.parse(java.lang.String,java.time.temporal.ChronoUnit) is @Nullable"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "reverseMappings",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource.Mappings",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field configurationPropertyNames (line 51) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields mappings (line 187), descendants (line 192), configurationPropertyNames (line 194), lastUpdated (line 196) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) passing @Nullable parameter 'this.reverseMappings' where @NonNull is required"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "address",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields ssl (line 40), sslStoreProvider (line 42), http2 (line 44), compression (line 46), serverHeader (line 48) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields ssl (line 40), sslStoreProvider (line 42), http2 (line 44), compression (line 46), serverHeader (line 48) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "findFactoryMethod(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.ConfigurationPropertiesBean",
            "pkg": "org.springframework.boot.context.properties",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBean.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'factoryMethod' where @NonNull is required"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "resolved",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyName.ElementsParser",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field string (line 43) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) passing @Nullable parameter 'this.resolved' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'this.resolved' where @NonNull is required"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "events",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.logging.logback.SpringProfileAction",
            "pkg": "org.springframework.boot.logging.logback",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/logback/SpringProfileAction.java",
            "errors": [
                "dereferenced expression this.events is @Nullable",
                "dereferenced expression this.events is @Nullable"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getUnderlyingSource()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.source.ConfigurationPropertySource",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertySource.java",
            "errors": [],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "ApplicationEnvironmentPreparedEvent(org.springframework.boot.ConfigurableBootstrapContext,org.springframework.boot.SpringApplication,java.lang.String[],org.springframework.core.env.ConfigurableEnvironment)",
            "param": "bootstrapContext",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.event.ApplicationEnvironmentPreparedEvent",
            "pkg": "org.springframework.boot.context.event",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/event/ApplicationEnvironmentPreparedEvent.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field bootstrapContext (line 29) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "getDocumentFilter(org.springframework.boot.context.config.ConfigFileApplicationListener.Profile)",
            "param": "profile",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.config.ConfigFileApplicationListener.DocumentFilterFactory",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileApplicationListener.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields searchLocations (line 142), names (line 144) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields profiles (line 268), processedProfiles (line 270), loaded (line 274) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) parameter profile of referenced method is @NonNull, but parameter in functional interface method org.springframework.boot.context.config.ConfigFileApplicationListener.DocumentFilterFactory.getDocumentFilter(org.springframework.boot.context.config.ConfigFileApplicationListener.Profile) is @Nullable",
                "(Covered) parameter profile of referenced method is @NonNull, but parameter in functional interface method org.springframework.boot.context.config.ConfigFileApplicationListener.DocumentFilterFactory.getDocumentFilter(org.springframework.boot.context.config.ConfigFileApplicationListener.Profile) is @Nullable"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "banner",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.SpringApplication",
            "pkg": "org.springframework.boot",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields beanNameGenerator (line 151), environment (line 153), initializers (line 161), listeners (line 163), defaultProperties (line 165) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) passing @Nullable parameter 'this.banner' where @NonNull is required"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "FailureAnalysis(java.lang.String,java.lang.String,java.lang.Throwable)",
            "param": "description",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.diagnostics.FailureAnalysis",
            "pkg": "org.springframework.boot.diagnostics",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/FailureAnalysis.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field description (line 23) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "names",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.config.ConfigFileApplicationListener",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileApplicationListener.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field searchLocations (line 142) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields profiles (line 269), processedProfiles (line 271), loaded (line 275) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) passing @Nullable parameter 'ConfigFileApplicationListener.this.names' where @NonNull is required"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "print(java.time.Period,java.time.temporal.ChronoUnit)",
            "param": "unit",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.convert.PeriodStyle",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/PeriodStyle.java",
            "errors": [
                "(Covered) parameter unit is @NonNull, but parameter in superclass method org.springframework.boot.convert.PeriodStyle.print(java.time.Period,java.time.temporal.ChronoUnit) is @Nullable",
                "(Covered) parameter unit is @NonNull, but parameter in superclass method org.springframework.boot.convert.PeriodStyle.print(java.time.Period,java.time.temporal.ChronoUnit) is @Nullable"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "defaultProperties",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.SpringApplication",
            "pkg": "org.springframework.boot",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields banner (line 146), beanNameGenerator (line 150), environment (line 152), initializers (line 160), listeners (line 162) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) passing @Nullable parameter 'this.defaultProperties' where @NonNull is required"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "global",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.support.ErrorPageFilter",
            "pkg": "org.springframework.boot.web.servlet.support",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/support/ErrorPageFilter.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field message (line 305) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "InvocationResult(R)",
            "param": "value",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.util.LambdaSafe.InvocationResult",
            "pkg": "org.springframework.boot.util",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/util/LambdaSafe.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field value (line 362) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<R>getLoader(org.springframework.boot.context.config.ConfigDataLoaderContext,R)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.config.ConfigDataLoaders",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigDataLoaders.java",
            "errors": [
                "dereferenced expression loader is @Nullable",
                "dereferenced expression loader is @Nullable"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "lifecycleTimeout",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory",
            "pkg": "org.springframework.boot.web.embedded.netty",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/netty/NettyReactiveWebServerFactory.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields resourceFactory (line 54), shutdown (line 56) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields resourceFactory (line 54), shutdown (line 56) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) passing @Nullable parameter 'this.lifecycleTimeout' where @NonNull is required"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "threadPool",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory",
            "pkg": "org.springframework.boot.web.embedded.jetty",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/jetty/JettyServletWebServerFactory.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 96) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 96) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 96) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "parse(java.lang.String,java.time.temporal.ChronoUnit)",
            "param": "unit",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.convert.PeriodStyle",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/PeriodStyle.java",
            "errors": [
                "(Covered) parameter unit is @NonNull, but parameter in superclass method org.springframework.boot.convert.PeriodStyle.parse(java.lang.String,java.time.temporal.ChronoUnit) is @Nullable",
                "(Covered) parameter unit is @NonNull, but parameter in superclass method org.springframework.boot.convert.PeriodStyle.parse(java.lang.String,java.time.temporal.ChronoUnit) is @Nullable"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getApplicationVersion(java.lang.Class<?>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.ResourceBanner",
            "pkg": "org.springframework.boot",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/ResourceBanner.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'appVersion' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'appVersion' where @NonNull is required"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "sslStoreProvider",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields address (line 35), ssl (line 39), http2 (line 44), compression (line 46), serverHeader (line 48) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields address (line 35), ssl (line 39), http2 (line 44), compression (line 46), serverHeader (line 48) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "create(java.lang.String,java.lang.Object,java.lang.Class<?>,java.lang.reflect.Method)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.ConfigurationPropertiesBean",
            "pkg": "org.springframework.boot.context.properties",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBean.java",
            "errors": [],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "Unit(java.time.temporal.ChronoUnit,java.lang.String,java.util.function.Function<java.time.Period,java.lang.Integer>,java.util.function.Function<java.lang.Integer,java.time.Period>)",
            "param": "intValue",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.convert.PeriodStyle.Unit",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/PeriodStyle.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field intValue (line 235) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "applicationContext",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.ServletComponentRegisteringPostProcessor",
            "pkg": "org.springframework.boot.web.servlet",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletComponentRegisteringPostProcessor.java",
            "errors": [
                "(Covered) passing @Nullable parameter '(BeanDefinitionRegistry) this.applicationContext' where @NonNull is required",
                "dereferenced expression this.applicationContext is @Nullable"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "FailureAnalysis(java.lang.String,java.lang.String,java.lang.Throwable)",
            "param": "action",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.diagnostics.FailureAnalysis",
            "pkg": "org.springframework.boot.diagnostics",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/FailureAnalysis.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field action (line 25) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "ApplicationStartingEvent(org.springframework.boot.ConfigurableBootstrapContext,org.springframework.boot.SpringApplication,java.lang.String[])",
            "param": "bootstrapContext",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.event.ApplicationStartingEvent",
            "pkg": "org.springframework.boot.context.event",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/event/ApplicationStartingEvent.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field bootstrapContext (line 30) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "findInjectionPoint(java.lang.Throwable)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.NotConstructorBoundInjectionFailureAnalyzer",
            "pkg": "org.springframework.boot.context.properties",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/NotConstructorBoundInjectionFailureAnalyzer.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'injectionPoint' where @NonNull is required",
                "dereferenced expression injectionPoint is @Nullable"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "findConfig(java.lang.String[])",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.logging.AbstractLoggingSystem",
            "pkg": "org.springframework.boot.logging",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/AbstractLoggingSystem.java",
            "errors": [],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "getter",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.bind.JavaBeanBinder.BeanProperty",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/JavaBeanBinder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field instance (line 244) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields setter (line 272), field (line 274) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "dereferenced expression this.getter is @Nullable"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "setter",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.bind.JavaBeanBinder.BeanProperty",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/JavaBeanBinder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field instance (line 244) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields getter (line 269), field (line 274) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "dereferenced expression this.setter is @Nullable"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "serverHeader",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields address (line 35), ssl (line 39), sslStoreProvider (line 41), http2 (line 43), compression (line 45) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields address (line 35), ssl (line 39), sslStoreProvider (line 41), http2 (line 43), compression (line 45) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource)",
            "param": "source",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.properties.bind.AggregateElementBinder",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/AggregateElementBinder.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'source' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'source' where @NonNull is required"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "BindResult(T)",
            "param": "value",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.properties.bind.BindResult",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/BindResult.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field value (line 33) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "Elements(java.lang.CharSequence,int,int[],int[],org.springframework.boot.context.properties.source.ConfigurationPropertyName.ElementType[],java.lang.CharSequence[])",
            "param": "resolved",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyName.Elements",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field string (line 43) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field resolved (line 682) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field resolved (line 811) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "accessLogPrefix",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate",
            "pkg": "org.springframework.boot.web.embedded.undertow",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowWebServerFactoryDelegate.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'this.accessLogPrefix' where @NonNull is required"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "DatabaseDriver(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "param": "validationQuery",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.jdbc.DatabaseDriver",
            "pkg": "org.springframework.boot.jdbc",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/DatabaseDriver.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field validationQuery (line 212) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "<T>handleBindResult(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable<T>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder.Context,java.lang.Object,boolean)",
            "param": "result",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.properties.bind.Binder",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Binder.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'result' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'result' where @NonNull is required",
                "(Covered) initializer method does not guarantee @NonNull field configurationProperty (line 520) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "resourceFactory",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.embedded.jetty.JettyReactiveWebServerFactory",
            "pkg": "org.springframework.boot.web.embedded.jetty",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/jetty/JettyReactiveWebServerFactory.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field threadPool (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field threadPool (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getInstant(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.info.InfoProperties",
            "pkg": "org.springframework.boot.info",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/info/InfoProperties.java",
            "errors": [],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "shutdown",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory",
            "pkg": "org.springframework.boot.web.embedded.netty",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/netty/NettyReactiveWebServerFactory.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields lifecycleTimeout (line 49), resourceFactory (line 53) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields lifecycleTimeout (line 49), resourceFactory (line 53) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "LoggerConfiguration(java.lang.String,org.springframework.boot.logging.LogLevel,org.springframework.boot.logging.LogLevel)",
            "param": "configuredLevel",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.logging.LoggerConfiguration",
            "pkg": "org.springframework.boot.logging",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/LoggerConfiguration.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field configuredLevel (line 28) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getPid()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.system.ApplicationPid",
            "pkg": "org.springframework.boot.system",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/system/ApplicationPid.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field pid (line 38) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "applyTo(org.springframework.core.env.ConfigurableEnvironment,org.springframework.core.io.ResourceLoader,org.springframework.boot.ConfigurableBootstrapContext,java.util.Collection<java.lang.String>)",
            "param": "resourceLoader",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigDataEnvironmentPostProcessor.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'resourceLoader' where @NonNull is required"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "http2",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields address (line 35), ssl (line 39), sslStoreProvider (line 41), compression (line 46), serverHeader (line 48) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields address (line 35), ssl (line 39), sslStoreProvider (line 41), compression (line 46), serverHeader (line 48) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "address()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.rsocket.netty.NettyRSocketServer",
            "pkg": "org.springframework.boot.rsocket.netty",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/rsocket/netty/NettyRSocketServer.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field channel (line 41) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.rsocket.server.RSocketServer.address() returns @NonNull",
                "dereferenced expression address() is @Nullable"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "LogFile(java.lang.String,java.lang.String)",
            "param": "path",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.logging.LogFile",
            "pkg": "org.springframework.boot.logging",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/LogFile.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field path (line 47) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "serverNamespace",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext",
            "pkg": "org.springframework.boot.web.reactive.context",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/reactive/context/ReactiveWebServerApplicationContext.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field serverManager (line 36) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field serverManager (line 36) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "convertNativeToSystem(T)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.logging.AbstractLoggingSystem.LogLevels",
            "pkg": "org.springframework.boot.logging",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/AbstractLoggingSystem.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'level' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'level' where @NonNull is required"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "ColorConverter(java.util.List<org.apache.logging.log4j.core.pattern.PatternFormatter>,org.springframework.boot.ansi.AnsiElement)",
            "param": "styling",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.logging.log4j2.ColorConverter",
            "pkg": "org.springframework.boot.logging.log4j2",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/log4j2/ColorConverter.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field styling (line 72) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "of(java.lang.Object,org.springframework.boot.origin.Origin)",
            "param": "origin",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.origin.OriginTrackedValue",
            "pkg": "org.springframework.boot.origin",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/origin/OriginTrackedValue.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'origin' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'origin' where @NonNull is required"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "findManager(java.lang.Iterable<org.springframework.boot.web.embedded.undertow.HttpHandlerFactory>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer",
            "pkg": "org.springframework.boot.web.embedded.undertow",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowServletWebServer.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field manager (line 34) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "servletConfig",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext",
            "pkg": "org.springframework.boot.web.servlet.context",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContext.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields webServer (line 78), serverNamespace (line 83) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields webServer (line 78), serverNamespace (line 83) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "threadPool",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.embedded.jetty.JettyReactiveWebServerFactory",
            "pkg": "org.springframework.boot.web.embedded.jetty",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/jetty/JettyReactiveWebServerFactory.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field resourceFactory (line 71) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field resourceFactory (line 71) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "Activate(org.springframework.boot.cloud.CloudPlatform,java.lang.String[])",
            "param": "onCloudPlatform",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.config.ConfigDataProperties.Activate",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigDataProperties.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field onCloudPlatform (line 143) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "undertow",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.embedded.undertow.UndertowWebServer",
            "pkg": "org.springframework.boot.web.embedded.undertow",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowWebServer.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields gracefulShutdown (line 67), closeables (line 69) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "dereferenced expression this.undertow is @Nullable"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "of(org.springframework.boot.context.properties.source.ConfigurationPropertyName,java.lang.Object,org.springframework.boot.origin.Origin)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.source.ConfigurationProperty",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationProperty.java",
            "errors": [],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "print(java.time.Duration,java.time.temporal.ChronoUnit)",
            "param": "unit",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.convert.DurationStyle",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/DurationStyle.java",
            "errors": [
                "(Covered) parameter unit is @NonNull, but parameter in superclass method org.springframework.boot.convert.DurationStyle.print(java.time.Duration,java.time.temporal.ChronoUnit) is @Nullable",
                "(Covered) parameter unit is @NonNull, but parameter in superclass method org.springframework.boot.convert.DurationStyle.print(java.time.Duration,java.time.temporal.ChronoUnit) is @Nullable"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "findAnnotatedConstructor(java.lang.Class<?>,java.lang.reflect.Constructor<?>...)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.ConfigurationPropertiesBindConstructorProvider",
            "pkg": "org.springframework.boot.context.properties",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindConstructorProvider.java",
            "errors": [],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "ssl",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields address (line 35), sslStoreProvider (line 42), http2 (line 44), compression (line 46), serverHeader (line 48) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields address (line 35), sslStoreProvider (line 42), http2 (line 44), compression (line 46), serverHeader (line 48) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "serverNamespace",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext",
            "pkg": "org.springframework.boot.web.servlet.context",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/context/ServletWebServerApplicationContext.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields webServer (line 78), servletConfig (line 80) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields webServer (line 78), servletConfig (line 80) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "createGracefulShutdown(org.eclipse.jetty.server.Server)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.embedded.jetty.JettyWebServer",
            "pkg": "org.springframework.boot.web.embedded.jetty",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/jetty/JettyWebServer.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field gracefulShutdown (line 58) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "recordingStartTime",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.metrics.buffering.BufferingApplicationStartup",
            "pkg": "org.springframework.boot.context.metrics.buffering",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/metrics/buffering/BufferingApplicationStartup.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'this.recordingStartTime' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'this.recordingStartTime' where @NonNull is required"
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "ConfigDataLocation(boolean,java.lang.String,org.springframework.boot.origin.Origin)",
            "param": "origin",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.config.ConfigDataLocation",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigDataLocation.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field origin (line 36) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getDataUnit(org.springframework.core.convert.TypeDescriptor)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.convert.StringToDataSizeConverter",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/StringToDataSizeConverter.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'getDataUnit(targetType)' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getValue(java.util.function.Supplier<?>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.JavaBeanBinder.BeanProperty",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/JavaBeanBinder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field instance (line 244) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields getter (line 269), setter (line 271), field (line 273) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "lastMappedPropertyName",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.source.DefaultPropertyMapper",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/DefaultPropertyMapper.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field lastMappedConfigurationPropertyName (line 30) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "ciphers",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.server.Ssl",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/Ssl.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "trustStorePassword",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.server.Ssl",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/Ssl.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "analyze(java.lang.Throwable,org.springframework.beans.factory.NoSuchBeanDefinitionException,java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.NotConstructorBoundInjectionFailureAnalyzer",
            "pkg": "org.springframework.boot.context.properties",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/NotConstructorBoundInjectionFailureAnalyzer.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.diagnostics.analyzer.AbstractInjectionFailureAnalyzer.analyze(java.lang.Throwable,T,java.lang.String) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "eventPublisher",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.rsocket.context.RSocketServerBootstrap",
            "pkg": "org.springframework.boot.rsocket.context",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/rsocket/context/RSocketServerBootstrap.java",
            "errors": [
                "dereferenced expression this.eventPublisher is @Nullable"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "accessLogPattern",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate",
            "pkg": "org.springframework.boot.web.embedded.undertow",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowWebServerFactoryDelegate.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'this.accessLogPattern' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "configuredLevel",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.logging.LoggerGroup",
            "pkg": "org.springframework.boot.logging",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/LoggerGroup.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "logBaseDir",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.jta.atomikos.AtomikosProperties",
            "pkg": "org.springframework.boot.jta.atomikos",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jta/atomikos/AtomikosProperties.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "compiler",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.reactive.result.view.MustacheView",
            "pkg": "org.springframework.boot.web.reactive.result.view",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/reactive/result/view/MustacheView.java",
            "errors": [
                "dereferenced expression this.compiler is @Nullable"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "keyStoreType",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.server.Ssl",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/Ssl.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getIdle()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.jdbc.metadata.HikariDataSourcePoolMetadata",
            "pkg": "org.springframework.boot.jdbc.metadata",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/metadata/HikariDataSourcePoolMetadata.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.jdbc.metadata.DataSourcePoolMetadata.getIdle() returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "EntityManagerFactoryBuilder(org.springframework.orm.jpa.JpaVendorAdapter,java.util.Map<java.lang.String,?>,org.springframework.orm.jpa.persistenceunit.PersistenceUnitManager,java.net.URL)",
            "param": "persistenceUnitRootLocation",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
            "pkg": "org.springframework.boot.orm.jpa",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/orm/jpa/EntityManagerFactoryBuilder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields persistenceUnitRootLocation (line 46), bootstrapExecutor (line 48) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields packagesToScan (line 103), persistenceUnit (line 105), mappingResources (line 109) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "maxFileSize",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.MultipartConfigFactory",
            "pkg": "org.springframework.boot.web.servlet",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/MultipartConfigFactory.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'this.maxFileSize' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getBeanType(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.LazyInitializationBeanFactoryPostProcessor",
            "pkg": "org.springframework.boot",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/LazyInitializationBeanFactoryPostProcessor.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'beanType' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getDescription(java.lang.Throwable)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.diagnostics.analyzer.AbstractInjectionFailureAnalyzer",
            "pkg": "org.springframework.boot.diagnostics.analyzer",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/AbstractInjectionFailureAnalyzer.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'getDescription(rootFailure)' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getOrigin(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.env.ConfigTreePropertySource",
            "pkg": "org.springframework.boot.env",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/env/ConfigTreePropertySource.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.origin.OriginLookup.getOrigin(K) returns @NonNull",
                "(Covered) initializer method does not guarantee @NonNull field cachedContent (line 157) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field content (line 244) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getDeducedKotlinConstructor(java.lang.Class<?>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.DefaultBindConstructorProvider",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/DefaultBindConstructorProvider.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "keyAlias",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.server.Ssl",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/Ssl.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "of(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.config.ConfigDataLocation",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigDataLocation.java",
            "errors": [
                "dereferenced expression ConfigDataLocation.of(location) is @Nullable"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getElement(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.ansi.AnsiPropertySource.EnumMapping",
            "pkg": "org.springframework.boot.ansi",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/ansi/AnsiPropertySource.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.ansi.AnsiPropertySource.Mapping.getElement(java.lang.String) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getExplodedWarFileDocumentRoot(java.io.File)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.servlet.server.DocumentRoot",
            "pkg": "org.springframework.boot.web.servlet.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/server/DocumentRoot.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field directory (line 37) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "deducedKotlinBindConstructor(java.lang.Class<?>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.ConfigurationPropertiesBindConstructorProvider",
            "pkg": "org.springframework.boot.context.properties",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindConstructorProvider.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "analyze(java.lang.Throwable,java.lang.NoSuchMethodError)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer",
            "pkg": "org.springframework.boot.diagnostics.analyzer",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/NoSuchMethodFailureAnalyzer.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.diagnostics.AbstractFailureAnalyzer.analyze(java.lang.Throwable,T) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "trustStoreProvider",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.server.Ssl",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/Ssl.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "load(org.springframework.boot.context.config.ConfigFileApplicationListener.Profile,org.springframework.boot.context.config.ConfigFileApplicationListener.DocumentFilterFactory,org.springframework.boot.context.config.ConfigFileApplicationListener.DocumentConsumer)",
            "param": "profile",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.config.ConfigFileApplicationListener.Loader",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileApplicationListener.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields searchLocations (line 142), names (line 144) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields profiles (line 268), processedProfiles (line 270), loaded (line 274) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) passing @Nullable parameter 'profile' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "findClassIgnoringNotFound(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedWebappClassLoader",
            "pkg": "org.springframework.boot.web.embedded.tomcat",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatEmbeddedWebappClassLoader.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<T>create(org.springframework.boot.context.properties.bind.Bindable<T>,org.springframework.boot.context.properties.bind.Binder.Context)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.JavaBeanBinder",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/JavaBeanBinder.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.context.properties.bind.DataObjectBinder.<T>create(org.springframework.boot.context.properties.bind.Bindable<T>,org.springframework.boot.context.properties.bind.Binder.Context) returns @NonNull",
                "(Covered) initializer method does not guarantee @NonNull field instance (line 244) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields getter (line 269), setter (line 271), field (line 273) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "httpOnly",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.server.Session.Cookie",
            "pkg": "org.springframework.boot.web.servlet.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/server/Session.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "storeDir",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.server.Session",
            "pkg": "org.springframework.boot.web.servlet.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/server/Session.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "name",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.server.Session.Cookie",
            "pkg": "org.springframework.boot.web.servlet.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/server/Session.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getConfigurationPropertiesValidator(org.springframework.context.ApplicationContext)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder",
            "pkg": "org.springframework.boot.context.properties",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBinder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields configurationPropertiesValidator (line 67), jsr303Validator (line 71), binder (line 73) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "directory",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.server.DocumentRoot",
            "pkg": "org.springframework.boot.web.servlet.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/server/DocumentRoot.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "findStatisticsHandler(org.eclipse.jetty.server.Handler)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.embedded.jetty.JettyWebServer",
            "pkg": "org.springframework.boot.web.embedded.jetty",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/jetty/JettyWebServer.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "Bindable(org.springframework.core.ResolvableType,org.springframework.core.ResolvableType,java.util.function.Supplier<T>,java.lang.annotation.Annotation[])",
            "param": "value",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.properties.bind.Bindable",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Bindable.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field value (line 41) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<S>getState(java.lang.Class<S>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.availability.ApplicationAvailabilityBean",
            "pkg": "org.springframework.boot.availability",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/availability/ApplicationAvailabilityBean.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.availability.ApplicationAvailability.<S>getState(java.lang.Class<S>) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "comment",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.server.Session.Cookie",
            "pkg": "org.springframework.boot.web.servlet.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/server/Session.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<S>getLastChangeEvent(java.lang.Class<S>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.availability.ApplicationAvailabilityBean",
            "pkg": "org.springframework.boot.availability",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/availability/ApplicationAvailabilityBean.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.availability.ApplicationAvailability.<S>getLastChangeEvent(java.lang.Class<S>) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "resolve(org.springframework.boot.context.config.ConfigDataLocationResolverContext,org.springframework.boot.context.config.Profiles,java.util.List<org.springframework.boot.context.config.ConfigDataLocation>)",
            "param": "profiles",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.config.ConfigDataImporter",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigDataImporter.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "get(org.springframework.core.env.PropertyResolver)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.logging.LogFile",
            "pkg": "org.springframework.boot.logging",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/LogFile.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "ConfigDataProperties(java.util.List<org.springframework.boot.context.config.ConfigDataLocation>,org.springframework.boot.context.config.ConfigDataProperties.Activate)",
            "param": "activate",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.config.ConfigDataProperties",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigDataProperties.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'activate' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "bindAggregate(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable<?>,org.springframework.boot.context.properties.bind.AggregateElementBinder)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.ArrayBinder",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/ArrayBinder.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.context.properties.bind.AggregateBinder.bindAggregate(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable<?>,org.springframework.boot.context.properties.bind.AggregateElementBinder) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "analyze(java.lang.Throwable,org.springframework.beans.factory.BeanCurrentlyInCreationException)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer",
            "pkg": "org.springframework.boot.diagnostics.analyzer",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/BeanCurrentlyInCreationFailureAnalyzer.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.diagnostics.AbstractFailureAnalyzer.analyze(java.lang.Throwable,T) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "path",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.server.Session.Cookie",
            "pkg": "org.springframework.boot.web.servlet.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/server/Session.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "flatten(java.util.Properties,java.util.Map<java.lang.String,java.lang.Object>,java.lang.String)",
            "param": "path",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
            "pkg": "org.springframework.boot.cloud",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/cloud/CloudFoundryVcapEnvironmentPostProcessor.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'path' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getLoggingSystem(java.lang.ClassLoader)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.logging.java.JavaLoggingSystem.Factory",
            "pkg": "org.springframework.boot.logging.java",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/java/JavaLoggingSystem.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.logging.LoggingSystemFactory.getLoggingSystem(java.lang.ClassLoader) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getNameForAlias(org.springframework.boot.context.properties.source.ConfigurationPropertyName)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyNameAliases",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyNameAliases.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'aliasedName' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "deduceBindConstructor(java.lang.Class<?>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.ConfigurationPropertiesBindConstructorProvider",
            "pkg": "org.springframework.boot.context.properties",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindConstructorProvider.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "loadTrustStore(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.embedded.undertow.SslBuilderCustomizer",
            "pkg": "org.springframework.boot.web.embedded.undertow",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/SslBuilderCustomizer.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "analyze(java.lang.Throwable,liquibase.exception.ChangeLogParseException)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.liquibase.LiquibaseChangelogMissingFailureAnalyzer",
            "pkg": "org.springframework.boot.liquibase",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/liquibase/LiquibaseChangelogMissingFailureAnalyzer.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.diagnostics.AbstractFailureAnalyzer.analyze(java.lang.Throwable,T) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "PortInUseException(int,java.lang.Throwable)",
            "param": "cause",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.web.server.PortInUseException",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/PortInUseException.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'cause' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "result",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.PropertyMapper.CachingSupplier",
            "pkg": "org.springframework.boot.context.properties",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/PropertyMapper.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "field",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.bind.JavaBeanBinder.BeanProperty",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/JavaBeanBinder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field instance (line 244) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields getter (line 269), setter (line 271) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getLoggerConfiguration(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.logging.java.JavaLoggingSystem",
            "pkg": "org.springframework.boot.logging.java",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/java/JavaLoggingSystem.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.logging.LoggingSystem.getLoggerConfiguration(java.lang.String) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "mapping",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.server.Encoding",
            "pkg": "org.springframework.boot.web.servlet.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/server/Encoding.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "loadConfiguration(org.springframework.boot.logging.LoggingInitializationContext,java.lang.String,org.springframework.boot.logging.LogFile)",
            "param": "logFile",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.logging.logback.LogbackLoggingSystem",
            "pkg": "org.springframework.boot.logging.logback",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/logback/LogbackLoggingSystem.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'logFile' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "findLogger(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem",
            "pkg": "org.springframework.boot.logging.log4j2",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/log4j2/Log4J2LoggingSystem.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getLocation(org.springframework.boot.context.config.ConfigDataNotFoundException)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.config.ConfigDataNotFoundFailureAnalyzer",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigDataNotFoundFailureAnalyzer.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'location' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "property",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.config.ConfigDataProperties.LegacyProfilesBindHandler",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigDataProperties.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getStartClass()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.system.ApplicationHome",
            "pkg": "org.springframework.boot.system",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/system/ApplicationHome.java",
            "errors": [
                "(Covered) passing @Nullable parameter '(sourceClass != null) ? sourceClass : getStartClass()' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "accessLogDirectory",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate",
            "pkg": "org.springframework.boot.web.embedded.undertow",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowWebServerFactoryDelegate.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'this.accessLogDirectory' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getDataSourcePoolMetadata(javax.sql.DataSource)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.jdbc.metadata.CompositeDataSourcePoolMetadataProvider",
            "pkg": "org.springframework.boot.jdbc.metadata",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/metadata/CompositeDataSourcePoolMetadataProvider.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider.getDataSourcePoolMetadata(javax.sql.DataSource) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "packagesToScan",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder.Builder",
            "pkg": "org.springframework.boot.orm.jpa",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/orm/jpa/EntityManagerFactoryBuilder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field bootstrapExecutor (line 48) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields persistenceUnit (line 106), mappingResources (line 110) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getActive()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.jdbc.metadata.OracleUcpDataSourcePoolMetadata",
            "pkg": "org.springframework.boot.jdbc.metadata",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/metadata/OracleUcpDataSourcePoolMetadata.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.jdbc.metadata.DataSourcePoolMetadata.getActive() returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "bindAggregate(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable<?>,org.springframework.boot.context.properties.bind.AggregateElementBinder)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.CollectionBinder",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/CollectionBinder.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.context.properties.bind.AggregateBinder.bindAggregate(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable<?>,org.springframework.boot.context.properties.bind.AggregateElementBinder) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getCommonDocumentRoot()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.servlet.server.DocumentRoot",
            "pkg": "org.springframework.boot.web.servlet.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/server/DocumentRoot.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field directory (line 37) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getPeriodStyle(org.springframework.core.convert.TypeDescriptor)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.convert.PeriodToStringConverter",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/PeriodToStringConverter.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'getPeriodStyle(sourceType)' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getElement(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.ansi.AnsiPropertySource.Ansi8BitColorMapping",
            "pkg": "org.springframework.boot.ansi",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/ansi/AnsiPropertySource.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.ansi.AnsiPropertySource.Mapping.getElement(java.lang.String) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getDurationUnit(org.springframework.core.convert.TypeDescriptor)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.convert.DurationToNumberConverter",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/DurationToNumberConverter.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'getDurationUnit(sourceType)' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "startUpException",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.embedded.tomcat.TomcatStarter",
            "pkg": "org.springframework.boot.web.embedded.tomcat",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatStarter.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "LabColor(java.awt.Color)",
            "param": "color",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.ansi.AnsiColors.LabColor",
            "pkg": "org.springframework.boot.ansi",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/ansi/AnsiColors.java",
            "errors": [
                "dereferenced expression color is @Nullable"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "keyStoreProvider",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.server.Ssl",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/Ssl.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.convert.CollectionToDelimitedStringConverter",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/CollectionToDelimitedStringConverter.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "beanNameGenerator",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.SpringApplication",
            "pkg": "org.springframework.boot",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields banner (line 146), environment (line 153), initializers (line 161), listeners (line 163), defaultProperties (line 165) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "beanFactory",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzer",
            "pkg": "org.springframework.boot.diagnostics.analyzer",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/NoUniqueBeanDefinitionFailureAnalyzer.java",
            "errors": [
                "dereferenced expression this.beanFactory is @Nullable"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "findConfigurationProperty(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertySourcesPropertySource.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'findConfigurationProperty(name)' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "get(org.springframework.beans.factory.BeanCreationException)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer.BeanInCycle",
            "pkg": "org.springframework.boot.diagnostics.analyzer",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/BeanCurrentlyInCreationFailureAnalyzer.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<K>getOrigin(java.lang.Object,K)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.origin.OriginLookup",
            "pkg": "org.springframework.boot.origin",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/origin/OriginLookup.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'origin' where @NonNull is required",
                "(Covered) passing @Nullable parameter 'origin' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getLoggerConfiguration(ch.qos.logback.classic.Logger)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.logging.logback.LogbackLoggingSystem",
            "pkg": "org.springframework.boot.logging.logback",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/logback/LogbackLoggingSystem.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "Binder(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler)",
            "param": "conversionService",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.properties.bind.Binder",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Binder.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'conversionService' where @NonNull is required",
                "(Covered) initializer method does not guarantee @NonNull field configurationProperty (line 520) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "beanFactory",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/WebServerFactoryCustomizerBeanPostProcessor.java",
            "errors": [
                "dereferenced expression this.beanFactory is @Nullable"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getStartClass(java.util.Enumeration<java.net.URL>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.system.ApplicationHome",
            "pkg": "org.springframework.boot.system",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/system/ApplicationHome.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "logger",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.support.SpringBootServletInitializer",
            "pkg": "org.springframework.boot.web.servlet.support",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/support/SpringBootServletInitializer.java",
            "errors": [
                "dereferenced expression this.logger is @Nullable"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "trustStoreType",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.server.Ssl",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/Ssl.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "resourceLoader",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory",
            "pkg": "org.springframework.boot.web.embedded.tomcat",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactory.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field baseDirectory (line 96) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field baseDirectory (line 96) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field baseDirectory (line 96) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getIdle()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.jdbc.metadata.OracleUcpDataSourcePoolMetadata",
            "pkg": "org.springframework.boot.jdbc.metadata",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/metadata/OracleUcpDataSourcePoolMetadata.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.jdbc.metadata.DataSourcePoolMetadata.getIdle() returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "serverManager",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext",
            "pkg": "org.springframework.boot.web.reactive.context",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/reactive/context/ReactiveWebServerApplicationContext.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field serverNamespace (line 39) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field serverNamespace (line 39) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "ASSIGN_FIELD_NULLABLE",
            "method": "",
            "param": "excludedUserAgents",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.server.Compression",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/Compression.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getLoggingSystem(java.lang.ClassLoader)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem.Factory",
            "pkg": "org.springframework.boot.logging.log4j2",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/log4j2/Log4J2LoggingSystem.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.logging.LoggingSystemFactory.getLoggingSystem(java.lang.ClassLoader) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getDurationUnit(org.springframework.core.convert.TypeDescriptor)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.convert.StringToDurationConverter",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/StringToDurationConverter.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'getDurationUnit(targetType)' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<T>getBoundField(java.util.Map<org.springframework.boot.context.properties.source.ConfigurationPropertyName,T>,java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler.ValidationResult",
            "pkg": "org.springframework.boot.context.properties.bind.validation",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/validation/ValidationBindHandler.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field exception (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field exception (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getActive()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.jdbc.metadata.HikariDataSourcePoolMetadata",
            "pkg": "org.springframework.boot.jdbc.metadata",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/metadata/HikariDataSourcePoolMetadata.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.jdbc.metadata.DataSourcePoolMetadata.getActive() returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "fileSizeThreshold",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.MultipartConfigFactory",
            "pkg": "org.springframework.boot.web.servlet",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/MultipartConfigFactory.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'this.fileSizeThreshold' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "<T>bindOrCreate(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable<T>,org.springframework.boot.context.properties.bind.BindHandler)",
            "param": "handler",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.properties.bind.Binder",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Binder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field configurationProperty (line 520) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "starter",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext",
            "pkg": "org.springframework.boot.web.embedded.tomcat",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatEmbeddedContext.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "resourceFactory",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory",
            "pkg": "org.springframework.boot.web.embedded.netty",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/netty/NettyReactiveWebServerFactory.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields lifecycleTimeout (line 49), shutdown (line 56) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields lifecycleTimeout (line 49), shutdown (line 56) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getStyle(org.springframework.core.convert.TypeDescriptor)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.convert.StringToDurationConverter",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/StringToDurationConverter.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'getStyle(targetType)' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "service",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.jta.atomikos.AtomikosProperties",
            "pkg": "org.springframework.boot.jta.atomikos",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jta/atomikos/AtomikosProperties.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "directory",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.server.SessionStoreDirectory",
            "pkg": "org.springframework.boot.web.servlet.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/server/SessionStoreDirectory.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getLoggingSystem(java.lang.ClassLoader)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.logging.DelegatingLoggingSystemFactory",
            "pkg": "org.springframework.boot.logging",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/DelegatingLoggingSystemFactory.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.logging.LoggingSystemFactory.getLoggingSystem(java.lang.ClassLoader) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "get(org.springframework.core.env.Environment,java.lang.Object)",
            "param": "underlyingSource",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyCaching",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyCaching.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'underlyingSource' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "filter",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.FilterRegistrationBean",
            "pkg": "org.springframework.boot.web.servlet",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/FilterRegistrationBean.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "keyStorePassword",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.server.Ssl",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/Ssl.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "transactionManagerUniqueName",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.jta.atomikos.AtomikosProperties",
            "pkg": "org.springframework.boot.jta.atomikos",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jta/atomikos/AtomikosProperties.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "logger(java.lang.String,ch.qos.logback.classic.Level,boolean,ch.qos.logback.core.Appender<ch.qos.logback.classic.spi.ILoggingEvent>)",
            "param": "appender",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.logging.logback.LogbackConfigurator",
            "pkg": "org.springframework.boot.logging.logback",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/logback/LogbackConfigurator.java",
            "errors": [
                "(Covered) parameter appender is @NonNull, but parameter in superclass method org.springframework.boot.logging.logback.LogbackConfigurator.logger(java.lang.String,ch.qos.logback.classic.Level,boolean,ch.qos.logback.core.Appender<ch.qos.logback.classic.spi.ILoggingEvent>) is @Nullable"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "extractEnvironmentPropertySources()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.PropertySourcesDeducer",
            "pkg": "org.springframework.boot.context.properties",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/PropertySourcesDeducer.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "analyze(java.lang.Throwable,org.springframework.boot.context.properties.bind.BindException)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer",
            "pkg": "org.springframework.boot.diagnostics.analyzer",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/BindFailureAnalyzer.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.diagnostics.AbstractFailureAnalyzer.analyze(java.lang.Throwable,T) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getTextBanner(org.springframework.core.env.Environment)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.SpringApplicationBannerPrinter",
            "pkg": "org.springframework.boot",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplicationBannerPrinter.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'getTextBanner(environment)' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getBindConstructor(java.lang.Class<?>,boolean)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.ConfigurationPropertiesBindConstructorProvider",
            "pkg": "org.springframework.boot.context.properties",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindConstructorProvider.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "multipartConfig",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.ServletRegistrationBean",
            "pkg": "org.springframework.boot.web.servlet",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletRegistrationBean.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field servlet (line 39) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "binder",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder",
            "pkg": "org.springframework.boot.context.properties",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBinder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field jsr303Validator (line 71) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getPeriodUnit(org.springframework.core.convert.TypeDescriptor)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.convert.StringToPeriodConverter",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/StringToPeriodConverter.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'getPeriodUnit(targetType)' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getDurationStyle(org.springframework.core.convert.TypeDescriptor)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.convert.DurationToStringConverter",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/DurationToStringConverter.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'getDurationStyle(sourceType)' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "keyStore",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.server.Ssl",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/Ssl.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getActive(org.springframework.core.env.Environment)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.cloud.CloudPlatform",
            "pkg": "org.springframework.boot.cloud",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/cloud/CloudPlatform.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getOrigin(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.env.OriginTrackedMapPropertySource",
            "pkg": "org.springframework.boot.env",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/env/OriginTrackedMapPropertySource.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.origin.OriginLookup.getOrigin(K) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "findFieldErrorOrigin(org.springframework.boot.context.properties.source.ConfigurationPropertyName,java.util.Set<org.springframework.boot.context.properties.source.ConfigurationProperty>,org.springframework.validation.FieldError)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.validation.ValidationErrors",
            "pkg": "org.springframework.boot.context.properties.bind.validation",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/validation/ValidationErrors.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'findFieldErrorOrigin(name, boundProperties, error)' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "analyze(java.lang.Throwable,java.util.List<org.springframework.boot.diagnostics.FailureAnalyzer>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.diagnostics.FailureAnalyzers",
            "pkg": "org.springframework.boot.diagnostics",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/FailureAnalyzers.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'analysis' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "analyze(java.lang.Throwable,javax.validation.ValidationException)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer",
            "pkg": "org.springframework.boot.diagnostics.analyzer",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/ValidationExceptionFailureAnalyzer.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.diagnostics.AbstractFailureAnalyzer.analyze(java.lang.Throwable,T) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "persistenceUnit",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder.Builder",
            "pkg": "org.springframework.boot.orm.jpa",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/orm/jpa/EntityManagerFactoryBuilder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field bootstrapExecutor (line 48) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields packagesToScan (line 103), mappingResources (line 110) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "maxRequestSize",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.MultipartConfigFactory",
            "pkg": "org.springframework.boot.web.servlet",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/MultipartConfigFactory.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'this.maxRequestSize' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "fragmentSize",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.rsocket.netty.NettyRSocketServerFactory",
            "pkg": "org.springframework.boot.rsocket.netty",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/rsocket/netty/NettyRSocketServerFactory.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'this.fragmentSize' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getType()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.jdbc.DataSourceBuilder.OracleDataSourceSettings",
            "pkg": "org.springframework.boot.jdbc",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/DataSourceBuilder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field type (line 42) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.jdbc.DataSourceBuilder.DataSourceSettings.getType() returns @NonNull",
                "(Covered) initializer method does not guarantee @NonNull field preferredDataSourceSettings (line 172) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "sslStoreProvider",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.rsocket.netty.NettyRSocketServerFactory",
            "pkg": "org.springframework.boot.rsocket.netty",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/rsocket/netty/NettyRSocketServerFactory.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'this.sslStoreProvider' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "Binder(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>)",
            "param": "placeholdersResolver",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.properties.bind.Binder",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Binder.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'placeholdersResolver' where @NonNull is required",
                "(Covered) initializer method does not guarantee @NonNull field configurationProperty (line 520) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "from(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.origin.JarUri",
            "pkg": "org.springframework.boot.origin",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/origin/JarUri.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "createHttpHandler()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.embedded.undertow.UndertowWebServer",
            "pkg": "org.springframework.boot.web.embedded.undertow",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowWebServer.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields undertow (line 62), gracefulShutdown (line 66), closeables (line 68) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "initialize(org.springframework.boot.logging.LoggingInitializationContext,java.lang.String,org.springframework.boot.logging.LogFile)",
            "param": "configLocation",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.logging.LoggingSystem",
            "pkg": "org.springframework.boot.logging",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/LoggingSystem.java",
            "errors": [
                "(Covered) parameter configLocation is @NonNull, but parameter in superclass method org.springframework.boot.logging.LoggingSystem.initialize(org.springframework.boot.logging.LoggingInitializationContext,java.lang.String,org.springframework.boot.logging.LogFile) is @Nullable"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "UndertowWebServer(io.undertow.Undertow.Builder,boolean,java.io.Closeable)",
            "param": "closeable",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.web.embedded.undertow.UndertowWebServer",
            "pkg": "org.springframework.boot.web.embedded.undertow",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowWebServer.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields undertow (line 62), gracefulShutdown (line 66), closeables (line 68) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) passing @Nullable parameter 'closeable' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "lifecycleTimeout",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.rsocket.netty.NettyRSocketServerFactory",
            "pkg": "org.springframework.boot.rsocket.netty",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/rsocket/netty/NettyRSocketServerFactory.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'this.lifecycleTimeout' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "clientAuth",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.server.Ssl",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/Ssl.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "jsr303Validator",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder",
            "pkg": "org.springframework.boot.context.properties",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBinder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field binder (line 74) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<T>getRegisteredInstanceSupplier(java.lang.Class<T>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.DefaultBootstrapContext",
            "pkg": "org.springframework.boot",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/DefaultBootstrapContext.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.BootstrapRegistry.<T>getRegisteredInstanceSupplier(java.lang.Class<T>) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.convert.StringToDurationConverter",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/StringToDurationConverter.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "message",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.support.ErrorPageFilter.ErrorWrapperResponse",
            "pkg": "org.springframework.boot.web.servlet.support",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/support/ErrorPageFilter.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "create(org.springframework.boot.context.properties.bind.Bindable<?>,org.springframework.boot.context.properties.bind.Binder.Context)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.Binder",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Binder.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'result' where @NonNull is required",
                "(Covered) initializer method does not guarantee @NonNull field configurationProperty (line 521) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "SpringApplication(org.springframework.core.io.ResourceLoader,java.lang.Class<?>...)",
            "param": "resourceLoader",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.SpringApplication",
            "pkg": "org.springframework.boot",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields banner (line 146), resourceLoader (line 148), beanNameGenerator (line 150), environment (line 152), initializers (line 160), listeners (line 162), defaultProperties (line 164) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "maxAge",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.server.Session.Cookie",
            "pkg": "org.springframework.boot.web.servlet.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/server/Session.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "analyze(java.lang.Throwable,org.springframework.boot.context.properties.source.InvalidConfigurationPropertyValueException)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer",
            "pkg": "org.springframework.boot.diagnostics.analyzer",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/InvalidConfigurationPropertyValueFailureAnalyzer.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.diagnostics.AbstractFailureAnalyzer.analyze(java.lang.Throwable,T) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "applicationContext",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder.Factory",
            "pkg": "org.springframework.boot.context.properties",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBinder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields jsr303Validator (line 71), binder (line 73) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) passing @Nullable parameter 'this.applicationContext' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "enabledProtocols",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.server.Ssl",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/Ssl.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getConfigurationProperty(org.springframework.boot.context.properties.source.ConfigurationPropertyName)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.source.FilteredConfigurationPropertiesSource",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/FilteredConfigurationPropertiesSource.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.context.properties.source.ConfigurationPropertySource.getConfigurationProperty(org.springframework.boot.context.properties.source.ConfigurationPropertyName) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "deduceMainApplicationClass()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.SpringApplication",
            "pkg": "org.springframework.boot",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields mainApplicationClass (line 136), banner (line 146), beanNameGenerator (line 150), environment (line 152), initializers (line 160), listeners (line 162), defaultProperties (line 164) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "Binder(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>)",
            "param": "conversionService",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.properties.bind.Binder",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Binder.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'conversionService' where @NonNull is required",
                "(Covered) initializer method does not guarantee @NonNull field configurationProperty (line 520) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getLoggerConfiguration(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem",
            "pkg": "org.springframework.boot.logging.log4j2",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/log4j2/Log4J2LoggingSystem.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.logging.LoggingSystem.getLoggerConfiguration(java.lang.String) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getArchiveFileDocumentRoot(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.servlet.server.DocumentRoot",
            "pkg": "org.springframework.boot.web.servlet.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/server/DocumentRoot.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field directory (line 37) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getMultipartConfig(org.springframework.beans.factory.ListableBeanFactory)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.servlet.ServletContextInitializerBeans",
            "pkg": "org.springframework.boot.web.servlet",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletContextInitializerBeans.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'multipartConfig' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "beanFactory",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/ErrorPageRegistrarBeanPostProcessor.java",
            "errors": [
                "dereferenced expression this.beanFactory is @Nullable"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getPeriodUnit(org.springframework.core.convert.TypeDescriptor)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.convert.PeriodToStringConverter",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/PeriodToStringConverter.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'getPeriodUnit(sourceType)' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<T>getNewInstanceIfPossible(org.springframework.boot.context.properties.bind.Binder.Context,org.springframework.core.ResolvableType)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.ValueObjectBinder",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/ValueObjectBinder.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getUsage()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.jdbc.metadata.AbstractDataSourcePoolMetadata",
            "pkg": "org.springframework.boot.jdbc.metadata",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/metadata/AbstractDataSourcePoolMetadata.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.jdbc.metadata.DataSourcePoolMetadata.getUsage() returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "sendError(int,java.lang.String)",
            "param": "message",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.web.servlet.support.ErrorPageFilter.ErrorWrapperResponse",
            "pkg": "org.springframework.boot.web.servlet.support",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/support/ErrorPageFilter.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field message (line 304) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "keyPassword",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.server.Ssl",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/Ssl.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "bindAggregate(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable<?>,org.springframework.boot.context.properties.bind.AggregateElementBinder)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.MapBinder",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/MapBinder.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.context.properties.bind.AggregateBinder.bindAggregate(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable<?>,org.springframework.boot.context.properties.bind.AggregateElementBinder) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "expand(java.lang.CharSequence[])",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyName.ElementsParser",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field string (line 43) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field resolved (line 811) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "baseDirectory",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory",
            "pkg": "org.springframework.boot.web.embedded.tomcat",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatServletWebServerFactory.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 113) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 113) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 113) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "resourceLoader",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory",
            "pkg": "org.springframework.boot.web.embedded.jetty",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/jetty/JettyServletWebServerFactory.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field threadPool (line 99) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field threadPool (line 99) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field threadPool (line 99) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "detectAndParse(java.lang.String,java.time.temporal.ChronoUnit)",
            "param": "unit",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.convert.DurationStyle",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/DurationStyle.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'unit' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getLoggingSystem(java.lang.ClassLoader)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.logging.logback.LogbackLoggingSystem.Factory",
            "pkg": "org.springframework.boot.logging.logback",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/logback/LogbackLoggingSystem.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.logging.LoggingSystemFactory.getLoggingSystem(java.lang.ClassLoader) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<T>bindObject(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable<T>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder.Context,boolean)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.Binder",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Binder.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'bound' where @NonNull is required",
                "(Covered) initializer method does not guarantee @NonNull field configurationProperty (line 521) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "handleCommittedResponse(javax.servlet.http.HttpServletRequest,java.lang.Throwable)",
            "param": "ex",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.web.servlet.support.ErrorPageFilter",
            "pkg": "org.springframework.boot.web.servlet.support",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/support/ErrorPageFilter.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'ex' where @NonNull is required",
                "(Covered) initializer method does not guarantee @NonNull field message (line 304) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getWebServer()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext",
            "pkg": "org.springframework.boot.web.reactive.context",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/reactive/context/ReactiveWebServerApplicationContext.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields serverManager (line 36), serverNamespace (line 38) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields serverManager (line 36), serverNamespace (line 38) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.web.context.WebServerApplicationContext.getWebServer() returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getLoggerConfiguration(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.logging.LoggingSystem.NoOpLoggingSystem",
            "pkg": "org.springframework.boot.logging",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/LoggingSystem.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.logging.LoggingSystem.getLoggerConfiguration(java.lang.String) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "registry",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
            "pkg": "org.springframework.boot.context.properties",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java",
            "errors": [
                "dereferenced expression this.registry is @Nullable"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "analyze(java.lang.Throwable)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.diagnostics.AbstractFailureAnalyzer",
            "pkg": "org.springframework.boot.diagnostics",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/AbstractFailureAnalyzer.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.diagnostics.FailureAnalyzer.analyze(java.lang.Throwable) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "domain",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.server.Session.Cookie",
            "pkg": "org.springframework.boot.web.servlet.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/server/Session.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "findClosest(org.springframework.boot.ansi.AnsiColors.LabColor)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.ansi.AnsiColors",
            "pkg": "org.springframework.boot.ansi",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/ansi/AnsiColors.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "beanName",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.jta.bitronix.PoolingConnectionFactoryBean",
            "pkg": "org.springframework.boot.jta.bitronix",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jta/bitronix/PoolingConnectionFactoryBean.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field connectionFactory (line 49) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "trackingModes",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.server.Session",
            "pkg": "org.springframework.boot.web.servlet.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/server/Session.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getOrigin(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor.OriginAwareSystemEnvironmentPropertySource",
            "pkg": "org.springframework.boot.env",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/env/SystemEnvironmentPropertySourceEnvironmentPostProcessor.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.origin.OriginLookup.getOrigin(K) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getValue(org.springframework.boot.context.event.SpringApplicationEvent)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.ApplicationPidFileWriter.SpringProperty",
            "pkg": "org.springframework.boot.context",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/ApplicationPidFileWriter.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.context.ApplicationPidFileWriter.Property.getValue(org.springframework.boot.context.event.SpringApplicationEvent) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "mappingResources",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder.Builder",
            "pkg": "org.springframework.boot.orm.jpa",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/orm/jpa/EntityManagerFactoryBuilder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field bootstrapExecutor (line 48) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields packagesToScan (line 103), persistenceUnit (line 105) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getDefaultAutoCommit()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.jdbc.metadata.OracleUcpDataSourcePoolMetadata",
            "pkg": "org.springframework.boot.jdbc.metadata",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/metadata/OracleUcpDataSourcePoolMetadata.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.jdbc.metadata.DataSourcePoolMetadata.getDefaultAutoCommit() returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getWarning(org.springframework.beans.factory.support.BeanDefinitionRegistry)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer.ComponentScanPackageCheck",
            "pkg": "org.springframework.boot.context",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/ConfigurationWarningsApplicationContextInitializer.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer.Check.getWarning(org.springframework.beans.factory.support.BeanDefinitionRegistry) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<T>create(org.springframework.boot.context.properties.bind.Bindable<T>,org.springframework.boot.context.properties.bind.Binder.Context)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.ValueObjectBinder",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/ValueObjectBinder.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.context.properties.bind.DataObjectBinder.<T>create(org.springframework.boot.context.properties.bind.Bindable<T>,org.springframework.boot.context.properties.bind.Binder.Context) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "binder",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
            "pkg": "org.springframework.boot.context.properties",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.java",
            "errors": [
                "dereferenced expression this.binder is @Nullable"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "DatabaseDriver(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "param": "xaDataSourceClassName",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.jdbc.DatabaseDriver",
            "pkg": "org.springframework.boot.jdbc",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/DatabaseDriver.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field xaDataSourceClassName (line 210) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "setSystemProperty(org.springframework.core.env.PropertyResolver,java.lang.String,java.lang.String,java.lang.String)",
            "param": "defaultValue",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.logging.LoggingSystemProperties",
            "pkg": "org.springframework.boot.logging",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/LoggingSystemProperties.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "analyze(java.lang.Throwable,java.lang.Throwable)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer",
            "pkg": "org.springframework.boot.diagnostics.analyzer",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/BindValidationFailureAnalyzer.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.diagnostics.AbstractFailureAnalyzer.analyze(java.lang.Throwable,T) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "findFactoryMethod(org.springframework.context.ApplicationContext,java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.ConfigurationPropertiesBean",
            "pkg": "org.springframework.boot.context.properties",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBean.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'factoryMethod' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "DataSourceBuilder(java.lang.ClassLoader)",
            "param": "classLoader",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.jdbc.DataSourceBuilder",
            "pkg": "org.springframework.boot.jdbc",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/DataSourceBuilder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field type (line 42) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) passing @Nullable parameter 'classLoader' where @NonNull is required",
                "(Covered) initializer method does not guarantee @NonNull field preferredDataSourceSettings (line 172) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "ConfigDataLocationNotFoundException(org.springframework.boot.context.config.ConfigDataLocation,java.lang.Throwable)",
            "param": "cause",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.config.ConfigDataLocationNotFoundException",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigDataLocationNotFoundException.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'cause' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "get(java.lang.String...)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.system.SystemProperties",
            "pkg": "org.springframework.boot.system",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/system/SystemProperties.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "parent",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.builder.SpringApplicationBuilder",
            "pkg": "org.springframework.boot.builder",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/builder/SpringApplicationBuilder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields context (line 54), environment (line 65) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getStyle(org.springframework.core.convert.TypeDescriptor)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.convert.StringToPeriodConverter",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/StringToPeriodConverter.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'getStyle(targetType)' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "adapt(java.lang.CharSequence,char,java.util.function.Function<java.lang.CharSequence,java.lang.CharSequence>)",
            "param": "elementValueProcessor",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyName",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field string (line 43) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) passing @Nullable parameter 'elementValueProcessor' where @NonNull is required",
                "(Covered) initializer method does not guarantee @NonNull field resolved (line 811) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "accessLogSuffix",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate",
            "pkg": "org.springframework.boot.web.embedded.undertow",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowWebServerFactoryDelegate.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'this.accessLogSuffix' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "ApplicationTemp(java.lang.Class<?>)",
            "param": "sourceClass",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.system.ApplicationTemp",
            "pkg": "org.springframework.boot.system",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/system/ApplicationTemp.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields sourceClass (line 31), dir (line 33) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "SslServerCustomizer(org.springframework.boot.web.server.Ssl,org.springframework.boot.web.server.Http2,org.springframework.boot.web.server.SslStoreProvider)",
            "param": "http2",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.web.embedded.netty.SslServerCustomizer",
            "pkg": "org.springframework.boot.web.embedded.netty",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/netty/SslServerCustomizer.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field http2 (line 57) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "listener",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.ServletListenerRegistrationBean",
            "pkg": "org.springframework.boot.web.servlet",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletListenerRegistrationBean.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "printBanner(org.springframework.core.env.ConfigurableEnvironment)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.SpringApplication",
            "pkg": "org.springframework.boot",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields banner (line 146), beanNameGenerator (line 150), environment (line 152), initializers (line 160), listeners (line 162), defaultProperties (line 164) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) passing @Nullable parameter 'printedBanner' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.convert.StringToDataSizeConverter",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/StringToDataSizeConverter.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "lastMappedConfigurationPropertyName",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.source.DefaultPropertyMapper",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/DefaultPropertyMapper.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field lastMappedPropertyName (line 33) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "analyze(java.lang.Throwable,org.springframework.beans.factory.BeanNotOfRequiredTypeException)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer",
            "pkg": "org.springframework.boot.diagnostics.analyzer",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/BeanNotOfRequiredTypeFailureAnalyzer.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.diagnostics.AbstractFailureAnalyzer.analyze(java.lang.Throwable,T) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "resourceLoader",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.BeanDefinitionLoader",
            "pkg": "org.springframework.boot",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/BeanDefinitionLoader.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields xmlReader (line 61), groovyReader (line 63) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "compare(java.lang.String,org.springframework.boot.context.properties.source.ConfigurationPropertyName.ElementType,java.lang.String,org.springframework.boot.context.properties.source.ConfigurationPropertyName.ElementType)",
            "param": "e1",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyName",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field string (line 43) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) passing @Nullable parameter 'type1' where @NonNull is required",
                "(Covered) initializer method does not guarantee @NonNull field resolved (line 811) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "secure",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.server.Session.Cookie",
            "pkg": "org.springframework.boot.web.servlet.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/server/Session.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "onFailure(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable<?>,org.springframework.boot.context.properties.bind.BindContext,java.lang.Exception)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.handler.IgnoreErrorsBindHandler",
            "pkg": "org.springframework.boot.context.properties.bind.handler",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/handler/IgnoreErrorsBindHandler.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.context.properties.bind.AbstractBindHandler.onFailure(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable<?>,org.springframework.boot.context.properties.bind.BindContext,java.lang.Exception) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "applicationContext",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean",
            "pkg": "org.springframework.boot.web.servlet",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/DelegatingFilterProxyRegistrationBean.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "compiler",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.view.MustacheView",
            "pkg": "org.springframework.boot.web.servlet.view",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/view/MustacheView.java",
            "errors": [
                "dereferenced expression this.compiler is @Nullable"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "loadTrustStore(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.embedded.netty.SslServerCustomizer",
            "pkg": "org.springframework.boot.web.embedded.netty",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/netty/SslServerCustomizer.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "basicAuthentication(java.lang.String,java.lang.String,java.nio.charset.Charset)",
            "param": "charset",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.web.client.RestTemplateBuilder",
            "pkg": "org.springframework.boot.web.client",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/client/RestTemplateBuilder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields rootUri (line 61), messageConverters (line 63), requestFactory (line 67), uriTemplateHandler (line 69), errorHandler (line 71), basicAuthentication (line 73) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) passing @Nullable parameter 'charset' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getOptionValues(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.DefaultApplicationArguments",
            "pkg": "org.springframework.boot",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/DefaultApplicationArguments.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.ApplicationArguments.getOptionValues(java.lang.String) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "onFailure(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable<?>,org.springframework.boot.context.properties.bind.BindContext,java.lang.Exception)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.handler.IgnoreTopLevelConverterNotFoundBindHandler",
            "pkg": "org.springframework.boot.context.properties.bind.handler",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/handler/IgnoreTopLevelConverterNotFoundBindHandler.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.context.properties.bind.AbstractBindHandler.onFailure(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable<?>,org.springframework.boot.context.properties.bind.BindContext,java.lang.Exception) returns @NonNull"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "trustStore",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.server.Ssl",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/Ssl.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "environment",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.SpringApplication",
            "pkg": "org.springframework.boot",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields banner (line 146), beanNameGenerator (line 150), initializers (line 161), listeners (line 163), defaultProperties (line 165) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.convert.StringToPeriodConverter",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/StringToPeriodConverter.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "beanName",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.jta.bitronix.PoolingDataSourceBean",
            "pkg": "org.springframework.boot.jta.bitronix",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jta/bitronix/PoolingDataSourceBean.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field dataSource (line 46) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "get(org.springframework.boot.BootstrapContext)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.BootstrapRegistry.InstanceSupplier",
            "pkg": "org.springframework.boot",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/BootstrapRegistry.java",
            "errors": [],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "apply(org.springframework.boot.logging.LogFile)",
            "param": "logFile",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.logging.LoggingSystemProperties",
            "pkg": "org.springframework.boot.logging",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/LoggingSystemProperties.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'logFile' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "detectAndParse(java.lang.String,java.time.temporal.ChronoUnit)",
            "param": "unit",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.convert.PeriodStyle",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/PeriodStyle.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'unit' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "getNoSuchMethodDescriptor(java.lang.String)",
            "param": "cause",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer",
            "pkg": "org.springframework.boot.diagnostics.analyzer",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/NoSuchMethodFailureAnalyzer.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'cause' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getDurationUnit(org.springframework.core.convert.TypeDescriptor)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.convert.DurationToStringConverter",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/DurationToStringConverter.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'getDurationUnit(sourceType)' where @NonNull is required"
            ],
            "jump": 0
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getMessage(org.springframework.boot.context.properties.bind.BindException)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer",
            "pkg": "org.springframework.boot.diagnostics.analyzer",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/BindFailureAnalyzer.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "flatten(java.lang.String,java.util.Map<java.lang.String,java.lang.Object>,java.util.Map<java.lang.String,java.lang.Object>)",
            "param": "prefix",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
            "pkg": "org.springframework.boot.env",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/env/SpringApplicationJsonEnvironmentPostProcessor.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "UndertowServletWebServer(io.undertow.Undertow.Builder,io.undertow.servlet.api.DeploymentManager,java.lang.String,boolean,boolean,org.springframework.boot.web.server.Compression,java.lang.String)",
            "param": "serverHeader",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.web.embedded.undertow.UndertowServletWebServer",
            "pkg": "org.springframework.boot.web.embedded.undertow",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowServletWebServer.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'serverHeader' where @NonNull is required"
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getConfiguration(org.apache.logging.log4j.core.LoggerContext,org.apache.logging.log4j.core.config.ConfigurationSource)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.logging.log4j2.SpringBootConfigurationFactory",
            "pkg": "org.springframework.boot.logging.log4j2",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/log4j2/SpringBootConfigurationFactory.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "resolveResource()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.reactive.result.view.MustacheView",
            "pkg": "org.springframework.boot.web.reactive.result.view",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/reactive/result/view/MustacheView.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "directBuffers",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate",
            "pkg": "org.springframework.boot.web.embedded.undertow",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowWebServerFactoryDelegate.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getProperty(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.env.RandomValuePropertySource",
            "pkg": "org.springframework.boot.env",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/env/RandomValuePropertySource.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "get(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,java.lang.Object)",
            "param": "underlyingSource",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyCaching",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyCaching.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "charset",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.view.MustacheView",
            "pkg": "org.springframework.boot.web.servlet.view",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/view/MustacheView.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "context",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.security.reactive.ApplicationContextServerWebExchangeMatcher",
            "pkg": "org.springframework.boot.security.reactive",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/security/reactive/ApplicationContextServerWebExchangeMatcher.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "bootstrapExecutor",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder",
            "pkg": "org.springframework.boot.orm.jpa",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/orm/jpa/EntityManagerFactoryBuilder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields packagesToScan (line 104), persistenceUnit (line 106), mappingResources (line 110) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "delegates",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.TypeExcludeFilter",
            "pkg": "org.springframework.boot.context",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/TypeExcludeFilter.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "asUniqueItemList(java.lang.String[],java.util.Collection<java.lang.String>)",
            "param": "additional",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.config.Profiles",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/Profiles.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "ConfigDataResourceNotFoundException(org.springframework.boot.context.config.ConfigDataResource,java.lang.Throwable)",
            "param": "cause",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.config.ConfigDataResourceNotFoundException",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigDataResourceNotFoundException.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "name",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.DynamicRegistrationBean",
            "pkg": "org.springframework.boot.web.servlet",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/DynamicRegistrationBean.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "doWithListeners(java.lang.String,java.util.function.Consumer<org.springframework.boot.SpringApplicationRunListener>,java.util.function.Consumer<org.springframework.core.metrics.StartupStep>)",
            "param": "stepAction",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.SpringApplicationRunListeners",
            "pkg": "org.springframework.boot",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplicationRunListeners.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getLoadableFileExtension(org.springframework.boot.env.PropertySourceLoader,java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/StandardConfigDataLocationResolver.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getValue()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/SoftReferenceConfigurationPropertyCache.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field timeToLive (line 33) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getPropertyEditorInitializer()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder",
            "pkg": "org.springframework.boot.context.properties",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBinder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields jsr303Validator (line 71), binder (line 73) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) passing @Nullable parameter 'getPropertyEditorInitializer()' where @NonNull is required"
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getAnnotations()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.JavaBeanBinder.BeanProperty",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/JavaBeanBinder.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'annotations' where @NonNull is required",
                "(Covered) initializer method does not guarantee @NonNull field instance (line 244) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields getter (line 269), setter (line 271), field (line 273) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getAggregateBinder(org.springframework.boot.context.properties.bind.Bindable<?>,org.springframework.boot.context.properties.bind.Binder.Context)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.Binder",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Binder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field configurationProperty (line 521) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "ASSIGN_FIELD_NULLABLE",
            "method": "",
            "param": "lastAccessed",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/SoftReferenceConfigurationPropertyCache.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field timeToLive (line 33) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<S>safeUnwrap(java.sql.Wrapper,java.lang.Class<S>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.jdbc.DataSourceUnwrapper",
            "pkg": "org.springframework.boot.jdbc",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/DataSourceUnwrapper.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "findType(java.lang.ClassLoader)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.jdbc.DataSourceBuilder",
            "pkg": "org.springframework.boot.jdbc",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/DataSourceBuilder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field type (line 42) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field preferredDataSourceSettings (line 173) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "addPath(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory.LoaderHidingResource",
            "pkg": "org.springframework.boot.web.embedded.jetty",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/jetty/JettyServletWebServerFactory.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields resourceLoader (line 96), threadPool (line 98) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields resourceLoader (line 96), threadPool (line 98) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields resourceLoader (line 96), threadPool (line 98) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getExistingRootWebApplicationContext(javax.servlet.ServletContext)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.servlet.support.SpringBootServletInitializer",
            "pkg": "org.springframework.boot.web.servlet.support",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/support/SpringBootServletInitializer.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<A>findAnnotation(java.lang.Object,java.lang.Class<?>,java.lang.reflect.Method,java.lang.Class<A>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.ConfigurationPropertiesBean",
            "pkg": "org.springframework.boot.context.properties",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBean.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "context",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
            "pkg": "org.springframework.boot.builder",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/builder/ParentContextCloserApplicationListener.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "findCandidates(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer",
            "pkg": "org.springframework.boot.diagnostics.analyzer",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/NoSuchMethodFailureAnalyzer.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "binder",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.config.ConfigDataEnvironmentContributors.ContributorConfigDataLocationResolverContext",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigDataEnvironmentContributors.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "determineSpringBootVersion()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.SpringBootVersion",
            "pkg": "org.springframework.boot",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringBootVersion.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "ioThreads",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate",
            "pkg": "org.springframework.boot.web.embedded.undertow",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowWebServerFactoryDelegate.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "forceRequest",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.server.Encoding",
            "pkg": "org.springframework.boot.web.servlet.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/server/Encoding.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "multicaster",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.config.DelegatingApplicationListener",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/DelegatingApplicationListener.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getArgs(java.lang.Class<?>[])",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.util.Instantiator",
            "pkg": "org.springframework.boot.util",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/util/Instantiator.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "determineName(java.util.Map<java.lang.String,java.lang.Object>,org.springframework.beans.factory.config.BeanDefinition)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.servlet.WebServletHandler",
            "pkg": "org.springframework.boot.web.servlet",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/WebServletHandler.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "Binder(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)",
            "param": "defaultBindHandler",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.properties.bind.Binder",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Binder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field configurationProperty (line 520) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "resolveException(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.servlet.error.DefaultErrorAttributes",
            "pkg": "org.springframework.boot.web.servlet.error",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/error/DefaultErrorAttributes.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field includeException (line 52) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "extractBindingResult(java.lang.Throwable)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.servlet.error.DefaultErrorAttributes",
            "pkg": "org.springframework.boot.web.servlet.error",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/error/DefaultErrorAttributes.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field includeException (line 52) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "ConfigDataEnvironmentContributor(org.springframework.boot.context.config.ConfigDataEnvironmentContributor.Kind,org.springframework.boot.context.config.ConfigDataResource,org.springframework.core.env.PropertySource<?>,org.springframework.boot.context.properties.source.ConfigurationPropertySource,org.springframework.boot.context.config.ConfigDataProperties,boolean,java.util.Map<org.springframework.boot.context.config.ConfigDataEnvironmentContributor.ImportPhase,java.util.List<org.springframework.boot.context.config.ConfigDataEnvironmentContributor>>)",
            "param": "children",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.config.ConfigDataEnvironmentContributor",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigDataEnvironmentContributor.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field next (line 350) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getSpringBootExceptionHandler()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.SpringApplication",
            "pkg": "org.springframework.boot",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields banner (line 146), beanNameGenerator (line 150), environment (line 152), initializers (line 160), listeners (line 162), defaultProperties (line 164) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "createURLStreamHandler(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.embedded.jetty.JasperInitializer.WarUrlStreamHandlerFactory",
            "pkg": "org.springframework.boot.web.embedded.jetty",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/jetty/JasperInitializer.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "remove(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.server.MimeMappings",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/MimeMappings.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "charset",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.reactive.result.view.MustacheViewResolver",
            "pkg": "org.springframework.boot.web.reactive.result.view",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/reactive/result/view/MustacheViewResolver.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'this.charset' where @NonNull is required"
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getApplicationTitle(java.lang.Class<?>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.ResourceBanner",
            "pkg": "org.springframework.boot",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/ResourceBanner.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "configurationPropertyNames",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource.Mappings",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field configurationPropertyNames (line 51) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields mappings (line 187), reverseMappings (line 189), descendants (line 191), lastUpdated (line 196) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "asReversedList(java.util.List<java.lang.String>)",
            "param": "list",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.config.Profiles",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/Profiles.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "buildRequestFactory()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.client.RestTemplateBuilder",
            "pkg": "org.springframework.boot.web.client",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/client/RestTemplateBuilder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields rootUri (line 61), messageConverters (line 63), requestFactory (line 67), uriTemplateHandler (line 69), errorHandler (line 71), basicAuthentication (line 73) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getResource(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.embedded.undertow.CompositeResourceManager",
            "pkg": "org.springframework.boot.web.embedded.undertow",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/CompositeResourceManager.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getConfigurationProperty(org.springframework.boot.context.properties.source.ConfigurationPropertyName)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.source.SpringConfigurationPropertySource",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/SpringConfigurationPropertySource.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.context.properties.source.ConfigurationPropertySource.getConfigurationProperty(org.springframework.boot.context.properties.source.ConfigurationPropertyName) returns @NonNull"
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "beanName",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.jta.atomikos.AtomikosConnectionFactoryBean",
            "pkg": "org.springframework.boot.jta.atomikos",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jta/atomikos/AtomikosConnectionFactoryBean.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "fetchNext()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources.SourcesIterator",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/SpringConfigurationPropertySources.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field next (line 70) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "charset",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.reactive.result.view.MustacheView",
            "pkg": "org.springframework.boot.web.reactive.result.view",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/reactive/result/view/MustacheView.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "of(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.origin.OriginTrackedValue)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.source.ConfigurationProperty",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationProperty.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "configurationProperty",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.bind.Binder.Context",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Binder.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<D>nullSafeValue(com.fasterxml.jackson.databind.JsonNode,java.lang.Class<D>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.jackson.JsonObjectDeserializer",
            "pkg": "org.springframework.boot.jackson",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jackson/JsonObjectDeserializer.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "convert(T)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.convert.LenientObjectToEnumConverterFactory.LenientToEnumConverter",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/LenientObjectToEnumConverterFactory.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "environment",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer",
            "pkg": "org.springframework.boot.diagnostics.analyzer",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/InvalidConfigurationPropertyValueFailureAnalyzer.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "loggerGroups",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.logging.LoggingApplicationListener",
            "pkg": "org.springframework.boot.context.logging",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/logging/LoggingApplicationListener.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "lastUpdated",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource.Mappings",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field configurationPropertyNames (line 51) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields mappings (line 187), reverseMappings (line 189), descendants (line 191), configurationPropertyNames (line 193) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "getBinder(org.springframework.boot.context.config.ConfigDataActivationContext,org.springframework.boot.context.config.ConfigDataEnvironmentContributors.BinderOption...)",
            "param": "activationContext",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.config.ConfigDataEnvironmentContributors",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigDataEnvironmentContributors.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'activationContext' where @NonNull is required",
                "(Covered) initializer method does not guarantee @NonNull field binder (line 236) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<T>get(org.springframework.boot.context.properties.bind.Bindable<T>,boolean)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.JavaBeanBinder.Bean",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/JavaBeanBinder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field instance (line 244) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields getter (line 269), setter (line 271), field (line 273) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "createAnalyzer(org.springframework.context.ConfigurableApplicationContext,java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.diagnostics.FailureAnalyzers",
            "pkg": "org.springframework.boot.diagnostics",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/FailureAnalyzers.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "Binder(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.BindConstructorProvider)",
            "param": "constructorProvider",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.properties.bind.Binder",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Binder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field configurationProperty (line 520) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "sharedInstance",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.bind.BindConverter",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/BindConverter.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "get()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.PropertyMapper.NullPointerExceptionSafeSupplier",
            "pkg": "org.springframework.boot.context.properties",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/PropertyMapper.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field result (line 123) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "get(org.springframework.boot.context.properties.source.ConfigurationPropertyName)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.BoundConfigurationProperties",
            "pkg": "org.springframework.boot.context.properties",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/BoundConfigurationProperties.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "logFile",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.logging.LoggingApplicationListener",
            "pkg": "org.springframework.boot.context.logging",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/logging/LoggingApplicationListener.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getFallback()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.validation.MessageInterpolatorFactory",
            "pkg": "org.springframework.boot.validation",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/validation/MessageInterpolatorFactory.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getExistingIfPossible(java.util.function.Supplier<java.util.Map<java.lang.Object,java.lang.Object>>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.MapBinder",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/MapBinder.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<T>bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable<T>,org.springframework.boot.context.properties.bind.Binder.Context,org.springframework.boot.context.properties.bind.DataObjectPropertyBinder)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.JavaBeanBinder",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/JavaBeanBinder.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.context.properties.bind.DataObjectBinder.<T>bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable<T>,org.springframework.boot.context.properties.bind.Binder.Context,org.springframework.boot.context.properties.bind.DataObjectPropertyBinder) returns @NonNull",
                "(Covered) initializer method does not guarantee @NonNull field instance (line 244) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields getter (line 269), setter (line 271), field (line 273) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getProperty(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.env.ConfigTreePropertySource",
            "pkg": "org.springframework.boot.env",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/env/ConfigTreePropertySource.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field cachedContent (line 157) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field content (line 244) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "bufferSize",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate",
            "pkg": "org.springframework.boot.web.embedded.undertow",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowWebServerFactoryDelegate.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "createHttpHandlerFactories(org.springframework.boot.web.server.Compression,boolean,java.lang.String,org.springframework.boot.web.server.Shutdown,org.springframework.boot.web.embedded.undertow.HttpHandlerFactory...)",
            "param": "shutdown",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate",
            "pkg": "org.springframework.boot.web.embedded.undertow",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowWebServerFactoryDelegate.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getResource(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.embedded.undertow.JarResourceManager",
            "pkg": "org.springframework.boot.web.embedded.undertow",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/JarResourceManager.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "dispatcherTypes",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.AbstractFilterRegistrationBean",
            "pkg": "org.springframework.boot.web.servlet",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/AbstractFilterRegistrationBean.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getAvailableParameter(java.lang.Class<?>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.util.Instantiator",
            "pkg": "org.springframework.boot.util",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/util/Instantiator.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getTypeHierarchy(java.lang.Class<?>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer",
            "pkg": "org.springframework.boot.diagnostics.analyzer",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/NoSuchMethodFailureAnalyzer.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "findFactoryMethodUsingReflection(org.springframework.beans.factory.config.ConfigurableListableBeanFactory,org.springframework.beans.factory.config.BeanDefinition)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.ConfigurationPropertiesBean",
            "pkg": "org.springframework.boot.context.properties",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/ConfigurationPropertiesBean.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getSinglePropertySourcesPlaceholderConfigurer()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.PropertySourcesDeducer",
            "pkg": "org.springframework.boot.context.properties",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/PropertySourcesDeducer.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "<T>append(java.util.Set<T>,java.lang.Iterable<? extends T>)",
            "param": "set",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.task.TaskSchedulerBuilder",
            "pkg": "org.springframework.boot.task",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/task/TaskSchedulerBuilder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields poolSize (line 35), awaitTermination (line 37), awaitTerminationPeriod (line 39), threadNamePrefix (line 41), customizers (line 43) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getNextToProcess(org.springframework.boot.context.config.ConfigDataEnvironmentContributors,org.springframework.boot.context.config.ConfigDataActivationContext,org.springframework.boot.context.config.ConfigDataEnvironmentContributor.ImportPhase)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.config.ConfigDataEnvironmentContributors",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigDataEnvironmentContributors.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field binder (line 237) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getBindValidationExceptionDetails(java.lang.Throwable)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer",
            "pkg": "org.springframework.boot.diagnostics.analyzer",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/BindValidationFailureAnalyzer.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "WebServerException(java.lang.String,java.lang.Throwable)",
            "param": "cause",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.web.server.WebServerException",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/WebServerException.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "toString()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.origin.OriginTrackedValue",
            "pkg": "org.springframework.boot.origin",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/origin/OriginTrackedValue.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "gracefulShutdown",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.embedded.undertow.UndertowWebServer",
            "pkg": "org.springframework.boot.web.embedded.undertow",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowWebServer.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields undertow (line 62), closeables (line 69) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "bindDataObject(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable<?>,org.springframework.boot.context.properties.bind.BindHandler,org.springframework.boot.context.properties.bind.Binder.Context,boolean)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.Binder",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Binder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field configurationProperty (line 521) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "<T>of(T)",
            "param": "value",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.properties.bind.BindResult",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/BindResult.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "supplied",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.bind.AggregateBinder.AggregateSupplier",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/AggregateBinder.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "parseEpochSecond(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.info.GitProperties",
            "pkg": "org.springframework.boot.info",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/info/GitProperties.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "get(java.lang.Throwable)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer.BeanInCycle",
            "pkg": "org.springframework.boot.diagnostics.analyzer",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/BeanCurrentlyInCreationFailureAnalyzer.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "sharedInstance",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.convert.ApplicationConversionService",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/ApplicationConversionService.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "registrars",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/ErrorPageRegistrarBeanPostProcessor.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "get(org.springframework.context.ApplicationContext)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.BoundConfigurationProperties",
            "pkg": "org.springframework.boot.context.properties",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/BoundConfigurationProperties.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getProperty(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.ansi.AnsiPropertySource",
            "pkg": "org.springframework.boot.ansi",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/ansi/AnsiPropertySource.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "ansiCapable",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.ansi.AnsiOutput",
            "pkg": "org.springframework.boot.ansi",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/ansi/AnsiOutput.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getCodeSourceArchive(java.security.CodeSource)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.servlet.server.DocumentRoot",
            "pkg": "org.springframework.boot.web.servlet.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/server/DocumentRoot.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field directory (line 37) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getShortCommitId()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.info.GitProperties",
            "pkg": "org.springframework.boot.info",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/info/GitProperties.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "DatabaseDriver(java.lang.String,java.lang.String,java.lang.String)",
            "param": "xaDataSourceClassName",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.jdbc.DatabaseDriver",
            "pkg": "org.springframework.boot.jdbc",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/DatabaseDriver.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'xaDataSourceClassName' where @NonNull is required"
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "ASSIGN_FIELD_NULLABLE",
            "method": "",
            "param": "phase",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.config.ConfigDataEnvironmentContributor.ContributorIterator",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigDataEnvironmentContributor.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field next (line 351) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "find(org.springframework.boot.context.properties.source.ConfigurationPropertySource)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.source.CachingConfigurationPropertySource",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/CachingConfigurationPropertySource.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "JsonParseException(java.lang.Throwable)",
            "param": "cause",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.json.JsonParseException",
            "pkg": "org.springframework.boot.json",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/json/JsonParseException.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "customizers",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/WebServerFactoryCustomizerBeanPostProcessor.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "analyze(java.lang.Throwable,org.springframework.beans.factory.NoUniqueBeanDefinitionException,java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzer",
            "pkg": "org.springframework.boot.diagnostics.analyzer",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/NoUniqueBeanDefinitionFailureAnalyzer.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.diagnostics.analyzer.AbstractInjectionFailureAnalyzer.analyze(java.lang.Throwable,T,java.lang.String) returns @NonNull"
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "get(org.springframework.core.env.Environment,org.springframework.boot.context.properties.bind.BindHandler)",
            "param": "defaultBindHandler",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.properties.bind.Binder",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Binder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field configurationProperty (line 520) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "configurationPropertyNames",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields mappings (line 188), reverseMappings (line 190), descendants (line 192), configurationPropertyNames (line 194), lastUpdated (line 196) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "addLoadedPropertySource(org.springframework.core.env.MutablePropertySources,java.lang.String,org.springframework.core.env.PropertySource<?>)",
            "param": "lastAdded",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.config.ConfigFileApplicationListener.Loader",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileApplicationListener.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields searchLocations (line 142), names (line 144) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields profiles (line 268), processedProfiles (line 270), loaded (line 274) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "convertSystemToNative(org.springframework.boot.logging.LogLevel)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.logging.AbstractLoggingSystem.LogLevels",
            "pkg": "org.springframework.boot.logging",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/AbstractLoggingSystem.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "workerThreads",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.embedded.undertow.UndertowWebServerFactoryDelegate",
            "pkg": "org.springframework.boot.web.embedded.undertow",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowWebServerFactoryDelegate.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "beanFactory",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.TypeExcludeFilter",
            "pkg": "org.springframework.boot.context",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/TypeExcludeFilter.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "readTimeout",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder",
            "pkg": "org.springframework.boot.webservices.client",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/webservices/client/HttpWebServiceMessageSenderBuilder.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "beanName",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.jta.atomikos.AtomikosDataSourceBean",
            "pkg": "org.springframework.boot.jta.atomikos",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jta/atomikos/AtomikosDataSourceBean.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "get(org.springframework.core.env.PropertySource<?>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor.JsonPropertyValue",
            "pkg": "org.springframework.boot.env",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/env/SpringApplicationJsonEnvironmentPostProcessor.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "location",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.MultipartConfigFactory",
            "pkg": "org.springframework.boot.web.servlet",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/MultipartConfigFactory.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "connectTimeout",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder",
            "pkg": "org.springframework.boot.webservices.client",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/webservices/client/HttpWebServiceMessageSenderBuilder.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "ASSIGN_FIELD_NULLABLE",
            "method": "",
            "param": "springBootLogging",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.logging.LoggingApplicationListener",
            "pkg": "org.springframework.boot.context.logging",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/logging/LoggingApplicationListener.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "loadSessionAttributes(java.lang.String,java.lang.ClassLoader)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.embedded.undertow.FileSessionPersistence",
            "pkg": "org.springframework.boot.web.embedded.undertow",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/FileSessionPersistence.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "forceResponse",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.server.Encoding",
            "pkg": "org.springframework.boot.web.servlet.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/server/Encoding.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "get(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.server.MimeMappings",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/MimeMappings.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "from(org.springframework.core.env.PropertySource<?>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.source.ConfigurationPropertySource",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertySource.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'configurationPropertySource' where @NonNull is required"
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getParent()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.origin.Origin",
            "pkg": "org.springframework.boot.origin",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/origin/Origin.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "resolvePlaceholder(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/PropertySourcesPlaceholdersResolver.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "fetchIfNecessary()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.config.ConfigDataEnvironmentContributor.ContributorIterator",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigDataEnvironmentContributor.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field next (line 350) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "ApplicationHome(java.lang.Class<?>)",
            "param": "sourceClass",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.system.ApplicationHome",
            "pkg": "org.springframework.boot.system",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/system/ApplicationHome.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "createURLStreamHandler(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.embedded.tomcat.SslStoreProviderUrlStreamHandlerFactory",
            "pkg": "org.springframework.boot.web.embedded.tomcat",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/SslStoreProviderUrlStreamHandlerFactory.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.convert.DurationToNumberConverter",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/DurationToNumberConverter.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.convert.DelimitedStringToArrayConverter",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/DelimitedStringToArrayConverter.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "charset",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.view.MustacheViewResolver",
            "pkg": "org.springframework.boot.web.servlet.view",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/view/MustacheViewResolver.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'this.charset' where @NonNull is required"
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "type",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.jdbc.DataSourceBuilder",
            "pkg": "org.springframework.boot.jdbc",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/DataSourceBuilder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field preferredDataSourceSettings (line 173) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getImageBanner(org.springframework.core.env.Environment)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.SpringApplicationBannerPrinter",
            "pkg": "org.springframework.boot",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplicationBannerPrinter.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'getImageBanner(environment)' where @NonNull is required"
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getPortFromChannel(org.xnio.channels.BoundChannel)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.embedded.undertow.UndertowWebServer",
            "pkg": "org.springframework.boot.web.embedded.undertow",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowWebServer.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields undertow (line 62), gracefulShutdown (line 66), closeables (line 68) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)",
            "param": "source",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.convert.StringToDataSizeConverter",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/StringToDataSizeConverter.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getProperty(org.springframework.boot.context.event.SpringApplicationEvent,java.util.List<org.springframework.boot.context.ApplicationPidFileWriter.Property>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.ApplicationPidFileWriter",
            "pkg": "org.springframework.boot.context",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/ApplicationPidFileWriter.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getEnvironment(org.springframework.boot.context.event.SpringApplicationEvent)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.ApplicationPidFileWriter.SpringProperty",
            "pkg": "org.springframework.boot.context",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/ApplicationPidFileWriter.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getTempDirectory()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory",
            "pkg": "org.springframework.boot.web.embedded.jetty",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/jetty/JettyServletWebServerFactory.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields resourceLoader (line 96), threadPool (line 98) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields resourceLoader (line 96), threadPool (line 98) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields resourceLoader (line 96), threadPool (line 98) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getProperty(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.config.FilteredPropertySource",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/FilteredPropertySource.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getExceptionName()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.server.ErrorPage",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/ErrorPage.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields status (line 26), exception (line 28) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field status (line 26) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field exception (line 28) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getTargetDataSource(javax.sql.DataSource)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.jdbc.DataSourceUnwrapper.DelegatingDataSourceUnwrapper",
            "pkg": "org.springframework.boot.jdbc",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/DataSourceUnwrapper.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "content",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.env.ConfigTreePropertySource.PropertyFileContent",
            "pkg": "org.springframework.boot.env",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/env/ConfigTreePropertySource.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field cachedContent (line 157) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.convert.PeriodToStringConverter",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/PeriodToStringConverter.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "beanFactory",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.jackson.JsonComponentModule",
            "pkg": "org.springframework.boot.jackson",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jackson/JsonComponentModule.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getData()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.env.OriginTrackedYamlLoader.OriginTrackingConstructor",
            "pkg": "org.springframework.boot.env",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/env/OriginTrackedYamlLoader.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "findConfigurationProperty(org.springframework.boot.context.properties.source.ConfigurationPropertyName)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertySourcesPropertySource.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "dir",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.system.ApplicationTemp",
            "pkg": "org.springframework.boot.system",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/system/ApplicationTemp.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<T>unwrap(javax.sql.DataSource,java.lang.Class<T>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.jdbc.DataSourceUnwrapper",
            "pkg": "org.springframework.boot.jdbc",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/DataSourceUnwrapper.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)",
            "param": "source",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.convert.StringToDurationConverter",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/StringToDurationConverter.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "extractBeanNames(org.springframework.beans.factory.NoUniqueBeanDefinitionException)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzer",
            "pkg": "org.springframework.boot.diagnostics.analyzer",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/NoUniqueBeanDefinitionFailureAnalyzer.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "cached",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.bind.JavaBeanBinder.Bean",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/JavaBeanBinder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field instance (line 245) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields getter (line 270), setter (line 272), field (line 274) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "get(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.logging.LoggerGroups",
            "pkg": "org.springframework.boot.logging",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/LoggerGroups.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getProperty(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertySourcesPropertySource.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "ApplicationConversionService(org.springframework.util.StringValueResolver)",
            "param": "embeddedValueResolver",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.convert.ApplicationConversionService",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/ApplicationConversionService.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)",
            "param": "source",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.convert.StringToPeriodConverter",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/StringToPeriodConverter.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "findContextHandler(org.eclipse.jetty.server.Handler)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.embedded.jetty.JettyWebServer",
            "pkg": "org.springframework.boot.web.embedded.jetty",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/jetty/JettyWebServer.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "FailureAnalyzers(org.springframework.context.ConfigurableApplicationContext,java.lang.ClassLoader)",
            "param": "classLoader",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.diagnostics.FailureAnalyzers",
            "pkg": "org.springframework.boot.diagnostics",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/FailureAnalyzers.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "findCycle(java.lang.Throwable)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer",
            "pkg": "org.springframework.boot.diagnostics.analyzer",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/BeanCurrentlyInCreationFailureAnalyzer.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getShutdownHandler()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.logging.LoggingSystem",
            "pkg": "org.springframework.boot.logging",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/LoggingSystem.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getSubName(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem",
            "pkg": "org.springframework.boot.logging.log4j2",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/log4j2/Log4J2LoggingSystem.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "consoleAvailable",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.ansi.AnsiOutput",
            "pkg": "org.springframework.boot.ansi",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/ansi/AnsiOutput.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getResource(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory.LoaderHidingResourceManager",
            "pkg": "org.springframework.boot.web.embedded.undertow",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowServletWebServerFactory.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 82) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 82) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 82) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getConfigurationProperty(org.springframework.boot.context.properties.source.ConfigurationPropertyName)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.source.SpringIterableConfigurationPropertySource",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/SpringIterableConfigurationPropertySource.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field configurationPropertyNames (line 51) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.context.properties.source.SpringConfigurationPropertySource.getConfigurationProperty(org.springframework.boot.context.properties.source.ConfigurationPropertyName) returns @NonNull",
                "(Covered) initializer method does not guarantee @NonNull fields mappings (line 187), reverseMappings (line 189), descendants (line 191), configurationPropertyNames (line 193), lastUpdated (line 195) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "load(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer",
            "pkg": "org.springframework.boot.diagnostics.analyzer",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/NoSuchMethodFailureAnalyzer.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "toFile(java.net.URL)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.servlet.server.StaticResourceJars",
            "pkg": "org.springframework.boot.web.servlet.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/server/StaticResourceJars.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "loadFromParent(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedWebappClassLoader",
            "pkg": "org.springframework.boot.web.embedded.tomcat",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatEmbeddedWebappClassLoader.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<A>getAnnotation(java.lang.Class<A>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.Bindable",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Bindable.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "<T>append(java.util.Set<T>,java.lang.Iterable<? extends T>)",
            "param": "set",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.task.TaskExecutorBuilder",
            "pkg": "org.springframework.boot.task",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/task/TaskExecutorBuilder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields queueCapacity (line 37), corePoolSize (line 39), maxPoolSize (line 41), allowCoreThreadTimeOut (line 43), keepAlive (line 45), awaitTermination (line 47), awaitTerminationPeriod (line 49), threadNamePrefix (line 51), taskDecorator (line 53), customizers (line 55) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<T>bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable<T>,org.springframework.boot.context.properties.bind.Binder.Context,org.springframework.boot.context.properties.bind.DataObjectPropertyBinder)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.ValueObjectBinder",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/ValueObjectBinder.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.context.properties.bind.DataObjectBinder.<T>bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable<T>,org.springframework.boot.context.properties.bind.Binder.Context,org.springframework.boot.context.properties.bind.DataObjectPropertyBinder) returns @NonNull"
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<C>findMostNestedCause(java.lang.Throwable,java.lang.Class<C>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.diagnostics.analyzer.AbstractInjectionFailureAnalyzer",
            "pkg": "org.springframework.boot.diagnostics.analyzer",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/AbstractInjectionFailureAnalyzer.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getValidationTarget(org.springframework.boot.context.properties.bind.Bindable<?>,org.springframework.boot.context.properties.bind.BindContext,java.lang.Object)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler",
            "pkg": "org.springframework.boot.context.properties.bind.validation",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/validation/ValidationBindHandler.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field exception (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field exception (line 50) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getIndexed(org.springframework.boot.context.properties.source.ConfigurationPropertyName)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.handler.NoUnboundElementsBindHandler",
            "pkg": "org.springframework.boot.context.properties.bind.handler",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/handler/NoUnboundElementsBindHandler.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "Binder(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>,org.springframework.boot.context.properties.bind.BindHandler)",
            "param": "defaultBindHandler",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.properties.bind.Binder",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Binder.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'defaultBindHandler' where @NonNull is required",
                "(Covered) initializer method does not guarantee @NonNull field configurationProperty (line 520) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "resolvePlaceholder(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.config.ConfigDataEnvironmentContributorPlaceholdersResolver",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigDataEnvironmentContributorPlaceholdersResolver.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getRange(java.lang.String,java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.env.RandomValuePropertySource",
            "pkg": "org.springframework.boot.env",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/env/RandomValuePropertySource.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "unwrap(java.util.Set<org.springframework.boot.web.servlet.server.Session.SessionTrackingMode>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory.SessionConfiguringInitializer",
            "pkg": "org.springframework.boot.web.servlet.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactory.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field displayName (line 55) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field displayName (line 55) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field displayName (line 55) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<T>getDefaultValue(org.springframework.boot.context.properties.bind.Binder.Context,org.springframework.boot.context.properties.bind.ValueObjectBinder.ConstructorParameter)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.ValueObjectBinder",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/ValueObjectBinder.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.convert.DelimitedStringToCollectionConverter",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/DelimitedStringToCollectionConverter.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "disposableServer",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.embedded.netty.NettyWebServer",
            "pkg": "org.springframework.boot.web.embedded.netty",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/netty/NettyWebServer.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field gracefulShutdown (line 66) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "address",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.rsocket.netty.NettyRSocketServerFactory",
            "pkg": "org.springframework.boot.rsocket.netty",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/rsocket/netty/NettyRSocketServerFactory.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "convertLoggerConfig(java.lang.String,org.apache.logging.log4j.core.config.LoggerConfig)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem",
            "pkg": "org.springframework.boot.logging.log4j2",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/log4j2/Log4J2LoggingSystem.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "setErrorAttributes(javax.servlet.http.HttpServletRequest,int,java.lang.String)",
            "param": "message",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.web.servlet.support.ErrorPageFilter",
            "pkg": "org.springframework.boot.web.servlet.support",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/support/ErrorPageFilter.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field message (line 304) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "resourceFactory",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.rsocket.netty.NettyRSocketServerFactory",
            "pkg": "org.springframework.boot.rsocket.netty",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/rsocket/netty/NettyRSocketServerFactory.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getExistingIfPossible(java.util.function.Supplier<java.util.Collection<java.lang.Object>>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.CollectionBinder",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/CollectionBinder.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getIdle()",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadata",
            "pkg": "org.springframework.boot.jdbc.metadata",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/metadata/DataSourcePoolMetadata.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.convert.DurationToStringConverter",
            "pkg": "org.springframework.boot.convert",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/convert/DurationToStringConverter.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "instance",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.bind.JavaBeanBinder.BeanSupplier",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/JavaBeanBinder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields getter (line 270), setter (line 272), field (line 274) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "requestFactorySupplier",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.webservices.client.HttpWebServiceMessageSenderBuilder",
            "pkg": "org.springframework.boot.webservices.client",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/webservices/client/HttpWebServiceMessageSenderBuilder.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "shutdownThread",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.embedded.netty.GracefulShutdown",
            "pkg": "org.springframework.boot.web.embedded.netty",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/netty/GracefulShutdown.java",
            "errors": [
                "dereferenced expression this.shutdownThread is @Nullable"
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "determineMultipartConfig(org.springframework.beans.factory.annotation.AnnotatedBeanDefinition)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.servlet.WebServletHandler",
            "pkg": "org.springframework.boot.web.servlet",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/WebServletHandler.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "extractUrlPatterns(java.util.Map<java.lang.String,java.lang.Object>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.servlet.ServletComponentHandler",
            "pkg": "org.springframework.boot.web.servlet",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/ServletComponentHandler.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "elementsOf(java.lang.CharSequence,boolean,int)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyName",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field string (line 43) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field resolved (line 812) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "destination",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.logging.DeferredLog",
            "pkg": "org.springframework.boot.logging",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/DeferredLog.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field destinationSupplier (line 36) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "handleRunFailure(org.springframework.context.ConfigurableApplicationContext,java.lang.Throwable,org.springframework.boot.SpringApplicationRunListeners)",
            "param": "listeners",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.SpringApplication",
            "pkg": "org.springframework.boot",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringApplication.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields banner (line 146), beanNameGenerator (line 150), environment (line 152), initializers (line 160), listeners (line 162), defaultProperties (line 164) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "ConfigDataProperties(java.util.List<org.springframework.boot.context.config.ConfigDataLocation>,org.springframework.boot.context.config.ConfigDataProperties.Activate)",
            "param": "imports",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.config.ConfigDataProperties",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigDataProperties.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'imports' where @NonNull is required"
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "<T>bind(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Bindable<T>,org.springframework.boot.context.properties.bind.BindHandler)",
            "param": "handler",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.properties.bind.Binder",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Binder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field configurationProperty (line 520) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor)",
            "param": "sourceType",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.properties.bind.BindConverter.CompositeConversionService",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/BindConverter.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "determineName(java.util.Map<java.lang.String,java.lang.Object>,org.springframework.beans.factory.config.BeanDefinition)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.servlet.WebFilterHandler",
            "pkg": "org.springframework.boot.web.servlet",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/WebFilterHandler.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "string",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.source.ConfigurationPropertyName",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/ConfigurationPropertyName.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field resolved (line 812) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "add(java.lang.String,java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.server.MimeMappings",
            "pkg": "org.springframework.boot.web.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/server/MimeMappings.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "callIfPossible(java.util.concurrent.Callable<java.lang.Object>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.StartupInfoLogger",
            "pkg": "org.springframework.boot",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/StartupInfoLogger.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "force",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.server.Encoding",
            "pkg": "org.springframework.boot.web.servlet.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/server/Encoding.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "findResource(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedWebappClassLoader",
            "pkg": "org.springframework.boot.web.embedded.tomcat",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatEmbeddedWebappClassLoader.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "ssl",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.rsocket.netty.NettyRSocketServerFactory",
            "pkg": "org.springframework.boot.rsocket.netty",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/rsocket/netty/NettyRSocketServerFactory.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "determineMessage(java.lang.Throwable,org.springframework.core.annotation.MergedAnnotation<org.springframework.web.bind.annotation.ResponseStatus>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.reactive.error.DefaultErrorAttributes",
            "pkg": "org.springframework.boot.web.reactive.error",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/reactive/error/DefaultErrorAttributes.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field includeException (line 45) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getServerNamespace(org.springframework.context.ApplicationContext)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.context.WebServerPortFileWriter",
            "pkg": "org.springframework.boot.web.context",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/context/WebServerPortFileWriter.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "objectMapper",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.json.JacksonJsonParser",
            "pkg": "org.springframework.boot.json",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/json/JacksonJsonParser.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "findFailedInjectionPoint(org.springframework.beans.factory.BeanCreationException)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer.BeanInCycle",
            "pkg": "org.springframework.boot.diagnostics.analyzer",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/BeanCurrentlyInCreationFailureAnalyzer.java",
            "errors": [],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "Binder(java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertySource>,org.springframework.boot.context.properties.bind.PlaceholdersResolver,org.springframework.core.convert.ConversionService,java.util.function.Consumer<org.springframework.beans.PropertyEditorRegistry>)",
            "param": "propertyEditorInitializer",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.properties.bind.Binder",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Binder.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'propertyEditorInitializer' where @NonNull is required",
                "(Covered) initializer method does not guarantee @NonNull field configurationProperty (line 520) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getResource(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory.MetaInfResourcesResourceManager",
            "pkg": "org.springframework.boot.web.embedded.undertow",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowServletWebServerFactory.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 82) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 82) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 82) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -1
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "baseDirectory",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory",
            "pkg": "org.springframework.boot.web.embedded.tomcat",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/tomcat/TomcatReactiveWebServerFactory.java",
            "errors": [],
            "jump": -2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "asResolvedSet(java.lang.String,java.lang.String)",
            "param": "fallback",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.config.ConfigFileApplicationListener.Loader",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigFileApplicationListener.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields searchLocations (line 142), names (line 144) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull fields profiles (line 268), processedProfiles (line 270), loaded (line 274) are initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "basePackages",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext",
            "pkg": "org.springframework.boot.web.reactive.context",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/reactive/context/AnnotationConfigReactiveWebServerApplicationContext.java",
            "errors": [],
            "jump": -2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getBindConstructor(org.springframework.boot.context.properties.bind.Bindable<?>,boolean)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.DefaultBindConstructorProvider",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/DefaultBindConstructorProvider.java",
            "errors": [
                "(Covered) method returns @Nullable, but superclass method org.springframework.boot.context.properties.bind.BindConstructorProvider.getBindConstructor(org.springframework.boot.context.properties.bind.Bindable<?>,boolean) returns @NonNull"
            ],
            "jump": -2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getMetaInfResource(java.net.URL,java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory.MetaInfResourcesResourceManager",
            "pkg": "org.springframework.boot.web.embedded.undertow",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowServletWebServerFactory.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 82) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 82) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field resourceLoader (line 82) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "next",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.config.ConfigDataEnvironmentContributor.ContributorIterator",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigDataEnvironmentContributor.java",
            "errors": [],
            "jump": -2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "displayName",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.server.AbstractServletWebServerFactory",
            "pkg": "org.springframework.boot.web.servlet.server",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/server/AbstractServletWebServerFactory.java",
            "errors": [],
            "jump": -2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "newInstance(org.apache.logging.log4j.core.config.Configuration,java.lang.String[])",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.logging.log4j2.ColorConverter",
            "pkg": "org.springframework.boot.logging.log4j2",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/log4j2/ColorConverter.java",
            "errors": [],
            "jump": -2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "findNode(javax.imageio.metadata.IIOMetadataNode,java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.ImageBanner",
            "pkg": "org.springframework.boot",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/ImageBanner.java",
            "errors": [],
            "jump": -2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "<T>get(org.springframework.boot.context.properties.bind.Bindable<T>,org.springframework.boot.context.properties.bind.BindConstructorProvider,org.springframework.boot.context.properties.bind.Binder.Context)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.ValueObjectBinder.ValueObject",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/ValueObjectBinder.java",
            "errors": [],
            "jump": -2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "PropertySourcesPlaceholdersResolver(java.lang.Iterable<org.springframework.core.env.PropertySource<?>>,org.springframework.util.PropertyPlaceholderHelper)",
            "param": "helper",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.properties.bind.PropertySourcesPlaceholdersResolver",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/PropertySourcesPlaceholdersResolver.java",
            "errors": [],
            "jump": -2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "findProperty(org.springframework.boot.context.properties.source.ConfigurationPropertyName,org.springframework.boot.context.properties.bind.Binder.Context)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.Binder",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/Binder.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull field configurationProperty (line 521) is initialized along all control-flow paths (remember to check for exceptions or early returns)."
            ],
            "jump": -2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "basePackages",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebApplicationContext",
            "pkg": "org.springframework.boot.web.servlet.context",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/context/AnnotationConfigServletWebApplicationContext.java",
            "errors": [],
            "jump": -2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "loadClass(java.lang.ClassLoader,org.springframework.core.type.classreading.MetadataReaderFactory,org.springframework.core.io.Resource)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.liquibase.SpringPackageScanClassResolver",
            "pkg": "org.springframework.boot.liquibase",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/liquibase/SpringPackageScanClassResolver.java",
            "errors": [],
            "jump": -2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "channel",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.rsocket.netty.NettyRSocketServer",
            "pkg": "org.springframework.boot.rsocket.netty",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/rsocket/netty/NettyRSocketServer.java",
            "errors": [],
            "jump": -2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getPropertyEditor(java.lang.Class<?>)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.context.properties.bind.BindConverter.TypeConverterConverter",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/BindConverter.java",
            "errors": [],
            "jump": -2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "next",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.source.SpringConfigurationPropertySources.SourcesIterator",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/SpringConfigurationPropertySources.java",
            "errors": [],
            "jump": -2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "basePackages",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext",
            "pkg": "org.springframework.boot.web.servlet.context",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/context/AnnotationConfigServletWebServerApplicationContext.java",
            "errors": [],
            "jump": -2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "<T>getProperty(org.springframework.core.env.Environment,java.lang.String,java.lang.Class<T>,T)",
            "param": "defaultValue",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.ImageBanner",
            "pkg": "org.springframework.boot",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/ImageBanner.java",
            "errors": [],
            "jump": -2
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "extractClassName(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer",
            "pkg": "org.springframework.boot.diagnostics.analyzer",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/NoSuchMethodFailureAnalyzer.java",
            "errors": [],
            "jump": -3
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "orElse(T)",
            "param": "other",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.properties.bind.BindResult",
            "pkg": "org.springframework.boot.context.properties.bind",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/BindResult.java",
            "errors": [],
            "jump": -3
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "exception",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.bind.validation.ValidationBindHandler",
            "pkg": "org.springframework.boot.context.properties.bind.validation",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/bind/validation/ValidationBindHandler.java",
            "errors": [],
            "jump": -3
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "DatabaseDriver(java.lang.String,java.lang.String)",
            "param": "productName",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.jdbc.DatabaseDriver",
            "pkg": "org.springframework.boot.jdbc",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/DatabaseDriver.java",
            "errors": [
                "(Covered) passing @Nullable parameter 'productName' where @NonNull is required"
            ],
            "jump": -3
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "timeToLive",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.context.properties.source.SoftReferenceConfigurationPropertyCache",
            "pkg": "org.springframework.boot.context.properties.source",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/properties/source/SoftReferenceConfigurationPropertyCache.java",
            "errors": [],
            "jump": -3
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "FIELD_NO_INIT",
            "method": "",
            "param": "resourceLoader",
            "location": "CLASS_FIELD",
            "class": "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory",
            "pkg": "org.springframework.boot.web.embedded.undertow",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/embedded/undertow/UndertowServletWebServerFactory.java",
            "errors": [],
            "jump": -3
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getNoSuchMethodDescriptor(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer",
            "pkg": "org.springframework.boot.diagnostics.analyzer",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/NoSuchMethodFailureAnalyzer.java",
            "errors": [],
            "jump": -4
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "log(org.springframework.boot.logging.LogLevel,java.lang.Object,java.lang.Throwable)",
            "param": "t",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.logging.DeferredLog",
            "pkg": "org.springframework.boot.logging",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/logging/DeferredLog.java",
            "errors": [
                "(Covered) initializer method does not guarantee @NonNull fields destination (line 33), destinationSupplier (line 35) are initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) initializer method does not guarantee @NonNull field destination (line 33) is initialized along all control-flow paths (remember to check for exceptions or early returns).",
                "(Covered) passing @Nullable parameter 't' where @NonNull is required",
                "(Covered) passing @Nullable parameter 't' where @NonNull is required"
            ],
            "jump": -4
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "ConfigDataException(java.lang.String,java.lang.Throwable)",
            "param": "cause",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.context.config.ConfigDataException",
            "pkg": "org.springframework.boot.context.config",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/context/config/ConfigDataException.java",
            "errors": [],
            "jump": -4
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "EmbeddedDatabaseConnection(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType,java.lang.String,java.lang.String,java.lang.String,java.util.function.Predicate<java.lang.String>)",
            "param": "fallbackDriverClass",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.jdbc.EmbeddedDatabaseConnection",
            "pkg": "org.springframework.boot.jdbc",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java",
            "errors": [
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:60: error: ',', '}', or ';' expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:60: error: '}' expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:71: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:73: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:75: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:77: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:79: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:81: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:84: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:86: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:89: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:90: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:91: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:92: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:93: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:99: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:101: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:107: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:109: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:116: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:118: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:119: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:123: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:128: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:138: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:140: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:150: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:153: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:155: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:157: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:159: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:164: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:172: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:175: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:179: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:188: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:192: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:195: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:222: error: class, interface, or enum expected"
            ],
            "jump": -643
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "isEmbedded(java.lang.String,java.lang.String)",
            "param": "url",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.jdbc.EmbeddedDatabaseConnection",
            "pkg": "org.springframework.boot.jdbc",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java",
            "errors": [
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:60: error: ',', '}', or ';' expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:60: error: '}' expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:71: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:73: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:75: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:77: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:79: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:81: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:84: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:89: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:90: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:91: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:92: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:93: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:99: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:101: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:107: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:109: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:116: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:118: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:119: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:123: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:128: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:138: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:140: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:150: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:150: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:153: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:155: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:157: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:159: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:164: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:172: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:175: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:179: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:188: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:192: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:195: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:222: error: class, interface, or enum expected"
            ],
            "jump": -643
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "PASS_NULLABLE",
            "method": "EmbeddedDatabaseConnection(org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType,java.lang.String,java.lang.String,java.util.function.Predicate<java.lang.String>)",
            "param": "type",
            "location": "METHOD_PARAM",
            "class": "org.springframework.boot.jdbc.EmbeddedDatabaseConnection",
            "pkg": "org.springframework.boot.jdbc",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java",
            "errors": [
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:60: error: ',', '}', or ';' expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:60: error: '}' expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:71: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:73: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:75: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:77: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:79: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:81: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:81: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:84: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:89: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:90: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:91: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:92: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:93: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:99: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:101: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:107: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:109: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:116: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:118: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:119: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:123: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:128: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:138: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:140: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:150: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:153: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:155: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:157: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:159: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:164: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:172: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:175: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:179: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:188: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:192: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:195: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:222: error: class, interface, or enum expected"
            ],
            "jump": -643
        },
        {
            "annotation": "javax.annotation.Nullable",
            "reason": "RETURN_NULLABLE",
            "method": "getUrl(java.lang.String)",
            "param": "",
            "location": "METHOD_RETURN",
            "class": "org.springframework.boot.jdbc.EmbeddedDatabaseConnection",
            "pkg": "org.springframework.boot.jdbc",
            "inject": "true",
            "uri": "//tmp/projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java",
            "errors": [
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:60: error: ',', '}', or ';' expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:60: error: '}' expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:71: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:73: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:75: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:77: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:79: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:81: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:84: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:89: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:90: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:91: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:92: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:93: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:99: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:101: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:107: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:109: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:117: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:119: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:120: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:124: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:129: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:139: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:141: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:151: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:154: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:156: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:158: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:160: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:165: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:173: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:176: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:180: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:189: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:193: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:196: error: class, interface, or enum expected",
                "projects/spring-boot/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/EmbeddedDatabaseConnection.java:223: error: class, interface, or enum expected"
            ],
            "jump": -644
        }
    ]
}